// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        (unknown)
// source: gen/proto/basyx_openapi.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/descriptorpb"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type KeyType_Value int32

const (
	KeyType_UNDEFINED  KeyType_Value = 0
	KeyType_CUSTOM     KeyType_Value = 1
	KeyType_IRI        KeyType_Value = 2
	KeyType_URI        KeyType_Value = 3
	KeyType_IRDI       KeyType_Value = 4
	KeyType_IDSHORT    KeyType_Value = 5
	KeyType_FRAGMENTID KeyType_Value = 6
)

// Enum value maps for KeyType_Value.
var (
	KeyType_Value_name = map[int32]string{
		0: "UNDEFINED",
		1: "CUSTOM",
		2: "IRI",
		3: "URI",
		4: "IRDI",
		5: "IDSHORT",
		6: "FRAGMENTID",
	}
	KeyType_Value_value = map[string]int32{
		"UNDEFINED":  0,
		"CUSTOM":     1,
		"IRI":        2,
		"URI":        3,
		"IRDI":       4,
		"IDSHORT":    5,
		"FRAGMENTID": 6,
	}
)

func (x KeyType_Value) Enum() *KeyType_Value {
	p := new(KeyType_Value)
	*p = x
	return p
}

func (x KeyType_Value) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (KeyType_Value) Descriptor() protoreflect.EnumDescriptor {
	return file_gen_proto_basyx_openapi_proto_enumTypes[0].Descriptor()
}

func (KeyType_Value) Type() protoreflect.EnumType {
	return &file_gen_proto_basyx_openapi_proto_enumTypes[0]
}

func (x KeyType_Value) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use KeyType_Value.Descriptor instead.
func (KeyType_Value) EnumDescriptor() ([]byte, []int) {
	return file_gen_proto_basyx_openapi_proto_rawDescGZIP(), []int{0, 0}
}

type AssetKind_Value int32

const (
	AssetKind_TYPE     AssetKind_Value = 0
	AssetKind_INSTANCE AssetKind_Value = 1
)

// Enum value maps for AssetKind_Value.
var (
	AssetKind_Value_name = map[int32]string{
		0: "TYPE",
		1: "INSTANCE",
	}
	AssetKind_Value_value = map[string]int32{
		"TYPE":     0,
		"INSTANCE": 1,
	}
)

func (x AssetKind_Value) Enum() *AssetKind_Value {
	p := new(AssetKind_Value)
	*p = x
	return p
}

func (x AssetKind_Value) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AssetKind_Value) Descriptor() protoreflect.EnumDescriptor {
	return file_gen_proto_basyx_openapi_proto_enumTypes[1].Descriptor()
}

func (AssetKind_Value) Type() protoreflect.EnumType {
	return &file_gen_proto_basyx_openapi_proto_enumTypes[1]
}

func (x AssetKind_Value) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AssetKind_Value.Descriptor instead.
func (AssetKind_Value) EnumDescriptor() ([]byte, []int) {
	return file_gen_proto_basyx_openapi_proto_rawDescGZIP(), []int{7, 0}
}

type KeyElements_Value int32

const (
	KeyElements_UNDEFINED                    KeyElements_Value = 0
	KeyElements_GLOBALREFERENCE              KeyElements_Value = 1
	KeyElements_FRAGMENTREFERENCE            KeyElements_Value = 2
	KeyElements_ACCESSPERMISSIONRULE         KeyElements_Value = 3
	KeyElements_ANNOTATEDRELATIONSHIPELEMENT KeyElements_Value = 4
	KeyElements_BASICEVENT                   KeyElements_Value = 5
	KeyElements_BLOB                         KeyElements_Value = 6
	KeyElements_CAPABILITY                   KeyElements_Value = 7
	KeyElements_CONCEPTDICTIONARY            KeyElements_Value = 8
	KeyElements_DATAELEMENT                  KeyElements_Value = 9
	KeyElements_FILE                         KeyElements_Value = 10
	KeyElements_ENTITY                       KeyElements_Value = 11
	KeyElements_EVENT                        KeyElements_Value = 12
	KeyElements_MULTILANGUAGEPROPERTY        KeyElements_Value = 13
	KeyElements_OPERATION                    KeyElements_Value = 14
	KeyElements_PROPERTY                     KeyElements_Value = 15
	KeyElements_RANGE                        KeyElements_Value = 16
	KeyElements_REFERENCEELEMENT             KeyElements_Value = 17
	KeyElements_RELATIONSHIPELEMENT          KeyElements_Value = 18
	KeyElements_SUBMODELELEMENT              KeyElements_Value = 19
	KeyElements_SUBMODELELEMENTCOLLECTION    KeyElements_Value = 20
	KeyElements_VIEW                         KeyElements_Value = 21
	KeyElements_ASSET                        KeyElements_Value = 22
	KeyElements_ASSETADMINISTRATIONSHELL     KeyElements_Value = 23
	KeyElements_CONCEPTDESCRIPTION           KeyElements_Value = 24
	KeyElements_SUBMODEL                     KeyElements_Value = 25
)

// Enum value maps for KeyElements_Value.
var (
	KeyElements_Value_name = map[int32]string{
		0:  "UNDEFINED",
		1:  "GLOBALREFERENCE",
		2:  "FRAGMENTREFERENCE",
		3:  "ACCESSPERMISSIONRULE",
		4:  "ANNOTATEDRELATIONSHIPELEMENT",
		5:  "BASICEVENT",
		6:  "BLOB",
		7:  "CAPABILITY",
		8:  "CONCEPTDICTIONARY",
		9:  "DATAELEMENT",
		10: "FILE",
		11: "ENTITY",
		12: "EVENT",
		13: "MULTILANGUAGEPROPERTY",
		14: "OPERATION",
		15: "PROPERTY",
		16: "RANGE",
		17: "REFERENCEELEMENT",
		18: "RELATIONSHIPELEMENT",
		19: "SUBMODELELEMENT",
		20: "SUBMODELELEMENTCOLLECTION",
		21: "VIEW",
		22: "ASSET",
		23: "ASSETADMINISTRATIONSHELL",
		24: "CONCEPTDESCRIPTION",
		25: "SUBMODEL",
	}
	KeyElements_Value_value = map[string]int32{
		"UNDEFINED":                    0,
		"GLOBALREFERENCE":              1,
		"FRAGMENTREFERENCE":            2,
		"ACCESSPERMISSIONRULE":         3,
		"ANNOTATEDRELATIONSHIPELEMENT": 4,
		"BASICEVENT":                   5,
		"BLOB":                         6,
		"CAPABILITY":                   7,
		"CONCEPTDICTIONARY":            8,
		"DATAELEMENT":                  9,
		"FILE":                         10,
		"ENTITY":                       11,
		"EVENT":                        12,
		"MULTILANGUAGEPROPERTY":        13,
		"OPERATION":                    14,
		"PROPERTY":                     15,
		"RANGE":                        16,
		"REFERENCEELEMENT":             17,
		"RELATIONSHIPELEMENT":          18,
		"SUBMODELELEMENT":              19,
		"SUBMODELELEMENTCOLLECTION":    20,
		"VIEW":                         21,
		"ASSET":                        22,
		"ASSETADMINISTRATIONSHELL":     23,
		"CONCEPTDESCRIPTION":           24,
		"SUBMODEL":                     25,
	}
)

func (x KeyElements_Value) Enum() *KeyElements_Value {
	p := new(KeyElements_Value)
	*p = x
	return p
}

func (x KeyElements_Value) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (KeyElements_Value) Descriptor() protoreflect.EnumDescriptor {
	return file_gen_proto_basyx_openapi_proto_enumTypes[2].Descriptor()
}

func (KeyElements_Value) Type() protoreflect.EnumType {
	return &file_gen_proto_basyx_openapi_proto_enumTypes[2]
}

func (x KeyElements_Value) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use KeyElements_Value.Descriptor instead.
func (KeyElements_Value) EnumDescriptor() ([]byte, []int) {
	return file_gen_proto_basyx_openapi_proto_rawDescGZIP(), []int{8, 0}
}

type ModelingKind_Value int32

const (
	ModelingKind_INSTANCE ModelingKind_Value = 0
	ModelingKind_TEMPLATE ModelingKind_Value = 1
)

// Enum value maps for ModelingKind_Value.
var (
	ModelingKind_Value_name = map[int32]string{
		0: "INSTANCE",
		1: "TEMPLATE",
	}
	ModelingKind_Value_value = map[string]int32{
		"INSTANCE": 0,
		"TEMPLATE": 1,
	}
)

func (x ModelingKind_Value) Enum() *ModelingKind_Value {
	p := new(ModelingKind_Value)
	*p = x
	return p
}

func (x ModelingKind_Value) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ModelingKind_Value) Descriptor() protoreflect.EnumDescriptor {
	return file_gen_proto_basyx_openapi_proto_enumTypes[3].Descriptor()
}

func (ModelingKind_Value) Type() protoreflect.EnumType {
	return &file_gen_proto_basyx_openapi_proto_enumTypes[3]
}

func (x ModelingKind_Value) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ModelingKind_Value.Descriptor instead.
func (ModelingKind_Value) EnumDescriptor() ([]byte, []int) {
	return file_gen_proto_basyx_openapi_proto_rawDescGZIP(), []int{17, 0}
}

type MessageType_Value int32

const (
	MessageType_UNSPECIFIED MessageType_Value = 0
	MessageType_DEBUG       MessageType_Value = 1
	MessageType_INFORMATION MessageType_Value = 2
	MessageType_WARNING     MessageType_Value = 3
	MessageType_ERROR       MessageType_Value = 4
	MessageType_FATAL       MessageType_Value = 5
	MessageType_EXCEPTION   MessageType_Value = 6
)

// Enum value maps for MessageType_Value.
var (
	MessageType_Value_name = map[int32]string{
		0: "UNSPECIFIED",
		1: "DEBUG",
		2: "INFORMATION",
		3: "WARNING",
		4: "ERROR",
		5: "FATAL",
		6: "EXCEPTION",
	}
	MessageType_Value_value = map[string]int32{
		"UNSPECIFIED": 0,
		"DEBUG":       1,
		"INFORMATION": 2,
		"WARNING":     3,
		"ERROR":       4,
		"FATAL":       5,
		"EXCEPTION":   6,
	}
)

func (x MessageType_Value) Enum() *MessageType_Value {
	p := new(MessageType_Value)
	*p = x
	return p
}

func (x MessageType_Value) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MessageType_Value) Descriptor() protoreflect.EnumDescriptor {
	return file_gen_proto_basyx_openapi_proto_enumTypes[4].Descriptor()
}

func (MessageType_Value) Type() protoreflect.EnumType {
	return &file_gen_proto_basyx_openapi_proto_enumTypes[4]
}

func (x MessageType_Value) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MessageType_Value.Descriptor instead.
func (MessageType_Value) EnumDescriptor() ([]byte, []int) {
	return file_gen_proto_basyx_openapi_proto_rawDescGZIP(), []int{21, 0}
}

type ExecutionState_Value int32

const (
	ExecutionState_INITIATED ExecutionState_Value = 0
	ExecutionState_RUNNING   ExecutionState_Value = 1
	ExecutionState_COMPLETED ExecutionState_Value = 2
	ExecutionState_CANCELED  ExecutionState_Value = 3
	ExecutionState_FAILED    ExecutionState_Value = 4
	ExecutionState_TIMEOUT   ExecutionState_Value = 5
)

// Enum value maps for ExecutionState_Value.
var (
	ExecutionState_Value_name = map[int32]string{
		0: "INITIATED",
		1: "RUNNING",
		2: "COMPLETED",
		3: "CANCELED",
		4: "FAILED",
		5: "TIMEOUT",
	}
	ExecutionState_Value_value = map[string]int32{
		"INITIATED": 0,
		"RUNNING":   1,
		"COMPLETED": 2,
		"CANCELED":  3,
		"FAILED":    4,
		"TIMEOUT":   5,
	}
)

func (x ExecutionState_Value) Enum() *ExecutionState_Value {
	p := new(ExecutionState_Value)
	*p = x
	return p
}

func (x ExecutionState_Value) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ExecutionState_Value) Descriptor() protoreflect.EnumDescriptor {
	return file_gen_proto_basyx_openapi_proto_enumTypes[5].Descriptor()
}

func (ExecutionState_Value) Type() protoreflect.EnumType {
	return &file_gen_proto_basyx_openapi_proto_enumTypes[5]
}

func (x ExecutionState_Value) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ExecutionState_Value.Descriptor instead.
func (ExecutionState_Value) EnumDescriptor() ([]byte, []int) {
	return file_gen_proto_basyx_openapi_proto_rawDescGZIP(), []int{31, 0}
}

type KeyType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value KeyType_Value `protobuf:"varint,1,opt,name=value,proto3,enum=basyx_openapi.KeyType_Value" json:"value,omitempty"`
}

func (x *KeyType) Reset() {
	*x = KeyType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gen_proto_basyx_openapi_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KeyType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KeyType) ProtoMessage() {}

func (x *KeyType) ProtoReflect() protoreflect.Message {
	mi := &file_gen_proto_basyx_openapi_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KeyType.ProtoReflect.Descriptor instead.
func (*KeyType) Descriptor() ([]byte, []int) {
	return file_gen_proto_basyx_openapi_proto_rawDescGZIP(), []int{0}
}

func (x *KeyType) GetValue() KeyType_Value {
	if x != nil {
		return x.Value
	}
	return KeyType_UNDEFINED
}

type Identifier struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	IdType *KeyType `protobuf:"bytes,2,opt,name=id_type,json=idType,proto3" json:"id_type,omitempty"`
}

func (x *Identifier) Reset() {
	*x = Identifier{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gen_proto_basyx_openapi_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Identifier) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Identifier) ProtoMessage() {}

func (x *Identifier) ProtoReflect() protoreflect.Message {
	mi := &file_gen_proto_basyx_openapi_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Identifier.ProtoReflect.Descriptor instead.
func (*Identifier) Descriptor() ([]byte, []int) {
	return file_gen_proto_basyx_openapi_proto_rawDescGZIP(), []int{1}
}

func (x *Identifier) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Identifier) GetIdType() *KeyType {
	if x != nil {
		return x.IdType
	}
	return nil
}

type AdministrativeInformation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Version  string `protobuf:"bytes,1,opt,name=version,proto3" json:"version,omitempty"`
	Revision string `protobuf:"bytes,2,opt,name=revision,proto3" json:"revision,omitempty"`
}

func (x *AdministrativeInformation) Reset() {
	*x = AdministrativeInformation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gen_proto_basyx_openapi_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdministrativeInformation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdministrativeInformation) ProtoMessage() {}

func (x *AdministrativeInformation) ProtoReflect() protoreflect.Message {
	mi := &file_gen_proto_basyx_openapi_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdministrativeInformation.ProtoReflect.Descriptor instead.
func (*AdministrativeInformation) Descriptor() ([]byte, []int) {
	return file_gen_proto_basyx_openapi_proto_rawDescGZIP(), []int{2}
}

func (x *AdministrativeInformation) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *AdministrativeInformation) GetRevision() string {
	if x != nil {
		return x.Revision
	}
	return ""
}

type LangString struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Language string `protobuf:"bytes,1,opt,name=language,proto3" json:"language,omitempty"`
	Text     string `protobuf:"bytes,2,opt,name=text,proto3" json:"text,omitempty"`
}

func (x *LangString) Reset() {
	*x = LangString{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gen_proto_basyx_openapi_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LangString) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LangString) ProtoMessage() {}

func (x *LangString) ProtoReflect() protoreflect.Message {
	mi := &file_gen_proto_basyx_openapi_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LangString.ProtoReflect.Descriptor instead.
func (*LangString) Descriptor() ([]byte, []int) {
	return file_gen_proto_basyx_openapi_proto_rawDescGZIP(), []int{3}
}

func (x *LangString) GetLanguage() string {
	if x != nil {
		return x.Language
	}
	return ""
}

func (x *LangString) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

type IEndpointSecurity struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *IEndpointSecurity) Reset() {
	*x = IEndpointSecurity{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gen_proto_basyx_openapi_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IEndpointSecurity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IEndpointSecurity) ProtoMessage() {}

func (x *IEndpointSecurity) ProtoReflect() protoreflect.Message {
	mi := &file_gen_proto_basyx_openapi_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IEndpointSecurity.ProtoReflect.Descriptor instead.
func (*IEndpointSecurity) Descriptor() ([]byte, []int) {
	return file_gen_proto_basyx_openapi_proto_rawDescGZIP(), []int{4}
}

type IEndpoint struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Address  string             `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	Type     string             `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"`
	Security *IEndpointSecurity `protobuf:"bytes,3,opt,name=security,proto3" json:"security,omitempty"`
}

func (x *IEndpoint) Reset() {
	*x = IEndpoint{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gen_proto_basyx_openapi_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IEndpoint) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IEndpoint) ProtoMessage() {}

func (x *IEndpoint) ProtoReflect() protoreflect.Message {
	mi := &file_gen_proto_basyx_openapi_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IEndpoint.ProtoReflect.Descriptor instead.
func (*IEndpoint) Descriptor() ([]byte, []int) {
	return file_gen_proto_basyx_openapi_proto_rawDescGZIP(), []int{5}
}

func (x *IEndpoint) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *IEndpoint) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *IEndpoint) GetSecurity() *IEndpointSecurity {
	if x != nil {
		return x.Security
	}
	return nil
}

type ModelType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *ModelType) Reset() {
	*x = ModelType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gen_proto_basyx_openapi_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModelType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModelType) ProtoMessage() {}

func (x *ModelType) ProtoReflect() protoreflect.Message {
	mi := &file_gen_proto_basyx_openapi_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModelType.ProtoReflect.Descriptor instead.
func (*ModelType) Descriptor() ([]byte, []int) {
	return file_gen_proto_basyx_openapi_proto_rawDescGZIP(), []int{6}
}

func (x *ModelType) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type AssetKind struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value AssetKind_Value `protobuf:"varint,1,opt,name=value,proto3,enum=basyx_openapi.AssetKind_Value" json:"value,omitempty"`
}

func (x *AssetKind) Reset() {
	*x = AssetKind{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gen_proto_basyx_openapi_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AssetKind) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AssetKind) ProtoMessage() {}

func (x *AssetKind) ProtoReflect() protoreflect.Message {
	mi := &file_gen_proto_basyx_openapi_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AssetKind.ProtoReflect.Descriptor instead.
func (*AssetKind) Descriptor() ([]byte, []int) {
	return file_gen_proto_basyx_openapi_proto_rawDescGZIP(), []int{7}
}

func (x *AssetKind) GetValue() AssetKind_Value {
	if x != nil {
		return x.Value
	}
	return AssetKind_TYPE
}

type KeyElements struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value KeyElements_Value `protobuf:"varint,1,opt,name=value,proto3,enum=basyx_openapi.KeyElements_Value" json:"value,omitempty"`
}

func (x *KeyElements) Reset() {
	*x = KeyElements{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gen_proto_basyx_openapi_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KeyElements) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KeyElements) ProtoMessage() {}

func (x *KeyElements) ProtoReflect() protoreflect.Message {
	mi := &file_gen_proto_basyx_openapi_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KeyElements.ProtoReflect.Descriptor instead.
func (*KeyElements) Descriptor() ([]byte, []int) {
	return file_gen_proto_basyx_openapi_proto_rawDescGZIP(), []int{8}
}

func (x *KeyElements) GetValue() KeyElements_Value {
	if x != nil {
		return x.Value
	}
	return KeyElements_UNDEFINED
}

type Key struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type   *KeyElements `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	IdType *KeyType     `protobuf:"bytes,2,opt,name=id_type,json=idType,proto3" json:"id_type,omitempty"`
	Value  string       `protobuf:"bytes,3,opt,name=value,proto3" json:"value,omitempty"`
	Local  bool         `protobuf:"varint,4,opt,name=local,proto3" json:"local,omitempty"`
}

func (x *Key) Reset() {
	*x = Key{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gen_proto_basyx_openapi_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Key) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Key) ProtoMessage() {}

func (x *Key) ProtoReflect() protoreflect.Message {
	mi := &file_gen_proto_basyx_openapi_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Key.ProtoReflect.Descriptor instead.
func (*Key) Descriptor() ([]byte, []int) {
	return file_gen_proto_basyx_openapi_proto_rawDescGZIP(), []int{9}
}

func (x *Key) GetType() *KeyElements {
	if x != nil {
		return x.Type
	}
	return nil
}

func (x *Key) GetIdType() *KeyType {
	if x != nil {
		return x.IdType
	}
	return nil
}

func (x *Key) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *Key) GetLocal() bool {
	if x != nil {
		return x.Local
	}
	return false
}

type SubmodelReference struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Keys []*Key `protobuf:"bytes,1,rep,name=keys,proto3" json:"keys,omitempty"`
}

func (x *SubmodelReference) Reset() {
	*x = SubmodelReference{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gen_proto_basyx_openapi_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubmodelReference) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubmodelReference) ProtoMessage() {}

func (x *SubmodelReference) ProtoReflect() protoreflect.Message {
	mi := &file_gen_proto_basyx_openapi_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubmodelReference.ProtoReflect.Descriptor instead.
func (*SubmodelReference) Descriptor() ([]byte, []int) {
	return file_gen_proto_basyx_openapi_proto_rawDescGZIP(), []int{10}
}

func (x *SubmodelReference) GetKeys() []*Key {
	if x != nil {
		return x.Keys
	}
	return nil
}

type Reference struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Keys []*Key `protobuf:"bytes,1,rep,name=keys,proto3" json:"keys,omitempty"`
}

func (x *Reference) Reset() {
	*x = Reference{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gen_proto_basyx_openapi_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Reference) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Reference) ProtoMessage() {}

func (x *Reference) ProtoReflect() protoreflect.Message {
	mi := &file_gen_proto_basyx_openapi_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Reference.ProtoReflect.Descriptor instead.
func (*Reference) Descriptor() ([]byte, []int) {
	return file_gen_proto_basyx_openapi_proto_rawDescGZIP(), []int{11}
}

func (x *Reference) GetKeys() []*Key {
	if x != nil {
		return x.Keys
	}
	return nil
}

type IDataSpecificationContent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *IDataSpecificationContent) Reset() {
	*x = IDataSpecificationContent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gen_proto_basyx_openapi_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IDataSpecificationContent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IDataSpecificationContent) ProtoMessage() {}

func (x *IDataSpecificationContent) ProtoReflect() protoreflect.Message {
	mi := &file_gen_proto_basyx_openapi_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IDataSpecificationContent.ProtoReflect.Descriptor instead.
func (*IDataSpecificationContent) Descriptor() ([]byte, []int) {
	return file_gen_proto_basyx_openapi_proto_rawDescGZIP(), []int{12}
}

type IEmbeddedDataSpecification struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HasDataSpecification     *Reference                 `protobuf:"bytes,1,opt,name=has_data_specification,json=hasDataSpecification,proto3" json:"has_data_specification,omitempty"`
	DataSpecificationContent *IDataSpecificationContent `protobuf:"bytes,2,opt,name=data_specification_content,json=dataSpecificationContent,proto3" json:"data_specification_content,omitempty"`
}

func (x *IEmbeddedDataSpecification) Reset() {
	*x = IEmbeddedDataSpecification{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gen_proto_basyx_openapi_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IEmbeddedDataSpecification) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IEmbeddedDataSpecification) ProtoMessage() {}

func (x *IEmbeddedDataSpecification) ProtoReflect() protoreflect.Message {
	mi := &file_gen_proto_basyx_openapi_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IEmbeddedDataSpecification.ProtoReflect.Descriptor instead.
func (*IEmbeddedDataSpecification) Descriptor() ([]byte, []int) {
	return file_gen_proto_basyx_openapi_proto_rawDescGZIP(), []int{13}
}

func (x *IEmbeddedDataSpecification) GetHasDataSpecification() *Reference {
	if x != nil {
		return x.HasDataSpecification
	}
	return nil
}

func (x *IEmbeddedDataSpecification) GetDataSpecificationContent() *IDataSpecificationContent {
	if x != nil {
		return x.DataSpecificationContent
	}
	return nil
}

type Asset struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IdShort                    string                        `protobuf:"bytes,1,opt,name=id_short,json=idShort,proto3" json:"id_short,omitempty"`
	Kind                       *AssetKind                    `protobuf:"bytes,2,opt,name=kind,proto3" json:"kind,omitempty"`
	AssetIdentificationModel   *SubmodelReference            `protobuf:"bytes,3,opt,name=asset_identification_model,json=assetIdentificationModel,proto3" json:"asset_identification_model,omitempty"`
	BillOfMaterial             *SubmodelReference            `protobuf:"bytes,4,opt,name=bill_of_material,json=billOfMaterial,proto3" json:"bill_of_material,omitempty"`
	EmbeddedDataSpecifications []*IEmbeddedDataSpecification `protobuf:"bytes,5,rep,name=embedded_data_specifications,json=embeddedDataSpecifications,proto3" json:"embedded_data_specifications,omitempty"`
	ModelType                  *ModelType                    `protobuf:"bytes,6,opt,name=model_type,json=modelType,proto3" json:"model_type,omitempty"`
	Identification             *Identifier                   `protobuf:"bytes,7,opt,name=identification,proto3" json:"identification,omitempty"`
	Administration             *AdministrativeInformation    `protobuf:"bytes,8,opt,name=administration,proto3" json:"administration,omitempty"`
	Category                   string                        `protobuf:"bytes,9,opt,name=category,proto3" json:"category,omitempty"`
	Description                []*LangString                 `protobuf:"bytes,10,rep,name=description,proto3" json:"description,omitempty"`
}

func (x *Asset) Reset() {
	*x = Asset{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gen_proto_basyx_openapi_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Asset) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Asset) ProtoMessage() {}

func (x *Asset) ProtoReflect() protoreflect.Message {
	mi := &file_gen_proto_basyx_openapi_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Asset.ProtoReflect.Descriptor instead.
func (*Asset) Descriptor() ([]byte, []int) {
	return file_gen_proto_basyx_openapi_proto_rawDescGZIP(), []int{14}
}

func (x *Asset) GetIdShort() string {
	if x != nil {
		return x.IdShort
	}
	return ""
}

func (x *Asset) GetKind() *AssetKind {
	if x != nil {
		return x.Kind
	}
	return nil
}

func (x *Asset) GetAssetIdentificationModel() *SubmodelReference {
	if x != nil {
		return x.AssetIdentificationModel
	}
	return nil
}

func (x *Asset) GetBillOfMaterial() *SubmodelReference {
	if x != nil {
		return x.BillOfMaterial
	}
	return nil
}

func (x *Asset) GetEmbeddedDataSpecifications() []*IEmbeddedDataSpecification {
	if x != nil {
		return x.EmbeddedDataSpecifications
	}
	return nil
}

func (x *Asset) GetModelType() *ModelType {
	if x != nil {
		return x.ModelType
	}
	return nil
}

func (x *Asset) GetIdentification() *Identifier {
	if x != nil {
		return x.Identification
	}
	return nil
}

func (x *Asset) GetAdministration() *AdministrativeInformation {
	if x != nil {
		return x.Administration
	}
	return nil
}

func (x *Asset) GetCategory() string {
	if x != nil {
		return x.Category
	}
	return ""
}

func (x *Asset) GetDescription() []*LangString {
	if x != nil {
		return x.Description
	}
	return nil
}

type SubmodelDescriptor struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IdShort        string                     `protobuf:"bytes,1,opt,name=id_short,json=idShort,proto3" json:"id_short,omitempty"`
	Identification *Identifier                `protobuf:"bytes,2,opt,name=identification,proto3" json:"identification,omitempty"`
	Administration *AdministrativeInformation `protobuf:"bytes,3,opt,name=administration,proto3" json:"administration,omitempty"`
	Description    []*LangString              `protobuf:"bytes,4,rep,name=description,proto3" json:"description,omitempty"`
	SemanticId     *Reference                 `protobuf:"bytes,5,opt,name=semantic_id,json=semanticId,proto3" json:"semantic_id,omitempty"`
	Endpoints      []*IEndpoint               `protobuf:"bytes,6,rep,name=endpoints,proto3" json:"endpoints,omitempty"`
	Category       string                     `protobuf:"bytes,7,opt,name=category,proto3" json:"category,omitempty"`
	ModelType      *ModelType                 `protobuf:"bytes,8,opt,name=model_type,json=modelType,proto3" json:"model_type,omitempty"`
}

func (x *SubmodelDescriptor) Reset() {
	*x = SubmodelDescriptor{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gen_proto_basyx_openapi_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubmodelDescriptor) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubmodelDescriptor) ProtoMessage() {}

func (x *SubmodelDescriptor) ProtoReflect() protoreflect.Message {
	mi := &file_gen_proto_basyx_openapi_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubmodelDescriptor.ProtoReflect.Descriptor instead.
func (*SubmodelDescriptor) Descriptor() ([]byte, []int) {
	return file_gen_proto_basyx_openapi_proto_rawDescGZIP(), []int{15}
}

func (x *SubmodelDescriptor) GetIdShort() string {
	if x != nil {
		return x.IdShort
	}
	return ""
}

func (x *SubmodelDescriptor) GetIdentification() *Identifier {
	if x != nil {
		return x.Identification
	}
	return nil
}

func (x *SubmodelDescriptor) GetAdministration() *AdministrativeInformation {
	if x != nil {
		return x.Administration
	}
	return nil
}

func (x *SubmodelDescriptor) GetDescription() []*LangString {
	if x != nil {
		return x.Description
	}
	return nil
}

func (x *SubmodelDescriptor) GetSemanticId() *Reference {
	if x != nil {
		return x.SemanticId
	}
	return nil
}

func (x *SubmodelDescriptor) GetEndpoints() []*IEndpoint {
	if x != nil {
		return x.Endpoints
	}
	return nil
}

func (x *SubmodelDescriptor) GetCategory() string {
	if x != nil {
		return x.Category
	}
	return ""
}

func (x *SubmodelDescriptor) GetModelType() *ModelType {
	if x != nil {
		return x.ModelType
	}
	return nil
}

type AssetAdministrationShellDescriptor struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IdShort        string                     `protobuf:"bytes,1,opt,name=id_short,json=idShort,proto3" json:"id_short,omitempty"`
	Identification *Identifier                `protobuf:"bytes,2,opt,name=identification,proto3" json:"identification,omitempty"`
	Administration *AdministrativeInformation `protobuf:"bytes,3,opt,name=administration,proto3" json:"administration,omitempty"`
	Description    []*LangString              `protobuf:"bytes,4,rep,name=description,proto3" json:"description,omitempty"`
	Endpoints      []*IEndpoint               `protobuf:"bytes,5,rep,name=endpoints,proto3" json:"endpoints,omitempty"`
	Category       string                     `protobuf:"bytes,6,opt,name=category,proto3" json:"category,omitempty"`
	ModelType      *ModelType                 `protobuf:"bytes,7,opt,name=model_type,json=modelType,proto3" json:"model_type,omitempty"`
	Asset          *Asset                     `protobuf:"bytes,8,opt,name=asset,proto3" json:"asset,omitempty"`
	Submodels      []*SubmodelDescriptor      `protobuf:"bytes,9,rep,name=submodels,proto3" json:"submodels,omitempty"`
}

func (x *AssetAdministrationShellDescriptor) Reset() {
	*x = AssetAdministrationShellDescriptor{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gen_proto_basyx_openapi_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AssetAdministrationShellDescriptor) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AssetAdministrationShellDescriptor) ProtoMessage() {}

func (x *AssetAdministrationShellDescriptor) ProtoReflect() protoreflect.Message {
	mi := &file_gen_proto_basyx_openapi_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AssetAdministrationShellDescriptor.ProtoReflect.Descriptor instead.
func (*AssetAdministrationShellDescriptor) Descriptor() ([]byte, []int) {
	return file_gen_proto_basyx_openapi_proto_rawDescGZIP(), []int{16}
}

func (x *AssetAdministrationShellDescriptor) GetIdShort() string {
	if x != nil {
		return x.IdShort
	}
	return ""
}

func (x *AssetAdministrationShellDescriptor) GetIdentification() *Identifier {
	if x != nil {
		return x.Identification
	}
	return nil
}

func (x *AssetAdministrationShellDescriptor) GetAdministration() *AdministrativeInformation {
	if x != nil {
		return x.Administration
	}
	return nil
}

func (x *AssetAdministrationShellDescriptor) GetDescription() []*LangString {
	if x != nil {
		return x.Description
	}
	return nil
}

func (x *AssetAdministrationShellDescriptor) GetEndpoints() []*IEndpoint {
	if x != nil {
		return x.Endpoints
	}
	return nil
}

func (x *AssetAdministrationShellDescriptor) GetCategory() string {
	if x != nil {
		return x.Category
	}
	return ""
}

func (x *AssetAdministrationShellDescriptor) GetModelType() *ModelType {
	if x != nil {
		return x.ModelType
	}
	return nil
}

func (x *AssetAdministrationShellDescriptor) GetAsset() *Asset {
	if x != nil {
		return x.Asset
	}
	return nil
}

func (x *AssetAdministrationShellDescriptor) GetSubmodels() []*SubmodelDescriptor {
	if x != nil {
		return x.Submodels
	}
	return nil
}

type ModelingKind struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value ModelingKind_Value `protobuf:"varint,1,opt,name=value,proto3,enum=basyx_openapi.ModelingKind_Value" json:"value,omitempty"`
}

func (x *ModelingKind) Reset() {
	*x = ModelingKind{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gen_proto_basyx_openapi_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModelingKind) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModelingKind) ProtoMessage() {}

func (x *ModelingKind) ProtoReflect() protoreflect.Message {
	mi := &file_gen_proto_basyx_openapi_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModelingKind.ProtoReflect.Descriptor instead.
func (*ModelingKind) Descriptor() ([]byte, []int) {
	return file_gen_proto_basyx_openapi_proto_rawDescGZIP(), []int{17}
}

func (x *ModelingKind) GetValue() ModelingKind_Value {
	if x != nil {
		return x.Value
	}
	return ModelingKind_INSTANCE
}

type IConstraint struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ModelType *ModelType `protobuf:"bytes,1,opt,name=model_type,json=modelType,proto3" json:"model_type,omitempty"`
}

func (x *IConstraint) Reset() {
	*x = IConstraint{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gen_proto_basyx_openapi_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IConstraint) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IConstraint) ProtoMessage() {}

func (x *IConstraint) ProtoReflect() protoreflect.Message {
	mi := &file_gen_proto_basyx_openapi_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IConstraint.ProtoReflect.Descriptor instead.
func (*IConstraint) Descriptor() ([]byte, []int) {
	return file_gen_proto_basyx_openapi_proto_rawDescGZIP(), []int{18}
}

func (x *IConstraint) GetModelType() *ModelType {
	if x != nil {
		return x.ModelType
	}
	return nil
}

type ISubmodelElement struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IdShort                    string                        `protobuf:"bytes,1,opt,name=id_short,json=idShort,proto3" json:"id_short,omitempty"`
	SemanticId                 *Reference                    `protobuf:"bytes,2,opt,name=semantic_id,json=semanticId,proto3" json:"semantic_id,omitempty"`
	Constraints                []*IConstraint                `protobuf:"bytes,3,rep,name=constraints,proto3" json:"constraints,omitempty"`
	Description                []*LangString                 `protobuf:"bytes,4,rep,name=description,proto3" json:"description,omitempty"`
	Category                   string                        `protobuf:"bytes,5,opt,name=category,proto3" json:"category,omitempty"`
	Kind                       *ModelingKind                 `protobuf:"bytes,6,opt,name=kind,proto3" json:"kind,omitempty"`
	ModelType                  *ModelType                    `protobuf:"bytes,7,opt,name=model_type,json=modelType,proto3" json:"model_type,omitempty"`
	EmbeddedDataSpecifications []*IEmbeddedDataSpecification `protobuf:"bytes,8,rep,name=embedded_data_specifications,json=embeddedDataSpecifications,proto3" json:"embedded_data_specifications,omitempty"`
}

func (x *ISubmodelElement) Reset() {
	*x = ISubmodelElement{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gen_proto_basyx_openapi_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ISubmodelElement) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ISubmodelElement) ProtoMessage() {}

func (x *ISubmodelElement) ProtoReflect() protoreflect.Message {
	mi := &file_gen_proto_basyx_openapi_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ISubmodelElement.ProtoReflect.Descriptor instead.
func (*ISubmodelElement) Descriptor() ([]byte, []int) {
	return file_gen_proto_basyx_openapi_proto_rawDescGZIP(), []int{19}
}

func (x *ISubmodelElement) GetIdShort() string {
	if x != nil {
		return x.IdShort
	}
	return ""
}

func (x *ISubmodelElement) GetSemanticId() *Reference {
	if x != nil {
		return x.SemanticId
	}
	return nil
}

func (x *ISubmodelElement) GetConstraints() []*IConstraint {
	if x != nil {
		return x.Constraints
	}
	return nil
}

func (x *ISubmodelElement) GetDescription() []*LangString {
	if x != nil {
		return x.Description
	}
	return nil
}

func (x *ISubmodelElement) GetCategory() string {
	if x != nil {
		return x.Category
	}
	return ""
}

func (x *ISubmodelElement) GetKind() *ModelingKind {
	if x != nil {
		return x.Kind
	}
	return nil
}

func (x *ISubmodelElement) GetModelType() *ModelType {
	if x != nil {
		return x.ModelType
	}
	return nil
}

func (x *ISubmodelElement) GetEmbeddedDataSpecifications() []*IEmbeddedDataSpecification {
	if x != nil {
		return x.EmbeddedDataSpecifications
	}
	return nil
}

type Submodel struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IdShort                    string                        `protobuf:"bytes,1,opt,name=id_short,json=idShort,proto3" json:"id_short,omitempty"`
	Kind                       *ModelingKind                 `protobuf:"bytes,2,opt,name=kind,proto3" json:"kind,omitempty"`
	SemanticId                 *Reference                    `protobuf:"bytes,3,opt,name=semantic_id,json=semanticId,proto3" json:"semantic_id,omitempty"`
	SubmodelElements           []*ISubmodelElement           `protobuf:"bytes,4,rep,name=submodel_elements,json=submodelElements,proto3" json:"submodel_elements,omitempty"`
	ModelType                  *ModelType                    `protobuf:"bytes,5,opt,name=model_type,json=modelType,proto3" json:"model_type,omitempty"`
	EmbeddedDataSpecifications []*IEmbeddedDataSpecification `protobuf:"bytes,6,rep,name=embedded_data_specifications,json=embeddedDataSpecifications,proto3" json:"embedded_data_specifications,omitempty"`
	Qualifiers                 []*IConstraint                `protobuf:"bytes,7,rep,name=qualifiers,proto3" json:"qualifiers,omitempty"`
	Identification             *Identifier                   `protobuf:"bytes,8,opt,name=identification,proto3" json:"identification,omitempty"`
	Administration             *AdministrativeInformation    `protobuf:"bytes,9,opt,name=administration,proto3" json:"administration,omitempty"`
	Category                   string                        `protobuf:"bytes,10,opt,name=category,proto3" json:"category,omitempty"`
	Description                []*LangString                 `protobuf:"bytes,11,rep,name=description,proto3" json:"description,omitempty"`
}

func (x *Submodel) Reset() {
	*x = Submodel{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gen_proto_basyx_openapi_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Submodel) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Submodel) ProtoMessage() {}

func (x *Submodel) ProtoReflect() protoreflect.Message {
	mi := &file_gen_proto_basyx_openapi_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Submodel.ProtoReflect.Descriptor instead.
func (*Submodel) Descriptor() ([]byte, []int) {
	return file_gen_proto_basyx_openapi_proto_rawDescGZIP(), []int{20}
}

func (x *Submodel) GetIdShort() string {
	if x != nil {
		return x.IdShort
	}
	return ""
}

func (x *Submodel) GetKind() *ModelingKind {
	if x != nil {
		return x.Kind
	}
	return nil
}

func (x *Submodel) GetSemanticId() *Reference {
	if x != nil {
		return x.SemanticId
	}
	return nil
}

func (x *Submodel) GetSubmodelElements() []*ISubmodelElement {
	if x != nil {
		return x.SubmodelElements
	}
	return nil
}

func (x *Submodel) GetModelType() *ModelType {
	if x != nil {
		return x.ModelType
	}
	return nil
}

func (x *Submodel) GetEmbeddedDataSpecifications() []*IEmbeddedDataSpecification {
	if x != nil {
		return x.EmbeddedDataSpecifications
	}
	return nil
}

func (x *Submodel) GetQualifiers() []*IConstraint {
	if x != nil {
		return x.Qualifiers
	}
	return nil
}

func (x *Submodel) GetIdentification() *Identifier {
	if x != nil {
		return x.Identification
	}
	return nil
}

func (x *Submodel) GetAdministration() *AdministrativeInformation {
	if x != nil {
		return x.Administration
	}
	return nil
}

func (x *Submodel) GetCategory() string {
	if x != nil {
		return x.Category
	}
	return ""
}

func (x *Submodel) GetDescription() []*LangString {
	if x != nil {
		return x.Description
	}
	return nil
}

type MessageType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value MessageType_Value `protobuf:"varint,1,opt,name=value,proto3,enum=basyx_openapi.MessageType_Value" json:"value,omitempty"`
}

func (x *MessageType) Reset() {
	*x = MessageType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gen_proto_basyx_openapi_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageType) ProtoMessage() {}

func (x *MessageType) ProtoReflect() protoreflect.Message {
	mi := &file_gen_proto_basyx_openapi_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageType.ProtoReflect.Descriptor instead.
func (*MessageType) Descriptor() ([]byte, []int) {
	return file_gen_proto_basyx_openapi_proto_rawDescGZIP(), []int{21}
}

func (x *MessageType) GetValue() MessageType_Value {
	if x != nil {
		return x.Value
	}
	return MessageType_UNSPECIFIED
}

type Message struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MessageType *MessageType `protobuf:"bytes,1,opt,name=message_type,json=messageType,proto3" json:"message_type,omitempty"`
	Text        string       `protobuf:"bytes,2,opt,name=text,proto3" json:"text,omitempty"`
	Code        string       `protobuf:"bytes,3,opt,name=code,proto3" json:"code,omitempty"`
}

func (x *Message) Reset() {
	*x = Message{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gen_proto_basyx_openapi_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Message) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Message) ProtoMessage() {}

func (x *Message) ProtoReflect() protoreflect.Message {
	mi := &file_gen_proto_basyx_openapi_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Message.ProtoReflect.Descriptor instead.
func (*Message) Descriptor() ([]byte, []int) {
	return file_gen_proto_basyx_openapi_proto_rawDescGZIP(), []int{22}
}

func (x *Message) GetMessageType() *MessageType {
	if x != nil {
		return x.MessageType
	}
	return nil
}

func (x *Message) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *Message) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

type Entity struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Entity) Reset() {
	*x = Entity{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gen_proto_basyx_openapi_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Entity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Entity) ProtoMessage() {}

func (x *Entity) ProtoReflect() protoreflect.Message {
	mi := &file_gen_proto_basyx_openapi_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Entity.ProtoReflect.Descriptor instead.
func (*Entity) Descriptor() ([]byte, []int) {
	return file_gen_proto_basyx_openapi_proto_rawDescGZIP(), []int{23}
}

type Result struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success     bool       `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	IsException bool       `protobuf:"varint,2,opt,name=is_exception,json=isException,proto3" json:"is_exception,omitempty"`
	Entity      *Entity    `protobuf:"bytes,3,opt,name=entity,proto3" json:"entity,omitempty"`
	EntityType  string     `protobuf:"bytes,4,opt,name=entity_type,json=entityType,proto3" json:"entity_type,omitempty"`
	Messages    []*Message `protobuf:"bytes,5,rep,name=messages,proto3" json:"messages,omitempty"`
}

func (x *Result) Reset() {
	*x = Result{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gen_proto_basyx_openapi_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Result) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Result) ProtoMessage() {}

func (x *Result) ProtoReflect() protoreflect.Message {
	mi := &file_gen_proto_basyx_openapi_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Result.ProtoReflect.Descriptor instead.
func (*Result) Descriptor() ([]byte, []int) {
	return file_gen_proto_basyx_openapi_proto_rawDescGZIP(), []int{24}
}

func (x *Result) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *Result) GetIsException() bool {
	if x != nil {
		return x.IsException
	}
	return false
}

func (x *Result) GetEntity() *Entity {
	if x != nil {
		return x.Entity
	}
	return nil
}

func (x *Result) GetEntityType() string {
	if x != nil {
		return x.EntityType
	}
	return ""
}

func (x *Result) GetMessages() []*Message {
	if x != nil {
		return x.Messages
	}
	return nil
}

type SubmodelElement struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IdShort                    string                        `protobuf:"bytes,1,opt,name=id_short,json=idShort,proto3" json:"id_short,omitempty"`
	SemanticId                 *Reference                    `protobuf:"bytes,2,opt,name=semantic_id,json=semanticId,proto3" json:"semantic_id,omitempty"`
	Qualifiers                 []*IConstraint                `protobuf:"bytes,3,rep,name=qualifiers,proto3" json:"qualifiers,omitempty"`
	Kind                       *ModelingKind                 `protobuf:"bytes,4,opt,name=kind,proto3" json:"kind,omitempty"`
	ModelType                  *ModelType                    `protobuf:"bytes,5,opt,name=model_type,json=modelType,proto3" json:"model_type,omitempty"`
	EmbeddedDataSpecifications []*IEmbeddedDataSpecification `protobuf:"bytes,6,rep,name=embedded_data_specifications,json=embeddedDataSpecifications,proto3" json:"embedded_data_specifications,omitempty"`
	Category                   string                        `protobuf:"bytes,7,opt,name=category,proto3" json:"category,omitempty"`
	Description                []*LangString                 `protobuf:"bytes,8,rep,name=description,proto3" json:"description,omitempty"`
}

func (x *SubmodelElement) Reset() {
	*x = SubmodelElement{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gen_proto_basyx_openapi_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubmodelElement) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubmodelElement) ProtoMessage() {}

func (x *SubmodelElement) ProtoReflect() protoreflect.Message {
	mi := &file_gen_proto_basyx_openapi_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubmodelElement.ProtoReflect.Descriptor instead.
func (*SubmodelElement) Descriptor() ([]byte, []int) {
	return file_gen_proto_basyx_openapi_proto_rawDescGZIP(), []int{25}
}

func (x *SubmodelElement) GetIdShort() string {
	if x != nil {
		return x.IdShort
	}
	return ""
}

func (x *SubmodelElement) GetSemanticId() *Reference {
	if x != nil {
		return x.SemanticId
	}
	return nil
}

func (x *SubmodelElement) GetQualifiers() []*IConstraint {
	if x != nil {
		return x.Qualifiers
	}
	return nil
}

func (x *SubmodelElement) GetKind() *ModelingKind {
	if x != nil {
		return x.Kind
	}
	return nil
}

func (x *SubmodelElement) GetModelType() *ModelType {
	if x != nil {
		return x.ModelType
	}
	return nil
}

func (x *SubmodelElement) GetEmbeddedDataSpecifications() []*IEmbeddedDataSpecification {
	if x != nil {
		return x.EmbeddedDataSpecifications
	}
	return nil
}

func (x *SubmodelElement) GetCategory() string {
	if x != nil {
		return x.Category
	}
	return ""
}

func (x *SubmodelElement) GetDescription() []*LangString {
	if x != nil {
		return x.Description
	}
	return nil
}

type Value struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Value) Reset() {
	*x = Value{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gen_proto_basyx_openapi_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Value) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Value) ProtoMessage() {}

func (x *Value) ProtoReflect() protoreflect.Message {
	mi := &file_gen_proto_basyx_openapi_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Value.ProtoReflect.Descriptor instead.
func (*Value) Descriptor() ([]byte, []int) {
	return file_gen_proto_basyx_openapi_proto_rawDescGZIP(), []int{26}
}

type ElementValue struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value *Value `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *ElementValue) Reset() {
	*x = ElementValue{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gen_proto_basyx_openapi_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ElementValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ElementValue) ProtoMessage() {}

func (x *ElementValue) ProtoReflect() protoreflect.Message {
	mi := &file_gen_proto_basyx_openapi_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ElementValue.ProtoReflect.Descriptor instead.
func (*ElementValue) Descriptor() ([]byte, []int) {
	return file_gen_proto_basyx_openapi_proto_rawDescGZIP(), []int{27}
}

func (x *ElementValue) GetValue() *Value {
	if x != nil {
		return x.Value
	}
	return nil
}

type OperationVariable struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ModelType *ModelType        `protobuf:"bytes,1,opt,name=model_type,json=modelType,proto3" json:"model_type,omitempty"`
	Value     *ISubmodelElement `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *OperationVariable) Reset() {
	*x = OperationVariable{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gen_proto_basyx_openapi_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OperationVariable) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OperationVariable) ProtoMessage() {}

func (x *OperationVariable) ProtoReflect() protoreflect.Message {
	mi := &file_gen_proto_basyx_openapi_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OperationVariable.ProtoReflect.Descriptor instead.
func (*OperationVariable) Descriptor() ([]byte, []int) {
	return file_gen_proto_basyx_openapi_proto_rawDescGZIP(), []int{28}
}

func (x *OperationVariable) GetModelType() *ModelType {
	if x != nil {
		return x.ModelType
	}
	return nil
}

func (x *OperationVariable) GetValue() *ISubmodelElement {
	if x != nil {
		return x.Value
	}
	return nil
}

type InvocationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RequestId         string               `protobuf:"bytes,1,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
	InputArguments    []*OperationVariable `protobuf:"bytes,2,rep,name=input_arguments,json=inputArguments,proto3" json:"input_arguments,omitempty"`
	InoutputArguments []*OperationVariable `protobuf:"bytes,3,rep,name=inoutput_arguments,json=inoutputArguments,proto3" json:"inoutput_arguments,omitempty"`
	Timeout           int32                `protobuf:"varint,4,opt,name=timeout,proto3" json:"timeout,omitempty"`
}

func (x *InvocationRequest) Reset() {
	*x = InvocationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gen_proto_basyx_openapi_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InvocationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InvocationRequest) ProtoMessage() {}

func (x *InvocationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_gen_proto_basyx_openapi_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InvocationRequest.ProtoReflect.Descriptor instead.
func (*InvocationRequest) Descriptor() ([]byte, []int) {
	return file_gen_proto_basyx_openapi_proto_rawDescGZIP(), []int{29}
}

func (x *InvocationRequest) GetRequestId() string {
	if x != nil {
		return x.RequestId
	}
	return ""
}

func (x *InvocationRequest) GetInputArguments() []*OperationVariable {
	if x != nil {
		return x.InputArguments
	}
	return nil
}

func (x *InvocationRequest) GetInoutputArguments() []*OperationVariable {
	if x != nil {
		return x.InoutputArguments
	}
	return nil
}

func (x *InvocationRequest) GetTimeout() int32 {
	if x != nil {
		return x.Timeout
	}
	return 0
}

type OperationResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success     bool       `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	IsException bool       `protobuf:"varint,2,opt,name=is_exception,json=isException,proto3" json:"is_exception,omitempty"`
	Entity      *Entity    `protobuf:"bytes,3,opt,name=entity,proto3" json:"entity,omitempty"`
	EntityType  string     `protobuf:"bytes,4,opt,name=entity_type,json=entityType,proto3" json:"entity_type,omitempty"`
	Messages    []*Message `protobuf:"bytes,5,rep,name=messages,proto3" json:"messages,omitempty"`
}

func (x *OperationResult) Reset() {
	*x = OperationResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gen_proto_basyx_openapi_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OperationResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OperationResult) ProtoMessage() {}

func (x *OperationResult) ProtoReflect() protoreflect.Message {
	mi := &file_gen_proto_basyx_openapi_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OperationResult.ProtoReflect.Descriptor instead.
func (*OperationResult) Descriptor() ([]byte, []int) {
	return file_gen_proto_basyx_openapi_proto_rawDescGZIP(), []int{30}
}

func (x *OperationResult) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *OperationResult) GetIsException() bool {
	if x != nil {
		return x.IsException
	}
	return false
}

func (x *OperationResult) GetEntity() *Entity {
	if x != nil {
		return x.Entity
	}
	return nil
}

func (x *OperationResult) GetEntityType() string {
	if x != nil {
		return x.EntityType
	}
	return ""
}

func (x *OperationResult) GetMessages() []*Message {
	if x != nil {
		return x.Messages
	}
	return nil
}

type ExecutionState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value ExecutionState_Value `protobuf:"varint,1,opt,name=value,proto3,enum=basyx_openapi.ExecutionState_Value" json:"value,omitempty"`
}

func (x *ExecutionState) Reset() {
	*x = ExecutionState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gen_proto_basyx_openapi_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExecutionState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExecutionState) ProtoMessage() {}

func (x *ExecutionState) ProtoReflect() protoreflect.Message {
	mi := &file_gen_proto_basyx_openapi_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExecutionState.ProtoReflect.Descriptor instead.
func (*ExecutionState) Descriptor() ([]byte, []int) {
	return file_gen_proto_basyx_openapi_proto_rawDescGZIP(), []int{31}
}

func (x *ExecutionState) GetValue() ExecutionState_Value {
	if x != nil {
		return x.Value
	}
	return ExecutionState_INITIATED
}

type InvocationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RequestId         string               `protobuf:"bytes,1,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
	InoutputArguments []*OperationVariable `protobuf:"bytes,2,rep,name=inoutput_arguments,json=inoutputArguments,proto3" json:"inoutput_arguments,omitempty"`
	OutputArguments   []*OperationVariable `protobuf:"bytes,3,rep,name=output_arguments,json=outputArguments,proto3" json:"output_arguments,omitempty"`
	OperationResult   *OperationResult     `protobuf:"bytes,4,opt,name=operation_result,json=operationResult,proto3" json:"operation_result,omitempty"`
	ExecutionState    *ExecutionState      `protobuf:"bytes,5,opt,name=execution_state,json=executionState,proto3" json:"execution_state,omitempty"`
}

func (x *InvocationResponse) Reset() {
	*x = InvocationResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gen_proto_basyx_openapi_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InvocationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InvocationResponse) ProtoMessage() {}

func (x *InvocationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_gen_proto_basyx_openapi_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InvocationResponse.ProtoReflect.Descriptor instead.
func (*InvocationResponse) Descriptor() ([]byte, []int) {
	return file_gen_proto_basyx_openapi_proto_rawDescGZIP(), []int{32}
}

func (x *InvocationResponse) GetRequestId() string {
	if x != nil {
		return x.RequestId
	}
	return ""
}

func (x *InvocationResponse) GetInoutputArguments() []*OperationVariable {
	if x != nil {
		return x.InoutputArguments
	}
	return nil
}

func (x *InvocationResponse) GetOutputArguments() []*OperationVariable {
	if x != nil {
		return x.OutputArguments
	}
	return nil
}

func (x *InvocationResponse) GetOperationResult() *OperationResult {
	if x != nil {
		return x.OperationResult
	}
	return nil
}

func (x *InvocationResponse) GetExecutionState() *ExecutionState {
	if x != nil {
		return x.ExecutionState
	}
	return nil
}

type AssetAdministrationShellReference struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Keys []*Key `protobuf:"bytes,1,rep,name=keys,proto3" json:"keys,omitempty"`
}

func (x *AssetAdministrationShellReference) Reset() {
	*x = AssetAdministrationShellReference{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gen_proto_basyx_openapi_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AssetAdministrationShellReference) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AssetAdministrationShellReference) ProtoMessage() {}

func (x *AssetAdministrationShellReference) ProtoReflect() protoreflect.Message {
	mi := &file_gen_proto_basyx_openapi_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AssetAdministrationShellReference.ProtoReflect.Descriptor instead.
func (*AssetAdministrationShellReference) Descriptor() ([]byte, []int) {
	return file_gen_proto_basyx_openapi_proto_rawDescGZIP(), []int{33}
}

func (x *AssetAdministrationShellReference) GetKeys() []*Key {
	if x != nil {
		return x.Keys
	}
	return nil
}

type View struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IdShort           string        `protobuf:"bytes,1,opt,name=id_short,json=idShort,proto3" json:"id_short,omitempty"`
	ContainedElements []*Reference  `protobuf:"bytes,2,rep,name=contained_elements,json=containedElements,proto3" json:"contained_elements,omitempty"`
	SemanticId        *Reference    `protobuf:"bytes,3,opt,name=semantic_id,json=semanticId,proto3" json:"semantic_id,omitempty"`
	Category          string        `protobuf:"bytes,4,opt,name=category,proto3" json:"category,omitempty"`
	Description       []*LangString `protobuf:"bytes,5,rep,name=description,proto3" json:"description,omitempty"`
	ModelType         *ModelType    `protobuf:"bytes,6,opt,name=model_type,json=modelType,proto3" json:"model_type,omitempty"`
}

func (x *View) Reset() {
	*x = View{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gen_proto_basyx_openapi_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *View) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*View) ProtoMessage() {}

func (x *View) ProtoReflect() protoreflect.Message {
	mi := &file_gen_proto_basyx_openapi_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use View.ProtoReflect.Descriptor instead.
func (*View) Descriptor() ([]byte, []int) {
	return file_gen_proto_basyx_openapi_proto_rawDescGZIP(), []int{34}
}

func (x *View) GetIdShort() string {
	if x != nil {
		return x.IdShort
	}
	return ""
}

func (x *View) GetContainedElements() []*Reference {
	if x != nil {
		return x.ContainedElements
	}
	return nil
}

func (x *View) GetSemanticId() *Reference {
	if x != nil {
		return x.SemanticId
	}
	return nil
}

func (x *View) GetCategory() string {
	if x != nil {
		return x.Category
	}
	return ""
}

func (x *View) GetDescription() []*LangString {
	if x != nil {
		return x.Description
	}
	return nil
}

func (x *View) GetModelType() *ModelType {
	if x != nil {
		return x.ModelType
	}
	return nil
}

type ConceptDescriptionReference struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Keys []*Key `protobuf:"bytes,1,rep,name=keys,proto3" json:"keys,omitempty"`
}

func (x *ConceptDescriptionReference) Reset() {
	*x = ConceptDescriptionReference{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gen_proto_basyx_openapi_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConceptDescriptionReference) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConceptDescriptionReference) ProtoMessage() {}

func (x *ConceptDescriptionReference) ProtoReflect() protoreflect.Message {
	mi := &file_gen_proto_basyx_openapi_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConceptDescriptionReference.ProtoReflect.Descriptor instead.
func (*ConceptDescriptionReference) Descriptor() ([]byte, []int) {
	return file_gen_proto_basyx_openapi_proto_rawDescGZIP(), []int{35}
}

func (x *ConceptDescriptionReference) GetKeys() []*Key {
	if x != nil {
		return x.Keys
	}
	return nil
}

type MetaData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AdditionalProperties map[string]string `protobuf:"bytes,1,rep,name=additional_properties,json=additionalProperties,proto3" json:"additional_properties,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *MetaData) Reset() {
	*x = MetaData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gen_proto_basyx_openapi_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MetaData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MetaData) ProtoMessage() {}

func (x *MetaData) ProtoReflect() protoreflect.Message {
	mi := &file_gen_proto_basyx_openapi_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MetaData.ProtoReflect.Descriptor instead.
func (*MetaData) Descriptor() ([]byte, []int) {
	return file_gen_proto_basyx_openapi_proto_rawDescGZIP(), []int{36}
}

func (x *MetaData) GetAdditionalProperties() map[string]string {
	if x != nil {
		return x.AdditionalProperties
	}
	return nil
}

type ConceptDictionary struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IdShort             string                         `protobuf:"bytes,1,opt,name=id_short,json=idShort,proto3" json:"id_short,omitempty"`
	Category            string                         `protobuf:"bytes,2,opt,name=category,proto3" json:"category,omitempty"`
	Description         []*LangString                  `protobuf:"bytes,3,rep,name=description,proto3" json:"description,omitempty"`
	MetaData            *MetaData                      `protobuf:"bytes,4,opt,name=meta_data,json=metaData,proto3" json:"meta_data,omitempty"`
	ConceptDescriptions []*ConceptDescriptionReference `protobuf:"bytes,5,rep,name=concept_descriptions,json=conceptDescriptions,proto3" json:"concept_descriptions,omitempty"`
	ModelType           *ModelType                     `protobuf:"bytes,6,opt,name=model_type,json=modelType,proto3" json:"model_type,omitempty"`
}

func (x *ConceptDictionary) Reset() {
	*x = ConceptDictionary{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gen_proto_basyx_openapi_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConceptDictionary) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConceptDictionary) ProtoMessage() {}

func (x *ConceptDictionary) ProtoReflect() protoreflect.Message {
	mi := &file_gen_proto_basyx_openapi_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConceptDictionary.ProtoReflect.Descriptor instead.
func (*ConceptDictionary) Descriptor() ([]byte, []int) {
	return file_gen_proto_basyx_openapi_proto_rawDescGZIP(), []int{37}
}

func (x *ConceptDictionary) GetIdShort() string {
	if x != nil {
		return x.IdShort
	}
	return ""
}

func (x *ConceptDictionary) GetCategory() string {
	if x != nil {
		return x.Category
	}
	return ""
}

func (x *ConceptDictionary) GetDescription() []*LangString {
	if x != nil {
		return x.Description
	}
	return nil
}

func (x *ConceptDictionary) GetMetaData() *MetaData {
	if x != nil {
		return x.MetaData
	}
	return nil
}

func (x *ConceptDictionary) GetConceptDescriptions() []*ConceptDescriptionReference {
	if x != nil {
		return x.ConceptDescriptions
	}
	return nil
}

func (x *ConceptDictionary) GetModelType() *ModelType {
	if x != nil {
		return x.ModelType
	}
	return nil
}

type AssetAdministrationShell struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IdShort                    string                             `protobuf:"bytes,1,opt,name=id_short,json=idShort,proto3" json:"id_short,omitempty"`
	Asset                      *Asset                             `protobuf:"bytes,2,opt,name=asset,proto3" json:"asset,omitempty"`
	Submodels                  []*Submodel                        `protobuf:"bytes,3,rep,name=submodels,proto3" json:"submodels,omitempty"`
	DerivedFrom                *AssetAdministrationShellReference `protobuf:"bytes,4,opt,name=derived_from,json=derivedFrom,proto3" json:"derived_from,omitempty"`
	Views                      []*View                            `protobuf:"bytes,5,rep,name=views,proto3" json:"views,omitempty"`
	ModelType                  *ModelType                         `protobuf:"bytes,6,opt,name=model_type,json=modelType,proto3" json:"model_type,omitempty"`
	EmbeddedDataSpecifications []*IEmbeddedDataSpecification      `protobuf:"bytes,7,rep,name=embedded_data_specifications,json=embeddedDataSpecifications,proto3" json:"embedded_data_specifications,omitempty"`
	ConceptDictionaries        []*ConceptDictionary               `protobuf:"bytes,8,rep,name=concept_dictionaries,json=conceptDictionaries,proto3" json:"concept_dictionaries,omitempty"`
	Identification             *Identifier                        `protobuf:"bytes,9,opt,name=identification,proto3" json:"identification,omitempty"`
	Administration             *AdministrativeInformation         `protobuf:"bytes,10,opt,name=administration,proto3" json:"administration,omitempty"`
	Category                   string                             `protobuf:"bytes,11,opt,name=category,proto3" json:"category,omitempty"`
	Description                []*LangString                      `protobuf:"bytes,12,rep,name=description,proto3" json:"description,omitempty"`
}

func (x *AssetAdministrationShell) Reset() {
	*x = AssetAdministrationShell{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gen_proto_basyx_openapi_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AssetAdministrationShell) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AssetAdministrationShell) ProtoMessage() {}

func (x *AssetAdministrationShell) ProtoReflect() protoreflect.Message {
	mi := &file_gen_proto_basyx_openapi_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AssetAdministrationShell.ProtoReflect.Descriptor instead.
func (*AssetAdministrationShell) Descriptor() ([]byte, []int) {
	return file_gen_proto_basyx_openapi_proto_rawDescGZIP(), []int{38}
}

func (x *AssetAdministrationShell) GetIdShort() string {
	if x != nil {
		return x.IdShort
	}
	return ""
}

func (x *AssetAdministrationShell) GetAsset() *Asset {
	if x != nil {
		return x.Asset
	}
	return nil
}

func (x *AssetAdministrationShell) GetSubmodels() []*Submodel {
	if x != nil {
		return x.Submodels
	}
	return nil
}

func (x *AssetAdministrationShell) GetDerivedFrom() *AssetAdministrationShellReference {
	if x != nil {
		return x.DerivedFrom
	}
	return nil
}

func (x *AssetAdministrationShell) GetViews() []*View {
	if x != nil {
		return x.Views
	}
	return nil
}

func (x *AssetAdministrationShell) GetModelType() *ModelType {
	if x != nil {
		return x.ModelType
	}
	return nil
}

func (x *AssetAdministrationShell) GetEmbeddedDataSpecifications() []*IEmbeddedDataSpecification {
	if x != nil {
		return x.EmbeddedDataSpecifications
	}
	return nil
}

func (x *AssetAdministrationShell) GetConceptDictionaries() []*ConceptDictionary {
	if x != nil {
		return x.ConceptDictionaries
	}
	return nil
}

func (x *AssetAdministrationShell) GetIdentification() *Identifier {
	if x != nil {
		return x.Identification
	}
	return nil
}

func (x *AssetAdministrationShell) GetAdministration() *AdministrativeInformation {
	if x != nil {
		return x.Administration
	}
	return nil
}

func (x *AssetAdministrationShell) GetCategory() string {
	if x != nil {
		return x.Category
	}
	return ""
}

func (x *AssetAdministrationShell) GetDescription() []*LangString {
	if x != nil {
		return x.Description
	}
	return nil
}

type GETAasSubmodelsSubmodelIdShortParameters struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SubmodelIdShort string `protobuf:"bytes,1,opt,name=submodel_id_short,json=submodelIdShort,proto3" json:"submodel_id_short,omitempty"`
}

func (x *GETAasSubmodelsSubmodelIdShortParameters) Reset() {
	*x = GETAasSubmodelsSubmodelIdShortParameters{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gen_proto_basyx_openapi_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GETAasSubmodelsSubmodelIdShortParameters) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GETAasSubmodelsSubmodelIdShortParameters) ProtoMessage() {}

func (x *GETAasSubmodelsSubmodelIdShortParameters) ProtoReflect() protoreflect.Message {
	mi := &file_gen_proto_basyx_openapi_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GETAasSubmodelsSubmodelIdShortParameters.ProtoReflect.Descriptor instead.
func (*GETAasSubmodelsSubmodelIdShortParameters) Descriptor() ([]byte, []int) {
	return file_gen_proto_basyx_openapi_proto_rawDescGZIP(), []int{39}
}

func (x *GETAasSubmodelsSubmodelIdShortParameters) GetSubmodelIdShort() string {
	if x != nil {
		return x.SubmodelIdShort
	}
	return ""
}

type PutSubmodelToShellParameters struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SubmodelIdShort string    `protobuf:"bytes,1,opt,name=submodel_id_short,json=submodelIdShort,proto3" json:"submodel_id_short,omitempty"`
	Submodel        *Submodel `protobuf:"bytes,2,opt,name=submodel,proto3" json:"submodel,omitempty"`
}

func (x *PutSubmodelToShellParameters) Reset() {
	*x = PutSubmodelToShellParameters{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gen_proto_basyx_openapi_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PutSubmodelToShellParameters) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PutSubmodelToShellParameters) ProtoMessage() {}

func (x *PutSubmodelToShellParameters) ProtoReflect() protoreflect.Message {
	mi := &file_gen_proto_basyx_openapi_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PutSubmodelToShellParameters.ProtoReflect.Descriptor instead.
func (*PutSubmodelToShellParameters) Descriptor() ([]byte, []int) {
	return file_gen_proto_basyx_openapi_proto_rawDescGZIP(), []int{40}
}

func (x *PutSubmodelToShellParameters) GetSubmodelIdShort() string {
	if x != nil {
		return x.SubmodelIdShort
	}
	return ""
}

func (x *PutSubmodelToShellParameters) GetSubmodel() *Submodel {
	if x != nil {
		return x.Submodel
	}
	return nil
}

type DeleteSubmodelFromShellByIdShortParameters struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SubmodelIdShort string `protobuf:"bytes,1,opt,name=submodel_id_short,json=submodelIdShort,proto3" json:"submodel_id_short,omitempty"`
}

func (x *DeleteSubmodelFromShellByIdShortParameters) Reset() {
	*x = DeleteSubmodelFromShellByIdShortParameters{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gen_proto_basyx_openapi_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteSubmodelFromShellByIdShortParameters) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteSubmodelFromShellByIdShortParameters) ProtoMessage() {}

func (x *DeleteSubmodelFromShellByIdShortParameters) ProtoReflect() protoreflect.Message {
	mi := &file_gen_proto_basyx_openapi_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteSubmodelFromShellByIdShortParameters.ProtoReflect.Descriptor instead.
func (*DeleteSubmodelFromShellByIdShortParameters) Descriptor() ([]byte, []int) {
	return file_gen_proto_basyx_openapi_proto_rawDescGZIP(), []int{41}
}

func (x *DeleteSubmodelFromShellByIdShortParameters) GetSubmodelIdShort() string {
	if x != nil {
		return x.SubmodelIdShort
	}
	return ""
}

type GetSubmodelFromShellByIdShortParameters struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SubmodelIdShort string `protobuf:"bytes,1,opt,name=submodel_id_short,json=submodelIdShort,proto3" json:"submodel_id_short,omitempty"`
}

func (x *GetSubmodelFromShellByIdShortParameters) Reset() {
	*x = GetSubmodelFromShellByIdShortParameters{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gen_proto_basyx_openapi_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSubmodelFromShellByIdShortParameters) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSubmodelFromShellByIdShortParameters) ProtoMessage() {}

func (x *GetSubmodelFromShellByIdShortParameters) ProtoReflect() protoreflect.Message {
	mi := &file_gen_proto_basyx_openapi_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSubmodelFromShellByIdShortParameters.ProtoReflect.Descriptor instead.
func (*GetSubmodelFromShellByIdShortParameters) Descriptor() ([]byte, []int) {
	return file_gen_proto_basyx_openapi_proto_rawDescGZIP(), []int{42}
}

func (x *GetSubmodelFromShellByIdShortParameters) GetSubmodelIdShort() string {
	if x != nil {
		return x.SubmodelIdShort
	}
	return ""
}

type ShellGetSubmodelValuesParameters struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SubmodelIdShort string `protobuf:"bytes,1,opt,name=submodel_id_short,json=submodelIdShort,proto3" json:"submodel_id_short,omitempty"`
}

func (x *ShellGetSubmodelValuesParameters) Reset() {
	*x = ShellGetSubmodelValuesParameters{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gen_proto_basyx_openapi_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShellGetSubmodelValuesParameters) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShellGetSubmodelValuesParameters) ProtoMessage() {}

func (x *ShellGetSubmodelValuesParameters) ProtoReflect() protoreflect.Message {
	mi := &file_gen_proto_basyx_openapi_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShellGetSubmodelValuesParameters.ProtoReflect.Descriptor instead.
func (*ShellGetSubmodelValuesParameters) Descriptor() ([]byte, []int) {
	return file_gen_proto_basyx_openapi_proto_rawDescGZIP(), []int{43}
}

func (x *ShellGetSubmodelValuesParameters) GetSubmodelIdShort() string {
	if x != nil {
		return x.SubmodelIdShort
	}
	return ""
}

type ShellGetSubmodelElementsParameters struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SubmodelIdShort string `protobuf:"bytes,1,opt,name=submodel_id_short,json=submodelIdShort,proto3" json:"submodel_id_short,omitempty"`
}

func (x *ShellGetSubmodelElementsParameters) Reset() {
	*x = ShellGetSubmodelElementsParameters{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gen_proto_basyx_openapi_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShellGetSubmodelElementsParameters) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShellGetSubmodelElementsParameters) ProtoMessage() {}

func (x *ShellGetSubmodelElementsParameters) ProtoReflect() protoreflect.Message {
	mi := &file_gen_proto_basyx_openapi_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShellGetSubmodelElementsParameters.ProtoReflect.Descriptor instead.
func (*ShellGetSubmodelElementsParameters) Descriptor() ([]byte, []int) {
	return file_gen_proto_basyx_openapi_proto_rawDescGZIP(), []int{44}
}

func (x *ShellGetSubmodelElementsParameters) GetSubmodelIdShort() string {
	if x != nil {
		return x.SubmodelIdShort
	}
	return ""
}

type ShellGetSubmodelElementByIdShortParameters struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SubmodelIdShort string `protobuf:"bytes,1,opt,name=submodel_id_short,json=submodelIdShort,proto3" json:"submodel_id_short,omitempty"`
	SeIdShortPath   string `protobuf:"bytes,2,opt,name=se_id_short_path,json=seIdShortPath,proto3" json:"se_id_short_path,omitempty"`
}

func (x *ShellGetSubmodelElementByIdShortParameters) Reset() {
	*x = ShellGetSubmodelElementByIdShortParameters{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gen_proto_basyx_openapi_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShellGetSubmodelElementByIdShortParameters) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShellGetSubmodelElementByIdShortParameters) ProtoMessage() {}

func (x *ShellGetSubmodelElementByIdShortParameters) ProtoReflect() protoreflect.Message {
	mi := &file_gen_proto_basyx_openapi_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShellGetSubmodelElementByIdShortParameters.ProtoReflect.Descriptor instead.
func (*ShellGetSubmodelElementByIdShortParameters) Descriptor() ([]byte, []int) {
	return file_gen_proto_basyx_openapi_proto_rawDescGZIP(), []int{45}
}

func (x *ShellGetSubmodelElementByIdShortParameters) GetSubmodelIdShort() string {
	if x != nil {
		return x.SubmodelIdShort
	}
	return ""
}

func (x *ShellGetSubmodelElementByIdShortParameters) GetSeIdShortPath() string {
	if x != nil {
		return x.SeIdShortPath
	}
	return ""
}

type ShellPutSubmodelElementParameters struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SubmodelIdShort  string            `protobuf:"bytes,1,opt,name=submodel_id_short,json=submodelIdShort,proto3" json:"submodel_id_short,omitempty"`
	SeIdShortPath    string            `protobuf:"bytes,2,opt,name=se_id_short_path,json=seIdShortPath,proto3" json:"se_id_short_path,omitempty"`
	ISubmodelElement *ISubmodelElement `protobuf:"bytes,3,opt,name=i_submodel_element,json=iSubmodelElement,proto3" json:"i_submodel_element,omitempty"`
}

func (x *ShellPutSubmodelElementParameters) Reset() {
	*x = ShellPutSubmodelElementParameters{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gen_proto_basyx_openapi_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShellPutSubmodelElementParameters) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShellPutSubmodelElementParameters) ProtoMessage() {}

func (x *ShellPutSubmodelElementParameters) ProtoReflect() protoreflect.Message {
	mi := &file_gen_proto_basyx_openapi_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShellPutSubmodelElementParameters.ProtoReflect.Descriptor instead.
func (*ShellPutSubmodelElementParameters) Descriptor() ([]byte, []int) {
	return file_gen_proto_basyx_openapi_proto_rawDescGZIP(), []int{46}
}

func (x *ShellPutSubmodelElementParameters) GetSubmodelIdShort() string {
	if x != nil {
		return x.SubmodelIdShort
	}
	return ""
}

func (x *ShellPutSubmodelElementParameters) GetSeIdShortPath() string {
	if x != nil {
		return x.SeIdShortPath
	}
	return ""
}

func (x *ShellPutSubmodelElementParameters) GetISubmodelElement() *ISubmodelElement {
	if x != nil {
		return x.ISubmodelElement
	}
	return nil
}

type ShellDeleteSubmodelElementByIdShortParameters struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SubmodelIdShort string `protobuf:"bytes,1,opt,name=submodel_id_short,json=submodelIdShort,proto3" json:"submodel_id_short,omitempty"`
	SeIdShortPath   string `protobuf:"bytes,2,opt,name=se_id_short_path,json=seIdShortPath,proto3" json:"se_id_short_path,omitempty"`
}

func (x *ShellDeleteSubmodelElementByIdShortParameters) Reset() {
	*x = ShellDeleteSubmodelElementByIdShortParameters{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gen_proto_basyx_openapi_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShellDeleteSubmodelElementByIdShortParameters) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShellDeleteSubmodelElementByIdShortParameters) ProtoMessage() {}

func (x *ShellDeleteSubmodelElementByIdShortParameters) ProtoReflect() protoreflect.Message {
	mi := &file_gen_proto_basyx_openapi_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShellDeleteSubmodelElementByIdShortParameters.ProtoReflect.Descriptor instead.
func (*ShellDeleteSubmodelElementByIdShortParameters) Descriptor() ([]byte, []int) {
	return file_gen_proto_basyx_openapi_proto_rawDescGZIP(), []int{47}
}

func (x *ShellDeleteSubmodelElementByIdShortParameters) GetSubmodelIdShort() string {
	if x != nil {
		return x.SubmodelIdShort
	}
	return ""
}

func (x *ShellDeleteSubmodelElementByIdShortParameters) GetSeIdShortPath() string {
	if x != nil {
		return x.SeIdShortPath
	}
	return ""
}

type ShellGetSubmodelElementValueByIdShortParameters struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SubmodelIdShort string `protobuf:"bytes,1,opt,name=submodel_id_short,json=submodelIdShort,proto3" json:"submodel_id_short,omitempty"`
	SeIdShortPath   string `protobuf:"bytes,2,opt,name=se_id_short_path,json=seIdShortPath,proto3" json:"se_id_short_path,omitempty"`
}

func (x *ShellGetSubmodelElementValueByIdShortParameters) Reset() {
	*x = ShellGetSubmodelElementValueByIdShortParameters{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gen_proto_basyx_openapi_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShellGetSubmodelElementValueByIdShortParameters) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShellGetSubmodelElementValueByIdShortParameters) ProtoMessage() {}

func (x *ShellGetSubmodelElementValueByIdShortParameters) ProtoReflect() protoreflect.Message {
	mi := &file_gen_proto_basyx_openapi_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShellGetSubmodelElementValueByIdShortParameters.ProtoReflect.Descriptor instead.
func (*ShellGetSubmodelElementValueByIdShortParameters) Descriptor() ([]byte, []int) {
	return file_gen_proto_basyx_openapi_proto_rawDescGZIP(), []int{48}
}

func (x *ShellGetSubmodelElementValueByIdShortParameters) GetSubmodelIdShort() string {
	if x != nil {
		return x.SubmodelIdShort
	}
	return ""
}

func (x *ShellGetSubmodelElementValueByIdShortParameters) GetSeIdShortPath() string {
	if x != nil {
		return x.SeIdShortPath
	}
	return ""
}

type ShellGetSubmodelElementValueByIdShortOK struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ShellGetSubmodelElementValueByIdShortOK) Reset() {
	*x = ShellGetSubmodelElementValueByIdShortOK{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gen_proto_basyx_openapi_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShellGetSubmodelElementValueByIdShortOK) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShellGetSubmodelElementValueByIdShortOK) ProtoMessage() {}

func (x *ShellGetSubmodelElementValueByIdShortOK) ProtoReflect() protoreflect.Message {
	mi := &file_gen_proto_basyx_openapi_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShellGetSubmodelElementValueByIdShortOK.ProtoReflect.Descriptor instead.
func (*ShellGetSubmodelElementValueByIdShortOK) Descriptor() ([]byte, []int) {
	return file_gen_proto_basyx_openapi_proto_rawDescGZIP(), []int{49}
}

type ShellPutSubmodelElementValueByIdShortRequestBody struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ShellPutSubmodelElementValueByIdShortRequestBody) Reset() {
	*x = ShellPutSubmodelElementValueByIdShortRequestBody{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gen_proto_basyx_openapi_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShellPutSubmodelElementValueByIdShortRequestBody) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShellPutSubmodelElementValueByIdShortRequestBody) ProtoMessage() {}

func (x *ShellPutSubmodelElementValueByIdShortRequestBody) ProtoReflect() protoreflect.Message {
	mi := &file_gen_proto_basyx_openapi_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShellPutSubmodelElementValueByIdShortRequestBody.ProtoReflect.Descriptor instead.
func (*ShellPutSubmodelElementValueByIdShortRequestBody) Descriptor() ([]byte, []int) {
	return file_gen_proto_basyx_openapi_proto_rawDescGZIP(), []int{50}
}

type ShellPutSubmodelElementValueByIdShortParameters struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SubmodelIdShort                                   string                                            `protobuf:"bytes,1,opt,name=submodel_id_short,json=submodelIdShort,proto3" json:"submodel_id_short,omitempty"`
	SeIdShortPath                                     string                                            `protobuf:"bytes,2,opt,name=se_id_short_path,json=seIdShortPath,proto3" json:"se_id_short_path,omitempty"`
	Shell_PutSubmodelElementValueByIdShortRequestBody *ShellPutSubmodelElementValueByIdShortRequestBody `protobuf:"bytes,3,opt,name=shell__put_submodel_element_value_by_id_short_request_body,json=shellPutSubmodelElementValueByIdShortRequestBody,proto3" json:"shell__put_submodel_element_value_by_id_short_request_body,omitempty"`
}

func (x *ShellPutSubmodelElementValueByIdShortParameters) Reset() {
	*x = ShellPutSubmodelElementValueByIdShortParameters{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gen_proto_basyx_openapi_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShellPutSubmodelElementValueByIdShortParameters) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShellPutSubmodelElementValueByIdShortParameters) ProtoMessage() {}

func (x *ShellPutSubmodelElementValueByIdShortParameters) ProtoReflect() protoreflect.Message {
	mi := &file_gen_proto_basyx_openapi_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShellPutSubmodelElementValueByIdShortParameters.ProtoReflect.Descriptor instead.
func (*ShellPutSubmodelElementValueByIdShortParameters) Descriptor() ([]byte, []int) {
	return file_gen_proto_basyx_openapi_proto_rawDescGZIP(), []int{51}
}

func (x *ShellPutSubmodelElementValueByIdShortParameters) GetSubmodelIdShort() string {
	if x != nil {
		return x.SubmodelIdShort
	}
	return ""
}

func (x *ShellPutSubmodelElementValueByIdShortParameters) GetSeIdShortPath() string {
	if x != nil {
		return x.SeIdShortPath
	}
	return ""
}

func (x *ShellPutSubmodelElementValueByIdShortParameters) GetShell_PutSubmodelElementValueByIdShortRequestBody() *ShellPutSubmodelElementValueByIdShortRequestBody {
	if x != nil {
		return x.Shell_PutSubmodelElementValueByIdShortRequestBody
	}
	return nil
}

type ShellInvokeOperationByIdShortParameters struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SubmodelIdShort        string             `protobuf:"bytes,1,opt,name=submodel_id_short,json=submodelIdShort,proto3" json:"submodel_id_short,omitempty"`
	IdShortPathToOperation string             `protobuf:"bytes,2,opt,name=id_short_path_to_operation,json=idShortPathToOperation,proto3" json:"id_short_path_to_operation,omitempty"`
	Async                  bool               `protobuf:"varint,3,opt,name=async,proto3" json:"async,omitempty"`
	InvocationRequest      *InvocationRequest `protobuf:"bytes,4,opt,name=invocation_request,json=invocationRequest,proto3" json:"invocation_request,omitempty"`
}

func (x *ShellInvokeOperationByIdShortParameters) Reset() {
	*x = ShellInvokeOperationByIdShortParameters{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gen_proto_basyx_openapi_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShellInvokeOperationByIdShortParameters) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShellInvokeOperationByIdShortParameters) ProtoMessage() {}

func (x *ShellInvokeOperationByIdShortParameters) ProtoReflect() protoreflect.Message {
	mi := &file_gen_proto_basyx_openapi_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShellInvokeOperationByIdShortParameters.ProtoReflect.Descriptor instead.
func (*ShellInvokeOperationByIdShortParameters) Descriptor() ([]byte, []int) {
	return file_gen_proto_basyx_openapi_proto_rawDescGZIP(), []int{52}
}

func (x *ShellInvokeOperationByIdShortParameters) GetSubmodelIdShort() string {
	if x != nil {
		return x.SubmodelIdShort
	}
	return ""
}

func (x *ShellInvokeOperationByIdShortParameters) GetIdShortPathToOperation() string {
	if x != nil {
		return x.IdShortPathToOperation
	}
	return ""
}

func (x *ShellInvokeOperationByIdShortParameters) GetAsync() bool {
	if x != nil {
		return x.Async
	}
	return false
}

func (x *ShellInvokeOperationByIdShortParameters) GetInvocationRequest() *InvocationRequest {
	if x != nil {
		return x.InvocationRequest
	}
	return nil
}

type ShellGetInvocationResultByIdShortParameters struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SubmodelIdShort        string `protobuf:"bytes,1,opt,name=submodel_id_short,json=submodelIdShort,proto3" json:"submodel_id_short,omitempty"`
	IdShortPathToOperation string `protobuf:"bytes,2,opt,name=id_short_path_to_operation,json=idShortPathToOperation,proto3" json:"id_short_path_to_operation,omitempty"`
	RequestId              string `protobuf:"bytes,3,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
}

func (x *ShellGetInvocationResultByIdShortParameters) Reset() {
	*x = ShellGetInvocationResultByIdShortParameters{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gen_proto_basyx_openapi_proto_msgTypes[53]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShellGetInvocationResultByIdShortParameters) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShellGetInvocationResultByIdShortParameters) ProtoMessage() {}

func (x *ShellGetInvocationResultByIdShortParameters) ProtoReflect() protoreflect.Message {
	mi := &file_gen_proto_basyx_openapi_proto_msgTypes[53]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShellGetInvocationResultByIdShortParameters.ProtoReflect.Descriptor instead.
func (*ShellGetInvocationResultByIdShortParameters) Descriptor() ([]byte, []int) {
	return file_gen_proto_basyx_openapi_proto_rawDescGZIP(), []int{53}
}

func (x *ShellGetInvocationResultByIdShortParameters) GetSubmodelIdShort() string {
	if x != nil {
		return x.SubmodelIdShort
	}
	return ""
}

func (x *ShellGetInvocationResultByIdShortParameters) GetIdShortPathToOperation() string {
	if x != nil {
		return x.IdShortPathToOperation
	}
	return ""
}

func (x *ShellGetInvocationResultByIdShortParameters) GetRequestId() string {
	if x != nil {
		return x.RequestId
	}
	return ""
}

var File_gen_proto_basyx_openapi_proto protoreflect.FileDescriptor

var file_gen_proto_basyx_openapi_proto_rawDesc = []byte{
	0x0a, 0x1d, 0x67, 0x65, 0x6e, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x62, 0x61, 0x73, 0x79,
	0x78, 0x5f, 0x6f, 0x70, 0x65, 0x6e, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x0d, 0x62, 0x61, 0x73, 0x79, 0x78, 0x5f, 0x6f, 0x70, 0x65, 0x6e, 0x61, 0x70, 0x69, 0x1a, 0x1c,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x20, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f,
	0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x9a, 0x01, 0x0a, 0x07,
	0x4b, 0x65, 0x79, 0x54, 0x79, 0x70, 0x65, 0x12, 0x32, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1c, 0x2e, 0x62, 0x61, 0x73, 0x79, 0x78, 0x5f, 0x6f,
	0x70, 0x65, 0x6e, 0x61, 0x70, 0x69, 0x2e, 0x4b, 0x65, 0x79, 0x54, 0x79, 0x70, 0x65, 0x2e, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x5b, 0x0a, 0x05, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x12, 0x0d, 0x0a, 0x09, 0x55, 0x4e, 0x44, 0x45, 0x46, 0x49, 0x4e, 0x45,
	0x44, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x43, 0x55, 0x53, 0x54, 0x4f, 0x4d, 0x10, 0x01, 0x12,
	0x07, 0x0a, 0x03, 0x49, 0x52, 0x49, 0x10, 0x02, 0x12, 0x07, 0x0a, 0x03, 0x55, 0x52, 0x49, 0x10,
	0x03, 0x12, 0x08, 0x0a, 0x04, 0x49, 0x52, 0x44, 0x49, 0x10, 0x04, 0x12, 0x0b, 0x0a, 0x07, 0x49,
	0x44, 0x53, 0x48, 0x4f, 0x52, 0x54, 0x10, 0x05, 0x12, 0x0e, 0x0a, 0x0a, 0x46, 0x52, 0x41, 0x47,
	0x4d, 0x45, 0x4e, 0x54, 0x49, 0x44, 0x10, 0x06, 0x22, 0x4d, 0x0a, 0x0a, 0x49, 0x64, 0x65, 0x6e,
	0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x2f, 0x0a, 0x07, 0x69, 0x64, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x62, 0x61, 0x73, 0x79, 0x78, 0x5f,
	0x6f, 0x70, 0x65, 0x6e, 0x61, 0x70, 0x69, 0x2e, 0x4b, 0x65, 0x79, 0x54, 0x79, 0x70, 0x65, 0x52,
	0x06, 0x69, 0x64, 0x54, 0x79, 0x70, 0x65, 0x22, 0x51, 0x0a, 0x19, 0x41, 0x64, 0x6d, 0x69, 0x6e,
	0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x76, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1a,
	0x0a, 0x08, 0x72, 0x65, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x72, 0x65, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x3c, 0x0a, 0x0a, 0x4c, 0x61,
	0x6e, 0x67, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x61, 0x6e, 0x67,
	0x75, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x61, 0x6e, 0x67,
	0x75, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x65, 0x78, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x74, 0x65, 0x78, 0x74, 0x22, 0x13, 0x0a, 0x11, 0x49, 0x45, 0x6e, 0x64,
	0x70, 0x6f, 0x69, 0x6e, 0x74, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x22, 0x77, 0x0a,
	0x09, 0x49, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x3c, 0x0a, 0x08, 0x73, 0x65, 0x63, 0x75,
	0x72, 0x69, 0x74, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x62, 0x61, 0x73,
	0x79, 0x78, 0x5f, 0x6f, 0x70, 0x65, 0x6e, 0x61, 0x70, 0x69, 0x2e, 0x49, 0x45, 0x6e, 0x64, 0x70,
	0x6f, 0x69, 0x6e, 0x74, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x52, 0x08, 0x73, 0x65,
	0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x22, 0x1f, 0x0a, 0x09, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x62, 0x0a, 0x09, 0x41, 0x73, 0x73, 0x65, 0x74,
	0x4b, 0x69, 0x6e, 0x64, 0x12, 0x34, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x1e, 0x2e, 0x62, 0x61, 0x73, 0x79, 0x78, 0x5f, 0x6f, 0x70, 0x65, 0x6e,
	0x61, 0x70, 0x69, 0x2e, 0x41, 0x73, 0x73, 0x65, 0x74, 0x4b, 0x69, 0x6e, 0x64, 0x2e, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x1f, 0x0a, 0x05, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x12, 0x08, 0x0a, 0x04, 0x54, 0x59, 0x50, 0x45, 0x10, 0x00, 0x12, 0x0c, 0x0a,
	0x08, 0x49, 0x4e, 0x53, 0x54, 0x41, 0x4e, 0x43, 0x45, 0x10, 0x01, 0x22, 0xb8, 0x04, 0x0a, 0x0b,
	0x4b, 0x65, 0x79, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x36, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x20, 0x2e, 0x62, 0x61, 0x73,
	0x79, 0x78, 0x5f, 0x6f, 0x70, 0x65, 0x6e, 0x61, 0x70, 0x69, 0x2e, 0x4b, 0x65, 0x79, 0x45, 0x6c,
	0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x22, 0xf0, 0x03, 0x0a, 0x05, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x0d, 0x0a,
	0x09, 0x55, 0x4e, 0x44, 0x45, 0x46, 0x49, 0x4e, 0x45, 0x44, 0x10, 0x00, 0x12, 0x13, 0x0a, 0x0f,
	0x47, 0x4c, 0x4f, 0x42, 0x41, 0x4c, 0x52, 0x45, 0x46, 0x45, 0x52, 0x45, 0x4e, 0x43, 0x45, 0x10,
	0x01, 0x12, 0x15, 0x0a, 0x11, 0x46, 0x52, 0x41, 0x47, 0x4d, 0x45, 0x4e, 0x54, 0x52, 0x45, 0x46,
	0x45, 0x52, 0x45, 0x4e, 0x43, 0x45, 0x10, 0x02, 0x12, 0x18, 0x0a, 0x14, 0x41, 0x43, 0x43, 0x45,
	0x53, 0x53, 0x50, 0x45, 0x52, 0x4d, 0x49, 0x53, 0x53, 0x49, 0x4f, 0x4e, 0x52, 0x55, 0x4c, 0x45,
	0x10, 0x03, 0x12, 0x20, 0x0a, 0x1c, 0x41, 0x4e, 0x4e, 0x4f, 0x54, 0x41, 0x54, 0x45, 0x44, 0x52,
	0x45, 0x4c, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x53, 0x48, 0x49, 0x50, 0x45, 0x4c, 0x45, 0x4d, 0x45,
	0x4e, 0x54, 0x10, 0x04, 0x12, 0x0e, 0x0a, 0x0a, 0x42, 0x41, 0x53, 0x49, 0x43, 0x45, 0x56, 0x45,
	0x4e, 0x54, 0x10, 0x05, 0x12, 0x08, 0x0a, 0x04, 0x42, 0x4c, 0x4f, 0x42, 0x10, 0x06, 0x12, 0x0e,
	0x0a, 0x0a, 0x43, 0x41, 0x50, 0x41, 0x42, 0x49, 0x4c, 0x49, 0x54, 0x59, 0x10, 0x07, 0x12, 0x15,
	0x0a, 0x11, 0x43, 0x4f, 0x4e, 0x43, 0x45, 0x50, 0x54, 0x44, 0x49, 0x43, 0x54, 0x49, 0x4f, 0x4e,
	0x41, 0x52, 0x59, 0x10, 0x08, 0x12, 0x0f, 0x0a, 0x0b, 0x44, 0x41, 0x54, 0x41, 0x45, 0x4c, 0x45,
	0x4d, 0x45, 0x4e, 0x54, 0x10, 0x09, 0x12, 0x08, 0x0a, 0x04, 0x46, 0x49, 0x4c, 0x45, 0x10, 0x0a,
	0x12, 0x0a, 0x0a, 0x06, 0x45, 0x4e, 0x54, 0x49, 0x54, 0x59, 0x10, 0x0b, 0x12, 0x09, 0x0a, 0x05,
	0x45, 0x56, 0x45, 0x4e, 0x54, 0x10, 0x0c, 0x12, 0x19, 0x0a, 0x15, 0x4d, 0x55, 0x4c, 0x54, 0x49,
	0x4c, 0x41, 0x4e, 0x47, 0x55, 0x41, 0x47, 0x45, 0x50, 0x52, 0x4f, 0x50, 0x45, 0x52, 0x54, 0x59,
	0x10, 0x0d, 0x12, 0x0d, 0x0a, 0x09, 0x4f, 0x50, 0x45, 0x52, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x10,
	0x0e, 0x12, 0x0c, 0x0a, 0x08, 0x50, 0x52, 0x4f, 0x50, 0x45, 0x52, 0x54, 0x59, 0x10, 0x0f, 0x12,
	0x09, 0x0a, 0x05, 0x52, 0x41, 0x4e, 0x47, 0x45, 0x10, 0x10, 0x12, 0x14, 0x0a, 0x10, 0x52, 0x45,
	0x46, 0x45, 0x52, 0x45, 0x4e, 0x43, 0x45, 0x45, 0x4c, 0x45, 0x4d, 0x45, 0x4e, 0x54, 0x10, 0x11,
	0x12, 0x17, 0x0a, 0x13, 0x52, 0x45, 0x4c, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x53, 0x48, 0x49, 0x50,
	0x45, 0x4c, 0x45, 0x4d, 0x45, 0x4e, 0x54, 0x10, 0x12, 0x12, 0x13, 0x0a, 0x0f, 0x53, 0x55, 0x42,
	0x4d, 0x4f, 0x44, 0x45, 0x4c, 0x45, 0x4c, 0x45, 0x4d, 0x45, 0x4e, 0x54, 0x10, 0x13, 0x12, 0x1d,
	0x0a, 0x19, 0x53, 0x55, 0x42, 0x4d, 0x4f, 0x44, 0x45, 0x4c, 0x45, 0x4c, 0x45, 0x4d, 0x45, 0x4e,
	0x54, 0x43, 0x4f, 0x4c, 0x4c, 0x45, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x14, 0x12, 0x08, 0x0a,
	0x04, 0x56, 0x49, 0x45, 0x57, 0x10, 0x15, 0x12, 0x09, 0x0a, 0x05, 0x41, 0x53, 0x53, 0x45, 0x54,
	0x10, 0x16, 0x12, 0x1c, 0x0a, 0x18, 0x41, 0x53, 0x53, 0x45, 0x54, 0x41, 0x44, 0x4d, 0x49, 0x4e,
	0x49, 0x53, 0x54, 0x52, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x53, 0x48, 0x45, 0x4c, 0x4c, 0x10, 0x17,
	0x12, 0x16, 0x0a, 0x12, 0x43, 0x4f, 0x4e, 0x43, 0x45, 0x50, 0x54, 0x44, 0x45, 0x53, 0x43, 0x52,
	0x49, 0x50, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x18, 0x12, 0x0c, 0x0a, 0x08, 0x53, 0x55, 0x42, 0x4d,
	0x4f, 0x44, 0x45, 0x4c, 0x10, 0x19, 0x22, 0x92, 0x01, 0x0a, 0x03, 0x4b, 0x65, 0x79, 0x12, 0x2e,
	0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x62,
	0x61, 0x73, 0x79, 0x78, 0x5f, 0x6f, 0x70, 0x65, 0x6e, 0x61, 0x70, 0x69, 0x2e, 0x4b, 0x65, 0x79,
	0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x2f,
	0x0a, 0x07, 0x69, 0x64, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x16, 0x2e, 0x62, 0x61, 0x73, 0x79, 0x78, 0x5f, 0x6f, 0x70, 0x65, 0x6e, 0x61, 0x70, 0x69, 0x2e,
	0x4b, 0x65, 0x79, 0x54, 0x79, 0x70, 0x65, 0x52, 0x06, 0x69, 0x64, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x22, 0x3b, 0x0a, 0x11, 0x53,
	0x75, 0x62, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65,
	0x12, 0x26, 0x0a, 0x04, 0x6b, 0x65, 0x79, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12,
	0x2e, 0x62, 0x61, 0x73, 0x79, 0x78, 0x5f, 0x6f, 0x70, 0x65, 0x6e, 0x61, 0x70, 0x69, 0x2e, 0x4b,
	0x65, 0x79, 0x52, 0x04, 0x6b, 0x65, 0x79, 0x73, 0x22, 0x33, 0x0a, 0x09, 0x52, 0x65, 0x66, 0x65,
	0x72, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x26, 0x0a, 0x04, 0x6b, 0x65, 0x79, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x62, 0x61, 0x73, 0x79, 0x78, 0x5f, 0x6f, 0x70, 0x65, 0x6e,
	0x61, 0x70, 0x69, 0x2e, 0x4b, 0x65, 0x79, 0x52, 0x04, 0x6b, 0x65, 0x79, 0x73, 0x22, 0x1b, 0x0a,
	0x19, 0x49, 0x44, 0x61, 0x74, 0x61, 0x53, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x22, 0xd4, 0x01, 0x0a, 0x1a, 0x49,
	0x45, 0x6d, 0x62, 0x65, 0x64, 0x64, 0x65, 0x64, 0x44, 0x61, 0x74, 0x61, 0x53, 0x70, 0x65, 0x63,
	0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x4e, 0x0a, 0x16, 0x68, 0x61, 0x73,
	0x5f, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x73, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x62, 0x61, 0x73, 0x79,
	0x78, 0x5f, 0x6f, 0x70, 0x65, 0x6e, 0x61, 0x70, 0x69, 0x2e, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65,
	0x6e, 0x63, 0x65, 0x52, 0x14, 0x68, 0x61, 0x73, 0x44, 0x61, 0x74, 0x61, 0x53, 0x70, 0x65, 0x63,
	0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x66, 0x0a, 0x1a, 0x64, 0x61, 0x74,
	0x61, 0x5f, 0x73, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e,
	0x62, 0x61, 0x73, 0x79, 0x78, 0x5f, 0x6f, 0x70, 0x65, 0x6e, 0x61, 0x70, 0x69, 0x2e, 0x49, 0x44,
	0x61, 0x74, 0x61, 0x53, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x52, 0x18, 0x64, 0x61, 0x74, 0x61, 0x53, 0x70, 0x65,
	0x63, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x22, 0x90, 0x05, 0x0a, 0x05, 0x41, 0x73, 0x73, 0x65, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x69,
	0x64, 0x5f, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x69,
	0x64, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x12, 0x2c, 0x0a, 0x04, 0x6b, 0x69, 0x6e, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x62, 0x61, 0x73, 0x79, 0x78, 0x5f, 0x6f, 0x70, 0x65,
	0x6e, 0x61, 0x70, 0x69, 0x2e, 0x41, 0x73, 0x73, 0x65, 0x74, 0x4b, 0x69, 0x6e, 0x64, 0x52, 0x04,
	0x6b, 0x69, 0x6e, 0x64, 0x12, 0x5e, 0x0a, 0x1a, 0x61, 0x73, 0x73, 0x65, 0x74, 0x5f, 0x69, 0x64,
	0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x62, 0x61, 0x73, 0x79, 0x78,
	0x5f, 0x6f, 0x70, 0x65, 0x6e, 0x61, 0x70, 0x69, 0x2e, 0x53, 0x75, 0x62, 0x6d, 0x6f, 0x64, 0x65,
	0x6c, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x18, 0x61, 0x73, 0x73, 0x65,
	0x74, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d,
	0x6f, 0x64, 0x65, 0x6c, 0x12, 0x4a, 0x0a, 0x10, 0x62, 0x69, 0x6c, 0x6c, 0x5f, 0x6f, 0x66, 0x5f,
	0x6d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20,
	0x2e, 0x62, 0x61, 0x73, 0x79, 0x78, 0x5f, 0x6f, 0x70, 0x65, 0x6e, 0x61, 0x70, 0x69, 0x2e, 0x53,
	0x75, 0x62, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65,
	0x52, 0x0e, 0x62, 0x69, 0x6c, 0x6c, 0x4f, 0x66, 0x4d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c,
	0x12, 0x6b, 0x0a, 0x1c, 0x65, 0x6d, 0x62, 0x65, 0x64, 0x64, 0x65, 0x64, 0x5f, 0x64, 0x61, 0x74,
	0x61, 0x5f, 0x73, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x62, 0x61, 0x73, 0x79, 0x78, 0x5f, 0x6f,
	0x70, 0x65, 0x6e, 0x61, 0x70, 0x69, 0x2e, 0x49, 0x45, 0x6d, 0x62, 0x65, 0x64, 0x64, 0x65, 0x64,
	0x44, 0x61, 0x74, 0x61, 0x53, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x1a, 0x65, 0x6d, 0x62, 0x65, 0x64, 0x64, 0x65, 0x64, 0x44, 0x61, 0x74, 0x61, 0x53,
	0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x37, 0x0a,
	0x0a, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x18, 0x2e, 0x62, 0x61, 0x73, 0x79, 0x78, 0x5f, 0x6f, 0x70, 0x65, 0x6e, 0x61, 0x70,
	0x69, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x52, 0x09, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x12, 0x41, 0x0a, 0x0e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69,
	0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19,
	0x2e, 0x62, 0x61, 0x73, 0x79, 0x78, 0x5f, 0x6f, 0x70, 0x65, 0x6e, 0x61, 0x70, 0x69, 0x2e, 0x49,
	0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x52, 0x0e, 0x69, 0x64, 0x65, 0x6e, 0x74,
	0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x50, 0x0a, 0x0e, 0x61, 0x64, 0x6d,
	0x69, 0x6e, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x28, 0x2e, 0x62, 0x61, 0x73, 0x79, 0x78, 0x5f, 0x6f, 0x70, 0x65, 0x6e, 0x61, 0x70,
	0x69, 0x2e, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x76, 0x65,
	0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0e, 0x61, 0x64, 0x6d,
	0x69, 0x6e, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x63,
	0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63,
	0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x3b, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x62,
	0x61, 0x73, 0x79, 0x78, 0x5f, 0x6f, 0x70, 0x65, 0x6e, 0x61, 0x70, 0x69, 0x2e, 0x4c, 0x61, 0x6e,
	0x67, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x22, 0xc9, 0x03, 0x0a, 0x12, 0x53, 0x75, 0x62, 0x6d, 0x6f, 0x64, 0x65,
	0x6c, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x12, 0x19, 0x0a, 0x08, 0x69,
	0x64, 0x5f, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x69,
	0x64, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x12, 0x41, 0x0a, 0x0e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69,
	0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19,
	0x2e, 0x62, 0x61, 0x73, 0x79, 0x78, 0x5f, 0x6f, 0x70, 0x65, 0x6e, 0x61, 0x70, 0x69, 0x2e, 0x49,
	0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x52, 0x0e, 0x69, 0x64, 0x65, 0x6e, 0x74,
	0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x50, 0x0a, 0x0e, 0x61, 0x64, 0x6d,
	0x69, 0x6e, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x28, 0x2e, 0x62, 0x61, 0x73, 0x79, 0x78, 0x5f, 0x6f, 0x70, 0x65, 0x6e, 0x61, 0x70,
	0x69, 0x2e, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x76, 0x65,
	0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0e, 0x61, 0x64, 0x6d,
	0x69, 0x6e, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x3b, 0x0a, 0x0b, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x19, 0x2e, 0x62, 0x61, 0x73, 0x79, 0x78, 0x5f, 0x6f, 0x70, 0x65, 0x6e, 0x61, 0x70, 0x69,
	0x2e, 0x4c, 0x61, 0x6e, 0x67, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x52, 0x0b, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x39, 0x0a, 0x0b, 0x73, 0x65, 0x6d, 0x61,
	0x6e, 0x74, 0x69, 0x63, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e,
	0x62, 0x61, 0x73, 0x79, 0x78, 0x5f, 0x6f, 0x70, 0x65, 0x6e, 0x61, 0x70, 0x69, 0x2e, 0x52, 0x65,
	0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x0a, 0x73, 0x65, 0x6d, 0x61, 0x6e, 0x74, 0x69,
	0x63, 0x49, 0x64, 0x12, 0x36, 0x0a, 0x09, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73,
	0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x62, 0x61, 0x73, 0x79, 0x78, 0x5f, 0x6f,
	0x70, 0x65, 0x6e, 0x61, 0x70, 0x69, 0x2e, 0x49, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74,
	0x52, 0x09, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x63,
	0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63,
	0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x37, 0x0a, 0x0a, 0x6d, 0x6f, 0x64, 0x65, 0x6c,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x62, 0x61,
	0x73, 0x79, 0x78, 0x5f, 0x6f, 0x70, 0x65, 0x6e, 0x61, 0x70, 0x69, 0x2e, 0x4d, 0x6f, 0x64, 0x65,
	0x6c, 0x54, 0x79, 0x70, 0x65, 0x52, 0x09, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x54, 0x79, 0x70, 0x65,
	0x22, 0x8b, 0x04, 0x0a, 0x22, 0x41, 0x73, 0x73, 0x65, 0x74, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x69,
	0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x68, 0x65, 0x6c, 0x6c, 0x44, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x12, 0x19, 0x0a, 0x08, 0x69, 0x64, 0x5f, 0x73, 0x68,
	0x6f, 0x72, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x69, 0x64, 0x53, 0x68, 0x6f,
	0x72, 0x74, 0x12, 0x41, 0x0a, 0x0e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x62, 0x61, 0x73,
	0x79, 0x78, 0x5f, 0x6f, 0x70, 0x65, 0x6e, 0x61, 0x70, 0x69, 0x2e, 0x49, 0x64, 0x65, 0x6e, 0x74,
	0x69, 0x66, 0x69, 0x65, 0x72, 0x52, 0x0e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x50, 0x0a, 0x0e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x69, 0x73,
	0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e,
	0x62, 0x61, 0x73, 0x79, 0x78, 0x5f, 0x6f, 0x70, 0x65, 0x6e, 0x61, 0x70, 0x69, 0x2e, 0x41, 0x64,
	0x6d, 0x69, 0x6e, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x76, 0x65, 0x49, 0x6e, 0x66, 0x6f,
	0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x69, 0x73,
	0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x3b, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x62,
	0x61, 0x73, 0x79, 0x78, 0x5f, 0x6f, 0x70, 0x65, 0x6e, 0x61, 0x70, 0x69, 0x2e, 0x4c, 0x61, 0x6e,
	0x67, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x36, 0x0a, 0x09, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74,
	0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x62, 0x61, 0x73, 0x79, 0x78, 0x5f,
	0x6f, 0x70, 0x65, 0x6e, 0x61, 0x70, 0x69, 0x2e, 0x49, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e,
	0x74, 0x52, 0x09, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x12, 0x1a, 0x0a, 0x08,
	0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x37, 0x0a, 0x0a, 0x6d, 0x6f, 0x64, 0x65,
	0x6c, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x62,
	0x61, 0x73, 0x79, 0x78, 0x5f, 0x6f, 0x70, 0x65, 0x6e, 0x61, 0x70, 0x69, 0x2e, 0x4d, 0x6f, 0x64,
	0x65, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x52, 0x09, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x2a, 0x0a, 0x05, 0x61, 0x73, 0x73, 0x65, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x14, 0x2e, 0x62, 0x61, 0x73, 0x79, 0x78, 0x5f, 0x6f, 0x70, 0x65, 0x6e, 0x61, 0x70, 0x69,
	0x2e, 0x41, 0x73, 0x73, 0x65, 0x74, 0x52, 0x05, 0x61, 0x73, 0x73, 0x65, 0x74, 0x12, 0x3f, 0x0a,
	0x09, 0x73, 0x75, 0x62, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x21, 0x2e, 0x62, 0x61, 0x73, 0x79, 0x78, 0x5f, 0x6f, 0x70, 0x65, 0x6e, 0x61, 0x70, 0x69,
	0x2e, 0x53, 0x75, 0x62, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x6f, 0x72, 0x52, 0x09, 0x73, 0x75, 0x62, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x22, 0x6c,
	0x0a, 0x0c, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x69, 0x6e, 0x67, 0x4b, 0x69, 0x6e, 0x64, 0x12, 0x37,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x21, 0x2e,
	0x62, 0x61, 0x73, 0x79, 0x78, 0x5f, 0x6f, 0x70, 0x65, 0x6e, 0x61, 0x70, 0x69, 0x2e, 0x4d, 0x6f,
	0x64, 0x65, 0x6c, 0x69, 0x6e, 0x67, 0x4b, 0x69, 0x6e, 0x64, 0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x23, 0x0a, 0x05, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x12, 0x0c, 0x0a, 0x08, 0x49, 0x4e, 0x53, 0x54, 0x41, 0x4e, 0x43, 0x45, 0x10, 0x00, 0x12, 0x0c,
	0x0a, 0x08, 0x54, 0x45, 0x4d, 0x50, 0x4c, 0x41, 0x54, 0x45, 0x10, 0x01, 0x22, 0x46, 0x0a, 0x0b,
	0x49, 0x43, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x74, 0x12, 0x37, 0x0a, 0x0a, 0x6d,
	0x6f, 0x64, 0x65, 0x6c, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x18, 0x2e, 0x62, 0x61, 0x73, 0x79, 0x78, 0x5f, 0x6f, 0x70, 0x65, 0x6e, 0x61, 0x70, 0x69, 0x2e,
	0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x52, 0x09, 0x6d, 0x6f, 0x64, 0x65, 0x6c,
	0x54, 0x79, 0x70, 0x65, 0x22, 0xd6, 0x03, 0x0a, 0x10, 0x49, 0x53, 0x75, 0x62, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x69, 0x64, 0x5f,
	0x73, 0x68, 0x6f, 0x72, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x69, 0x64, 0x53,
	0x68, 0x6f, 0x72, 0x74, 0x12, 0x39, 0x0a, 0x0b, 0x73, 0x65, 0x6d, 0x61, 0x6e, 0x74, 0x69, 0x63,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x62, 0x61, 0x73, 0x79,
	0x78, 0x5f, 0x6f, 0x70, 0x65, 0x6e, 0x61, 0x70, 0x69, 0x2e, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65,
	0x6e, 0x63, 0x65, 0x52, 0x0a, 0x73, 0x65, 0x6d, 0x61, 0x6e, 0x74, 0x69, 0x63, 0x49, 0x64, 0x12,
	0x3c, 0x0a, 0x0b, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x74, 0x73, 0x18, 0x03,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x62, 0x61, 0x73, 0x79, 0x78, 0x5f, 0x6f, 0x70, 0x65,
	0x6e, 0x61, 0x70, 0x69, 0x2e, 0x49, 0x43, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x74,
	0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x74, 0x73, 0x12, 0x3b, 0x0a,
	0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x19, 0x2e, 0x62, 0x61, 0x73, 0x79, 0x78, 0x5f, 0x6f, 0x70, 0x65, 0x6e, 0x61,
	0x70, 0x69, 0x2e, 0x4c, 0x61, 0x6e, 0x67, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x52, 0x0b, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x61,
	0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x61,
	0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x2f, 0x0a, 0x04, 0x6b, 0x69, 0x6e, 0x64, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x62, 0x61, 0x73, 0x79, 0x78, 0x5f, 0x6f, 0x70, 0x65,
	0x6e, 0x61, 0x70, 0x69, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x69, 0x6e, 0x67, 0x4b, 0x69, 0x6e,
	0x64, 0x52, 0x04, 0x6b, 0x69, 0x6e, 0x64, 0x12, 0x37, 0x0a, 0x0a, 0x6d, 0x6f, 0x64, 0x65, 0x6c,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x62, 0x61,
	0x73, 0x79, 0x78, 0x5f, 0x6f, 0x70, 0x65, 0x6e, 0x61, 0x70, 0x69, 0x2e, 0x4d, 0x6f, 0x64, 0x65,
	0x6c, 0x54, 0x79, 0x70, 0x65, 0x52, 0x09, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x6b, 0x0a, 0x1c, 0x65, 0x6d, 0x62, 0x65, 0x64, 0x64, 0x65, 0x64, 0x5f, 0x64, 0x61, 0x74,
	0x61, 0x5f, 0x73, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x62, 0x61, 0x73, 0x79, 0x78, 0x5f, 0x6f,
	0x70, 0x65, 0x6e, 0x61, 0x70, 0x69, 0x2e, 0x49, 0x45, 0x6d, 0x62, 0x65, 0x64, 0x64, 0x65, 0x64,
	0x44, 0x61, 0x74, 0x61, 0x53, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x1a, 0x65, 0x6d, 0x62, 0x65, 0x64, 0x64, 0x65, 0x64, 0x44, 0x61, 0x74, 0x61, 0x53,
	0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0xaf, 0x05,
	0x0a, 0x08, 0x53, 0x75, 0x62, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x12, 0x19, 0x0a, 0x08, 0x69, 0x64,
	0x5f, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x69, 0x64,
	0x53, 0x68, 0x6f, 0x72, 0x74, 0x12, 0x2f, 0x0a, 0x04, 0x6b, 0x69, 0x6e, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x62, 0x61, 0x73, 0x79, 0x78, 0x5f, 0x6f, 0x70, 0x65, 0x6e,
	0x61, 0x70, 0x69, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x69, 0x6e, 0x67, 0x4b, 0x69, 0x6e, 0x64,
	0x52, 0x04, 0x6b, 0x69, 0x6e, 0x64, 0x12, 0x39, 0x0a, 0x0b, 0x73, 0x65, 0x6d, 0x61, 0x6e, 0x74,
	0x69, 0x63, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x62, 0x61,
	0x73, 0x79, 0x78, 0x5f, 0x6f, 0x70, 0x65, 0x6e, 0x61, 0x70, 0x69, 0x2e, 0x52, 0x65, 0x66, 0x65,
	0x72, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x0a, 0x73, 0x65, 0x6d, 0x61, 0x6e, 0x74, 0x69, 0x63, 0x49,
	0x64, 0x12, 0x4c, 0x0a, 0x11, 0x73, 0x75, 0x62, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x5f, 0x65, 0x6c,
	0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x62,
	0x61, 0x73, 0x79, 0x78, 0x5f, 0x6f, 0x70, 0x65, 0x6e, 0x61, 0x70, 0x69, 0x2e, 0x49, 0x53, 0x75,
	0x62, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x10, 0x73,
	0x75, 0x62, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12,
	0x37, 0x0a, 0x0a, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x62, 0x61, 0x73, 0x79, 0x78, 0x5f, 0x6f, 0x70, 0x65, 0x6e,
	0x61, 0x70, 0x69, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x52, 0x09, 0x6d,
	0x6f, 0x64, 0x65, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x12, 0x6b, 0x0a, 0x1c, 0x65, 0x6d, 0x62, 0x65,
	0x64, 0x64, 0x65, 0x64, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x73, 0x70, 0x65, 0x63, 0x69, 0x66,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x29,
	0x2e, 0x62, 0x61, 0x73, 0x79, 0x78, 0x5f, 0x6f, 0x70, 0x65, 0x6e, 0x61, 0x70, 0x69, 0x2e, 0x49,
	0x45, 0x6d, 0x62, 0x65, 0x64, 0x64, 0x65, 0x64, 0x44, 0x61, 0x74, 0x61, 0x53, 0x70, 0x65, 0x63,
	0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x1a, 0x65, 0x6d, 0x62, 0x65, 0x64,
	0x64, 0x65, 0x64, 0x44, 0x61, 0x74, 0x61, 0x53, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x3a, 0x0a, 0x0a, 0x71, 0x75, 0x61, 0x6c, 0x69, 0x66, 0x69,
	0x65, 0x72, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x62, 0x61, 0x73, 0x79,
	0x78, 0x5f, 0x6f, 0x70, 0x65, 0x6e, 0x61, 0x70, 0x69, 0x2e, 0x49, 0x43, 0x6f, 0x6e, 0x73, 0x74,
	0x72, 0x61, 0x69, 0x6e, 0x74, 0x52, 0x0a, 0x71, 0x75, 0x61, 0x6c, 0x69, 0x66, 0x69, 0x65, 0x72,
	0x73, 0x12, 0x41, 0x0a, 0x0e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x62, 0x61, 0x73, 0x79,
	0x78, 0x5f, 0x6f, 0x70, 0x65, 0x6e, 0x61, 0x70, 0x69, 0x2e, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69,
	0x66, 0x69, 0x65, 0x72, 0x52, 0x0e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x50, 0x0a, 0x0e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x69, 0x73, 0x74,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x62,
	0x61, 0x73, 0x79, 0x78, 0x5f, 0x6f, 0x70, 0x65, 0x6e, 0x61, 0x70, 0x69, 0x2e, 0x41, 0x64, 0x6d,
	0x69, 0x6e, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x76, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x72,
	0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x69, 0x73, 0x74,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f,
	0x72, 0x79, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f,
	0x72, 0x79, 0x12, 0x3b, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x62, 0x61, 0x73, 0x79, 0x78, 0x5f,
	0x6f, 0x70, 0x65, 0x6e, 0x61, 0x70, 0x69, 0x2e, 0x4c, 0x61, 0x6e, 0x67, 0x53, 0x74, 0x72, 0x69,
	0x6e, 0x67, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22,
	0xad, 0x01, 0x0a, 0x0b, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x36, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x20,
	0x2e, 0x62, 0x61, 0x73, 0x79, 0x78, 0x5f, 0x6f, 0x70, 0x65, 0x6e, 0x61, 0x70, 0x69, 0x2e, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x66, 0x0a, 0x05, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x12, 0x0f, 0x0a, 0x0b, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10,
	0x00, 0x12, 0x09, 0x0a, 0x05, 0x44, 0x45, 0x42, 0x55, 0x47, 0x10, 0x01, 0x12, 0x0f, 0x0a, 0x0b,
	0x49, 0x4e, 0x46, 0x4f, 0x52, 0x4d, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x02, 0x12, 0x0b, 0x0a,
	0x07, 0x57, 0x41, 0x52, 0x4e, 0x49, 0x4e, 0x47, 0x10, 0x03, 0x12, 0x09, 0x0a, 0x05, 0x45, 0x52,
	0x52, 0x4f, 0x52, 0x10, 0x04, 0x12, 0x09, 0x0a, 0x05, 0x46, 0x41, 0x54, 0x41, 0x4c, 0x10, 0x05,
	0x12, 0x0d, 0x0a, 0x09, 0x45, 0x58, 0x43, 0x45, 0x50, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x06, 0x22,
	0x70, 0x0a, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x3d, 0x0a, 0x0c, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x62, 0x61, 0x73, 0x79, 0x78, 0x5f, 0x6f, 0x70, 0x65, 0x6e, 0x61, 0x70, 0x69,
	0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0b, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x65, 0x78,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x65, 0x78, 0x74, 0x12, 0x12, 0x0a,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x22, 0x08, 0x0a, 0x06, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x22, 0xc9, 0x01, 0x0a, 0x06,
	0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x12, 0x21, 0x0a, 0x0c, 0x69, 0x73, 0x5f, 0x65, 0x78, 0x63, 0x65, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x69, 0x73, 0x45, 0x78, 0x63, 0x65, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x2d, 0x0a, 0x06, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x62, 0x61, 0x73, 0x79, 0x78, 0x5f, 0x6f, 0x70, 0x65, 0x6e,
	0x61, 0x70, 0x69, 0x2e, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x06, 0x65, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x12, 0x1f, 0x0a, 0x0b, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x32, 0x0a, 0x08, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x18,
	0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x62, 0x61, 0x73, 0x79, 0x78, 0x5f, 0x6f, 0x70,
	0x65, 0x6e, 0x61, 0x70, 0x69, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x08, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x22, 0xd3, 0x03, 0x0a, 0x0f, 0x53, 0x75, 0x62, 0x6d,
	0x6f, 0x64, 0x65, 0x6c, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x69,
	0x64, 0x5f, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x69,
	0x64, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x12, 0x39, 0x0a, 0x0b, 0x73, 0x65, 0x6d, 0x61, 0x6e, 0x74,
	0x69, 0x63, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x62, 0x61,
	0x73, 0x79, 0x78, 0x5f, 0x6f, 0x70, 0x65, 0x6e, 0x61, 0x70, 0x69, 0x2e, 0x52, 0x65, 0x66, 0x65,
	0x72, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x0a, 0x73, 0x65, 0x6d, 0x61, 0x6e, 0x74, 0x69, 0x63, 0x49,
	0x64, 0x12, 0x3a, 0x0a, 0x0a, 0x71, 0x75, 0x61, 0x6c, 0x69, 0x66, 0x69, 0x65, 0x72, 0x73, 0x18,
	0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x62, 0x61, 0x73, 0x79, 0x78, 0x5f, 0x6f, 0x70,
	0x65, 0x6e, 0x61, 0x70, 0x69, 0x2e, 0x49, 0x43, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x61, 0x69, 0x6e,
	0x74, 0x52, 0x0a, 0x71, 0x75, 0x61, 0x6c, 0x69, 0x66, 0x69, 0x65, 0x72, 0x73, 0x12, 0x2f, 0x0a,
	0x04, 0x6b, 0x69, 0x6e, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x62, 0x61,
	0x73, 0x79, 0x78, 0x5f, 0x6f, 0x70, 0x65, 0x6e, 0x61, 0x70, 0x69, 0x2e, 0x4d, 0x6f, 0x64, 0x65,
	0x6c, 0x69, 0x6e, 0x67, 0x4b, 0x69, 0x6e, 0x64, 0x52, 0x04, 0x6b, 0x69, 0x6e, 0x64, 0x12, 0x37,
	0x0a, 0x0a, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x18, 0x2e, 0x62, 0x61, 0x73, 0x79, 0x78, 0x5f, 0x6f, 0x70, 0x65, 0x6e, 0x61,
	0x70, 0x69, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x52, 0x09, 0x6d, 0x6f,
	0x64, 0x65, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x12, 0x6b, 0x0a, 0x1c, 0x65, 0x6d, 0x62, 0x65, 0x64,
	0x64, 0x65, 0x64, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x73, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x29, 0x2e,
	0x62, 0x61, 0x73, 0x79, 0x78, 0x5f, 0x6f, 0x70, 0x65, 0x6e, 0x61, 0x70, 0x69, 0x2e, 0x49, 0x45,
	0x6d, 0x62, 0x65, 0x64, 0x64, 0x65, 0x64, 0x44, 0x61, 0x74, 0x61, 0x53, 0x70, 0x65, 0x63, 0x69,
	0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x1a, 0x65, 0x6d, 0x62, 0x65, 0x64, 0x64,
	0x65, 0x64, 0x44, 0x61, 0x74, 0x61, 0x53, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79,
	0x12, 0x3b, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x62, 0x61, 0x73, 0x79, 0x78, 0x5f, 0x6f, 0x70,
	0x65, 0x6e, 0x61, 0x70, 0x69, 0x2e, 0x4c, 0x61, 0x6e, 0x67, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67,
	0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x07, 0x0a,
	0x05, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x3a, 0x0a, 0x0c, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e,
	0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x2a, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x62, 0x61, 0x73, 0x79, 0x78, 0x5f, 0x6f, 0x70,
	0x65, 0x6e, 0x61, 0x70, 0x69, 0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x22, 0x83, 0x01, 0x0a, 0x11, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x56, 0x61, 0x72, 0x69, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x37, 0x0a, 0x0a, 0x6d, 0x6f, 0x64, 0x65,
	0x6c, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x62,
	0x61, 0x73, 0x79, 0x78, 0x5f, 0x6f, 0x70, 0x65, 0x6e, 0x61, 0x70, 0x69, 0x2e, 0x4d, 0x6f, 0x64,
	0x65, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x52, 0x09, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x35, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1f, 0x2e, 0x62, 0x61, 0x73, 0x79, 0x78, 0x5f, 0x6f, 0x70, 0x65, 0x6e, 0x61, 0x70, 0x69,
	0x2e, 0x49, 0x53, 0x75, 0x62, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e,
	0x74, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0xe8, 0x01, 0x0a, 0x11, 0x49, 0x6e, 0x76,
	0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d,
	0x0a, 0x0a, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x12, 0x49, 0x0a,
	0x0f, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x5f, 0x61, 0x72, 0x67, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x73,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x62, 0x61, 0x73, 0x79, 0x78, 0x5f, 0x6f,
	0x70, 0x65, 0x6e, 0x61, 0x70, 0x69, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x56, 0x61, 0x72, 0x69, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x0e, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x41,
	0x72, 0x67, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x4f, 0x0a, 0x12, 0x69, 0x6e, 0x6f, 0x75,
	0x74, 0x70, 0x75, 0x74, 0x5f, 0x61, 0x72, 0x67, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x03,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x62, 0x61, 0x73, 0x79, 0x78, 0x5f, 0x6f, 0x70, 0x65,
	0x6e, 0x61, 0x70, 0x69, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x56, 0x61,
	0x72, 0x69, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x11, 0x69, 0x6e, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74,
	0x41, 0x72, 0x67, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x74, 0x69, 0x6d,
	0x65, 0x6f, 0x75, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x74, 0x69, 0x6d, 0x65,
	0x6f, 0x75, 0x74, 0x22, 0xd2, 0x01, 0x0a, 0x0f, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x12, 0x21, 0x0a, 0x0c, 0x69, 0x73, 0x5f, 0x65, 0x78, 0x63, 0x65, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x69, 0x73, 0x45, 0x78, 0x63, 0x65, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2d, 0x0a, 0x06, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x62, 0x61, 0x73, 0x79, 0x78, 0x5f, 0x6f, 0x70, 0x65,
	0x6e, 0x61, 0x70, 0x69, 0x2e, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x06, 0x65, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x12, 0x1f, 0x0a, 0x0b, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x32, 0x0a, 0x08, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73,
	0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x62, 0x61, 0x73, 0x79, 0x78, 0x5f, 0x6f,
	0x70, 0x65, 0x6e, 0x61, 0x70, 0x69, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x08,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x22, 0xa6, 0x01, 0x0a, 0x0e, 0x45, 0x78, 0x65,
	0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x39, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x23, 0x2e, 0x62, 0x61, 0x73,
	0x79, 0x78, 0x5f, 0x6f, 0x70, 0x65, 0x6e, 0x61, 0x70, 0x69, 0x2e, 0x45, 0x78, 0x65, 0x63, 0x75,
	0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x59, 0x0a, 0x05, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12,
	0x0d, 0x0a, 0x09, 0x49, 0x4e, 0x49, 0x54, 0x49, 0x41, 0x54, 0x45, 0x44, 0x10, 0x00, 0x12, 0x0b,
	0x0a, 0x07, 0x52, 0x55, 0x4e, 0x4e, 0x49, 0x4e, 0x47, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x43,
	0x4f, 0x4d, 0x50, 0x4c, 0x45, 0x54, 0x45, 0x44, 0x10, 0x02, 0x12, 0x0c, 0x0a, 0x08, 0x43, 0x41,
	0x4e, 0x43, 0x45, 0x4c, 0x45, 0x44, 0x10, 0x03, 0x12, 0x0a, 0x0a, 0x06, 0x46, 0x41, 0x49, 0x4c,
	0x45, 0x44, 0x10, 0x04, 0x12, 0x0b, 0x0a, 0x07, 0x54, 0x49, 0x4d, 0x45, 0x4f, 0x55, 0x54, 0x10,
	0x05, 0x22, 0xe4, 0x02, 0x0a, 0x12, 0x49, 0x6e, 0x76, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x12, 0x4f, 0x0a, 0x12, 0x69, 0x6e, 0x6f, 0x75, 0x74,
	0x70, 0x75, 0x74, 0x5f, 0x61, 0x72, 0x67, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x62, 0x61, 0x73, 0x79, 0x78, 0x5f, 0x6f, 0x70, 0x65, 0x6e,
	0x61, 0x70, 0x69, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x56, 0x61, 0x72,
	0x69, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x11, 0x69, 0x6e, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x41,
	0x72, 0x67, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x4b, 0x0a, 0x10, 0x6f, 0x75, 0x74, 0x70,
	0x75, 0x74, 0x5f, 0x61, 0x72, 0x67, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x03, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x20, 0x2e, 0x62, 0x61, 0x73, 0x79, 0x78, 0x5f, 0x6f, 0x70, 0x65, 0x6e, 0x61,
	0x70, 0x69, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x56, 0x61, 0x72, 0x69,
	0x61, 0x62, 0x6c, 0x65, 0x52, 0x0f, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x41, 0x72, 0x67, 0x75,
	0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x49, 0x0a, 0x10, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1e, 0x2e, 0x62, 0x61, 0x73, 0x79, 0x78, 0x5f, 0x6f, 0x70, 0x65, 0x6e, 0x61, 0x70, 0x69, 0x2e,
	0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52,
	0x0f, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x12, 0x46, 0x0a, 0x0f, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x74,
	0x61, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x62, 0x61, 0x73, 0x79,
	0x78, 0x5f, 0x6f, 0x70, 0x65, 0x6e, 0x61, 0x70, 0x69, 0x2e, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74,
	0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x0e, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74,
	0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x22, 0x4b, 0x0a, 0x21, 0x41, 0x73, 0x73, 0x65,
	0x74, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53,
	0x68, 0x65, 0x6c, 0x6c, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x26, 0x0a,
	0x04, 0x6b, 0x65, 0x79, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x62, 0x61,
	0x73, 0x79, 0x78, 0x5f, 0x6f, 0x70, 0x65, 0x6e, 0x61, 0x70, 0x69, 0x2e, 0x4b, 0x65, 0x79, 0x52,
	0x04, 0x6b, 0x65, 0x79, 0x73, 0x22, 0xb7, 0x02, 0x0a, 0x04, 0x56, 0x69, 0x65, 0x77, 0x12, 0x19,
	0x0a, 0x08, 0x69, 0x64, 0x5f, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x69, 0x64, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x12, 0x47, 0x0a, 0x12, 0x63, 0x6f, 0x6e,
	0x74, 0x61, 0x69, 0x6e, 0x65, 0x64, 0x5f, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x62, 0x61, 0x73, 0x79, 0x78, 0x5f, 0x6f, 0x70,
	0x65, 0x6e, 0x61, 0x70, 0x69, 0x2e, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x52,
	0x11, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x64, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e,
	0x74, 0x73, 0x12, 0x39, 0x0a, 0x0b, 0x73, 0x65, 0x6d, 0x61, 0x6e, 0x74, 0x69, 0x63, 0x5f, 0x69,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x62, 0x61, 0x73, 0x79, 0x78, 0x5f,
	0x6f, 0x70, 0x65, 0x6e, 0x61, 0x70, 0x69, 0x2e, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63,
	0x65, 0x52, 0x0a, 0x73, 0x65, 0x6d, 0x61, 0x6e, 0x74, 0x69, 0x63, 0x49, 0x64, 0x12, 0x1a, 0x0a,
	0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x3b, 0x0a, 0x0b, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19,
	0x2e, 0x62, 0x61, 0x73, 0x79, 0x78, 0x5f, 0x6f, 0x70, 0x65, 0x6e, 0x61, 0x70, 0x69, 0x2e, 0x4c,
	0x61, 0x6e, 0x67, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x37, 0x0a, 0x0a, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x62, 0x61, 0x73,
	0x79, 0x78, 0x5f, 0x6f, 0x70, 0x65, 0x6e, 0x61, 0x70, 0x69, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c,
	0x54, 0x79, 0x70, 0x65, 0x52, 0x09, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x22,
	0x45, 0x0a, 0x1b, 0x43, 0x6f, 0x6e, 0x63, 0x65, 0x70, 0x74, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x26,
	0x0a, 0x04, 0x6b, 0x65, 0x79, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x62,
	0x61, 0x73, 0x79, 0x78, 0x5f, 0x6f, 0x70, 0x65, 0x6e, 0x61, 0x70, 0x69, 0x2e, 0x4b, 0x65, 0x79,
	0x52, 0x04, 0x6b, 0x65, 0x79, 0x73, 0x22, 0xbb, 0x01, 0x0a, 0x08, 0x4d, 0x65, 0x74, 0x61, 0x44,
	0x61, 0x74, 0x61, 0x12, 0x66, 0x0a, 0x15, 0x61, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61,
	0x6c, 0x5f, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x31, 0x2e, 0x62, 0x61, 0x73, 0x79, 0x78, 0x5f, 0x6f, 0x70, 0x65, 0x6e, 0x61,
	0x70, 0x69, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x44, 0x61, 0x74, 0x61, 0x2e, 0x41, 0x64, 0x64, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x14, 0x61, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61,
	0x6c, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x1a, 0x47, 0x0a, 0x19, 0x41,
	0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74,
	0x69, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x3a, 0x02, 0x38, 0x01, 0x22, 0xd5, 0x02, 0x0a, 0x11, 0x43, 0x6f, 0x6e, 0x63, 0x65, 0x70, 0x74,
	0x44, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x72, 0x79, 0x12, 0x19, 0x0a, 0x08, 0x69, 0x64,
	0x5f, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x69, 0x64,
	0x53, 0x68, 0x6f, 0x72, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72,
	0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72,
	0x79, 0x12, 0x3b, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x62, 0x61, 0x73, 0x79, 0x78, 0x5f, 0x6f,
	0x70, 0x65, 0x6e, 0x61, 0x70, 0x69, 0x2e, 0x4c, 0x61, 0x6e, 0x67, 0x53, 0x74, 0x72, 0x69, 0x6e,
	0x67, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x34,
	0x0a, 0x09, 0x6d, 0x65, 0x74, 0x61, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x17, 0x2e, 0x62, 0x61, 0x73, 0x79, 0x78, 0x5f, 0x6f, 0x70, 0x65, 0x6e, 0x61, 0x70,
	0x69, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x44, 0x61, 0x74, 0x61, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61,
	0x44, 0x61, 0x74, 0x61, 0x12, 0x5d, 0x0a, 0x14, 0x63, 0x6f, 0x6e, 0x63, 0x65, 0x70, 0x74, 0x5f,
	0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x05, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x62, 0x61, 0x73, 0x79, 0x78, 0x5f, 0x6f, 0x70, 0x65, 0x6e, 0x61,
	0x70, 0x69, 0x2e, 0x43, 0x6f, 0x6e, 0x63, 0x65, 0x70, 0x74, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x13,
	0x63, 0x6f, 0x6e, 0x63, 0x65, 0x70, 0x74, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x12, 0x37, 0x0a, 0x0a, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x62, 0x61, 0x73, 0x79, 0x78, 0x5f,
	0x6f, 0x70, 0x65, 0x6e, 0x61, 0x70, 0x69, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x54, 0x79, 0x70,
	0x65, 0x52, 0x09, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x22, 0x81, 0x06, 0x0a,
	0x18, 0x41, 0x73, 0x73, 0x65, 0x74, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x69, 0x73, 0x74, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x53, 0x68, 0x65, 0x6c, 0x6c, 0x12, 0x19, 0x0a, 0x08, 0x69, 0x64, 0x5f,
	0x73, 0x68, 0x6f, 0x72, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x69, 0x64, 0x53,
	0x68, 0x6f, 0x72, 0x74, 0x12, 0x2a, 0x0a, 0x05, 0x61, 0x73, 0x73, 0x65, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x62, 0x61, 0x73, 0x79, 0x78, 0x5f, 0x6f, 0x70, 0x65, 0x6e,
	0x61, 0x70, 0x69, 0x2e, 0x41, 0x73, 0x73, 0x65, 0x74, 0x52, 0x05, 0x61, 0x73, 0x73, 0x65, 0x74,
	0x12, 0x35, 0x0a, 0x09, 0x73, 0x75, 0x62, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x18, 0x03, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x62, 0x61, 0x73, 0x79, 0x78, 0x5f, 0x6f, 0x70, 0x65, 0x6e,
	0x61, 0x70, 0x69, 0x2e, 0x53, 0x75, 0x62, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x52, 0x09, 0x73, 0x75,
	0x62, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x12, 0x53, 0x0a, 0x0c, 0x64, 0x65, 0x72, 0x69, 0x76,
	0x65, 0x64, 0x5f, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x30, 0x2e,
	0x62, 0x61, 0x73, 0x79, 0x78, 0x5f, 0x6f, 0x70, 0x65, 0x6e, 0x61, 0x70, 0x69, 0x2e, 0x41, 0x73,
	0x73, 0x65, 0x74, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x53, 0x68, 0x65, 0x6c, 0x6c, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x52,
	0x0b, 0x64, 0x65, 0x72, 0x69, 0x76, 0x65, 0x64, 0x46, 0x72, 0x6f, 0x6d, 0x12, 0x29, 0x0a, 0x05,
	0x76, 0x69, 0x65, 0x77, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x62, 0x61,
	0x73, 0x79, 0x78, 0x5f, 0x6f, 0x70, 0x65, 0x6e, 0x61, 0x70, 0x69, 0x2e, 0x56, 0x69, 0x65, 0x77,
	0x52, 0x05, 0x76, 0x69, 0x65, 0x77, 0x73, 0x12, 0x37, 0x0a, 0x0a, 0x6d, 0x6f, 0x64, 0x65, 0x6c,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x62, 0x61,
	0x73, 0x79, 0x78, 0x5f, 0x6f, 0x70, 0x65, 0x6e, 0x61, 0x70, 0x69, 0x2e, 0x4d, 0x6f, 0x64, 0x65,
	0x6c, 0x54, 0x79, 0x70, 0x65, 0x52, 0x09, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x6b, 0x0a, 0x1c, 0x65, 0x6d, 0x62, 0x65, 0x64, 0x64, 0x65, 0x64, 0x5f, 0x64, 0x61, 0x74,
	0x61, 0x5f, 0x73, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x62, 0x61, 0x73, 0x79, 0x78, 0x5f, 0x6f,
	0x70, 0x65, 0x6e, 0x61, 0x70, 0x69, 0x2e, 0x49, 0x45, 0x6d, 0x62, 0x65, 0x64, 0x64, 0x65, 0x64,
	0x44, 0x61, 0x74, 0x61, 0x53, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x1a, 0x65, 0x6d, 0x62, 0x65, 0x64, 0x64, 0x65, 0x64, 0x44, 0x61, 0x74, 0x61, 0x53,
	0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x53, 0x0a,
	0x14, 0x63, 0x6f, 0x6e, 0x63, 0x65, 0x70, 0x74, 0x5f, 0x64, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x61, 0x72, 0x69, 0x65, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x62, 0x61,
	0x73, 0x79, 0x78, 0x5f, 0x6f, 0x70, 0x65, 0x6e, 0x61, 0x70, 0x69, 0x2e, 0x43, 0x6f, 0x6e, 0x63,
	0x65, 0x70, 0x74, 0x44, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x72, 0x79, 0x52, 0x13, 0x63,
	0x6f, 0x6e, 0x63, 0x65, 0x70, 0x74, 0x44, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x72, 0x69,
	0x65, 0x73, 0x12, 0x41, 0x0a, 0x0e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x62, 0x61, 0x73,
	0x79, 0x78, 0x5f, 0x6f, 0x70, 0x65, 0x6e, 0x61, 0x70, 0x69, 0x2e, 0x49, 0x64, 0x65, 0x6e, 0x74,
	0x69, 0x66, 0x69, 0x65, 0x72, 0x52, 0x0e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x50, 0x0a, 0x0e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x69, 0x73,
	0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e,
	0x62, 0x61, 0x73, 0x79, 0x78, 0x5f, 0x6f, 0x70, 0x65, 0x6e, 0x61, 0x70, 0x69, 0x2e, 0x41, 0x64,
	0x6d, 0x69, 0x6e, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x76, 0x65, 0x49, 0x6e, 0x66, 0x6f,
	0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x69, 0x73,
	0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67,
	0x6f, 0x72, 0x79, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67,
	0x6f, 0x72, 0x79, 0x12, 0x3b, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x0c, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x62, 0x61, 0x73, 0x79, 0x78,
	0x5f, 0x6f, 0x70, 0x65, 0x6e, 0x61, 0x70, 0x69, 0x2e, 0x4c, 0x61, 0x6e, 0x67, 0x53, 0x74, 0x72,
	0x69, 0x6e, 0x67, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x22, 0x56, 0x0a, 0x28, 0x47, 0x45, 0x54, 0x41, 0x61, 0x73, 0x53, 0x75, 0x62, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x73, 0x53, 0x75, 0x62, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x49, 0x64, 0x53, 0x68, 0x6f,
	0x72, 0x74, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x12, 0x2a, 0x0a, 0x11,
	0x73, 0x75, 0x62, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x5f, 0x69, 0x64, 0x5f, 0x73, 0x68, 0x6f, 0x72,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x73, 0x75, 0x62, 0x6d, 0x6f, 0x64, 0x65,
	0x6c, 0x49, 0x64, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x22, 0x7f, 0x0a, 0x1c, 0x50, 0x75, 0x74, 0x53,
	0x75, 0x62, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x54, 0x6f, 0x53, 0x68, 0x65, 0x6c, 0x6c, 0x50, 0x61,
	0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x12, 0x2a, 0x0a, 0x11, 0x73, 0x75, 0x62, 0x6d,
	0x6f, 0x64, 0x65, 0x6c, 0x5f, 0x69, 0x64, 0x5f, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0f, 0x73, 0x75, 0x62, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x49, 0x64, 0x53,
	0x68, 0x6f, 0x72, 0x74, 0x12, 0x33, 0x0a, 0x08, 0x73, 0x75, 0x62, 0x6d, 0x6f, 0x64, 0x65, 0x6c,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x62, 0x61, 0x73, 0x79, 0x78, 0x5f, 0x6f,
	0x70, 0x65, 0x6e, 0x61, 0x70, 0x69, 0x2e, 0x53, 0x75, 0x62, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x52,
	0x08, 0x73, 0x75, 0x62, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x22, 0x58, 0x0a, 0x2a, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x53, 0x75, 0x62, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x46, 0x72, 0x6f, 0x6d, 0x53,
	0x68, 0x65, 0x6c, 0x6c, 0x42, 0x79, 0x49, 0x64, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x50, 0x61, 0x72,
	0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x12, 0x2a, 0x0a, 0x11, 0x73, 0x75, 0x62, 0x6d, 0x6f,
	0x64, 0x65, 0x6c, 0x5f, 0x69, 0x64, 0x5f, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0f, 0x73, 0x75, 0x62, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x49, 0x64, 0x53, 0x68,
	0x6f, 0x72, 0x74, 0x22, 0x55, 0x0a, 0x27, 0x47, 0x65, 0x74, 0x53, 0x75, 0x62, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x46, 0x72, 0x6f, 0x6d, 0x53, 0x68, 0x65, 0x6c, 0x6c, 0x42, 0x79, 0x49, 0x64, 0x53,
	0x68, 0x6f, 0x72, 0x74, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x12, 0x2a,
	0x0a, 0x11, 0x73, 0x75, 0x62, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x5f, 0x69, 0x64, 0x5f, 0x73, 0x68,
	0x6f, 0x72, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x73, 0x75, 0x62, 0x6d, 0x6f,
	0x64, 0x65, 0x6c, 0x49, 0x64, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x22, 0x4e, 0x0a, 0x20, 0x53, 0x68,
	0x65, 0x6c, 0x6c, 0x47, 0x65, 0x74, 0x53, 0x75, 0x62, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x73, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x12, 0x2a,
	0x0a, 0x11, 0x73, 0x75, 0x62, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x5f, 0x69, 0x64, 0x5f, 0x73, 0x68,
	0x6f, 0x72, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x73, 0x75, 0x62, 0x6d, 0x6f,
	0x64, 0x65, 0x6c, 0x49, 0x64, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x22, 0x50, 0x0a, 0x22, 0x53, 0x68,
	0x65, 0x6c, 0x6c, 0x47, 0x65, 0x74, 0x53, 0x75, 0x62, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x45, 0x6c,
	0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73,
	0x12, 0x2a, 0x0a, 0x11, 0x73, 0x75, 0x62, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x5f, 0x69, 0x64, 0x5f,
	0x73, 0x68, 0x6f, 0x72, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x73, 0x75, 0x62,
	0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x49, 0x64, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x22, 0x81, 0x01, 0x0a,
	0x2a, 0x53, 0x68, 0x65, 0x6c, 0x6c, 0x47, 0x65, 0x74, 0x53, 0x75, 0x62, 0x6d, 0x6f, 0x64, 0x65,
	0x6c, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x42, 0x79, 0x49, 0x64, 0x53, 0x68, 0x6f, 0x72,
	0x74, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x12, 0x2a, 0x0a, 0x11, 0x73,
	0x75, 0x62, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x5f, 0x69, 0x64, 0x5f, 0x73, 0x68, 0x6f, 0x72, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x73, 0x75, 0x62, 0x6d, 0x6f, 0x64, 0x65, 0x6c,
	0x49, 0x64, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x12, 0x27, 0x0a, 0x10, 0x73, 0x65, 0x5f, 0x69, 0x64,
	0x5f, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0d, 0x73, 0x65, 0x49, 0x64, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x50, 0x61, 0x74, 0x68,
	0x22, 0xc7, 0x01, 0x0a, 0x21, 0x53, 0x68, 0x65, 0x6c, 0x6c, 0x50, 0x75, 0x74, 0x53, 0x75, 0x62,
	0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x50, 0x61, 0x72, 0x61,
	0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x12, 0x2a, 0x0a, 0x11, 0x73, 0x75, 0x62, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x5f, 0x69, 0x64, 0x5f, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0f, 0x73, 0x75, 0x62, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x49, 0x64, 0x53, 0x68, 0x6f,
	0x72, 0x74, 0x12, 0x27, 0x0a, 0x10, 0x73, 0x65, 0x5f, 0x69, 0x64, 0x5f, 0x73, 0x68, 0x6f, 0x72,
	0x74, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x73, 0x65,
	0x49, 0x64, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x50, 0x61, 0x74, 0x68, 0x12, 0x4d, 0x0a, 0x12, 0x69,
	0x5f, 0x73, 0x75, 0x62, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x5f, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x6e,
	0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x62, 0x61, 0x73, 0x79, 0x78, 0x5f,
	0x6f, 0x70, 0x65, 0x6e, 0x61, 0x70, 0x69, 0x2e, 0x49, 0x53, 0x75, 0x62, 0x6d, 0x6f, 0x64, 0x65,
	0x6c, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x10, 0x69, 0x53, 0x75, 0x62, 0x6d, 0x6f,
	0x64, 0x65, 0x6c, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x22, 0x84, 0x01, 0x0a, 0x2d, 0x53,
	0x68, 0x65, 0x6c, 0x6c, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x75, 0x62, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x42, 0x79, 0x49, 0x64, 0x53, 0x68, 0x6f,
	0x72, 0x74, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x12, 0x2a, 0x0a, 0x11,
	0x73, 0x75, 0x62, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x5f, 0x69, 0x64, 0x5f, 0x73, 0x68, 0x6f, 0x72,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x73, 0x75, 0x62, 0x6d, 0x6f, 0x64, 0x65,
	0x6c, 0x49, 0x64, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x12, 0x27, 0x0a, 0x10, 0x73, 0x65, 0x5f, 0x69,
	0x64, 0x5f, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0d, 0x73, 0x65, 0x49, 0x64, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x50, 0x61, 0x74,
	0x68, 0x22, 0x86, 0x01, 0x0a, 0x2f, 0x53, 0x68, 0x65, 0x6c, 0x6c, 0x47, 0x65, 0x74, 0x53, 0x75,
	0x62, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x42, 0x79, 0x49, 0x64, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x50, 0x61, 0x72, 0x61, 0x6d,
	0x65, 0x74, 0x65, 0x72, 0x73, 0x12, 0x2a, 0x0a, 0x11, 0x73, 0x75, 0x62, 0x6d, 0x6f, 0x64, 0x65,
	0x6c, 0x5f, 0x69, 0x64, 0x5f, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0f, 0x73, 0x75, 0x62, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x49, 0x64, 0x53, 0x68, 0x6f, 0x72,
	0x74, 0x12, 0x27, 0x0a, 0x10, 0x73, 0x65, 0x5f, 0x69, 0x64, 0x5f, 0x73, 0x68, 0x6f, 0x72, 0x74,
	0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x73, 0x65, 0x49,
	0x64, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x50, 0x61, 0x74, 0x68, 0x22, 0x29, 0x0a, 0x27, 0x53, 0x68,
	0x65, 0x6c, 0x6c, 0x47, 0x65, 0x74, 0x53, 0x75, 0x62, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x45, 0x6c,
	0x65, 0x6d, 0x65, 0x6e, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x42, 0x79, 0x49, 0x64, 0x53, 0x68,
	0x6f, 0x72, 0x74, 0x4f, 0x4b, 0x22, 0x32, 0x0a, 0x30, 0x53, 0x68, 0x65, 0x6c, 0x6c, 0x50, 0x75,
	0x74, 0x53, 0x75, 0x62, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x42, 0x79, 0x49, 0x64, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x42, 0x6f, 0x64, 0x79, 0x22, 0xbe, 0x02, 0x0a, 0x2f, 0x53, 0x68,
	0x65, 0x6c, 0x6c, 0x50, 0x75, 0x74, 0x53, 0x75, 0x62, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x45, 0x6c,
	0x65, 0x6d, 0x65, 0x6e, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x42, 0x79, 0x49, 0x64, 0x53, 0x68,
	0x6f, 0x72, 0x74, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x12, 0x2a, 0x0a,
	0x11, 0x73, 0x75, 0x62, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x5f, 0x69, 0x64, 0x5f, 0x73, 0x68, 0x6f,
	0x72, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x73, 0x75, 0x62, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x49, 0x64, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x12, 0x27, 0x0a, 0x10, 0x73, 0x65, 0x5f,
	0x69, 0x64, 0x5f, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0d, 0x73, 0x65, 0x49, 0x64, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x50, 0x61,
	0x74, 0x68, 0x12, 0xb5, 0x01, 0x0a, 0x3a, 0x73, 0x68, 0x65, 0x6c, 0x6c, 0x5f, 0x5f, 0x70, 0x75,
	0x74, 0x5f, 0x73, 0x75, 0x62, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x5f, 0x65, 0x6c, 0x65, 0x6d, 0x65,
	0x6e, 0x74, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x5f, 0x62, 0x79, 0x5f, 0x69, 0x64, 0x5f, 0x73,
	0x68, 0x6f, 0x72, 0x74, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x62, 0x6f, 0x64,
	0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3f, 0x2e, 0x62, 0x61, 0x73, 0x79, 0x78, 0x5f,
	0x6f, 0x70, 0x65, 0x6e, 0x61, 0x70, 0x69, 0x2e, 0x53, 0x68, 0x65, 0x6c, 0x6c, 0x50, 0x75, 0x74,
	0x53, 0x75, 0x62, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x42, 0x79, 0x49, 0x64, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x42, 0x6f, 0x64, 0x79, 0x52, 0x30, 0x73, 0x68, 0x65, 0x6c, 0x6c, 0x50,
	0x75, 0x74, 0x53, 0x75, 0x62, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e,
	0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x42, 0x79, 0x49, 0x64, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x42, 0x6f, 0x64, 0x79, 0x22, 0xf8, 0x01, 0x0a, 0x27, 0x53,
	0x68, 0x65, 0x6c, 0x6c, 0x49, 0x6e, 0x76, 0x6f, 0x6b, 0x65, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x42, 0x79, 0x49, 0x64, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x50, 0x61, 0x72, 0x61,
	0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x12, 0x2a, 0x0a, 0x11, 0x73, 0x75, 0x62, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x5f, 0x69, 0x64, 0x5f, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0f, 0x73, 0x75, 0x62, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x49, 0x64, 0x53, 0x68, 0x6f,
	0x72, 0x74, 0x12, 0x3a, 0x0a, 0x1a, 0x69, 0x64, 0x5f, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x5f, 0x70,
	0x61, 0x74, 0x68, 0x5f, 0x74, 0x6f, 0x5f, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x16, 0x69, 0x64, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x50,
	0x61, 0x74, 0x68, 0x54, 0x6f, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x14,
	0x0a, 0x05, 0x61, 0x73, 0x79, 0x6e, 0x63, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x61,
	0x73, 0x79, 0x6e, 0x63, 0x12, 0x4f, 0x0a, 0x12, 0x69, 0x6e, 0x76, 0x6f, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x20, 0x2e, 0x62, 0x61, 0x73, 0x79, 0x78, 0x5f, 0x6f, 0x70, 0x65, 0x6e, 0x61, 0x70, 0x69,
	0x2e, 0x49, 0x6e, 0x76, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x52, 0x11, 0x69, 0x6e, 0x76, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0xb4, 0x01, 0x0a, 0x2b, 0x53, 0x68, 0x65, 0x6c, 0x6c, 0x47,
	0x65, 0x74, 0x49, 0x6e, 0x76, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x42, 0x79, 0x49, 0x64, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x50, 0x61, 0x72, 0x61, 0x6d,
	0x65, 0x74, 0x65, 0x72, 0x73, 0x12, 0x2a, 0x0a, 0x11, 0x73, 0x75, 0x62, 0x6d, 0x6f, 0x64, 0x65,
	0x6c, 0x5f, 0x69, 0x64, 0x5f, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0f, 0x73, 0x75, 0x62, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x49, 0x64, 0x53, 0x68, 0x6f, 0x72,
	0x74, 0x12, 0x3a, 0x0a, 0x1a, 0x69, 0x64, 0x5f, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x5f, 0x70, 0x61,
	0x74, 0x68, 0x5f, 0x74, 0x6f, 0x5f, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x16, 0x69, 0x64, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x50, 0x61,
	0x74, 0x68, 0x54, 0x6f, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1d, 0x0a,
	0x0a, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x32, 0xc7, 0x15, 0x0a,
	0x0d, 0x42, 0x61, 0x73, 0x79, 0x78, 0x5f, 0x6f, 0x70, 0x65, 0x6e, 0x61, 0x70, 0x69, 0x12, 0x76,
	0x0a, 0x1b, 0x47, 0x65, 0x74, 0x41, 0x73, 0x73, 0x65, 0x74, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x69,
	0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x68, 0x65, 0x6c, 0x6c, 0x12, 0x16, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x31, 0x2e, 0x62, 0x61, 0x73, 0x79, 0x78, 0x5f, 0x6f, 0x70,
	0x65, 0x6e, 0x61, 0x70, 0x69, 0x2e, 0x41, 0x73, 0x73, 0x65, 0x74, 0x41, 0x64, 0x6d, 0x69, 0x6e,
	0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x68, 0x65, 0x6c, 0x6c, 0x44, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x22, 0x0c, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x06,
	0x12, 0x04, 0x2f, 0x61, 0x61, 0x73, 0x12, 0x60, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x53, 0x75, 0x62,
	0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x46, 0x72, 0x6f, 0x6d, 0x53, 0x68, 0x65, 0x6c, 0x6c, 0x12,
	0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x17, 0x2e, 0x62, 0x61, 0x73, 0x79, 0x78, 0x5f,
	0x6f, 0x70, 0x65, 0x6e, 0x61, 0x70, 0x69, 0x2e, 0x53, 0x75, 0x62, 0x6d, 0x6f, 0x64, 0x65, 0x6c,
	0x22, 0x16, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x10, 0x12, 0x0e, 0x2f, 0x61, 0x61, 0x73, 0x2f, 0x73,
	0x75, 0x62, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x12, 0x9c, 0x01, 0x0a, 0x1e, 0x47, 0x45, 0x54,
	0x41, 0x61, 0x73, 0x53, 0x75, 0x62, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x53, 0x75, 0x62, 0x6d,
	0x6f, 0x64, 0x65, 0x6c, 0x49, 0x64, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x12, 0x37, 0x2e, 0x62, 0x61,
	0x73, 0x79, 0x78, 0x5f, 0x6f, 0x70, 0x65, 0x6e, 0x61, 0x70, 0x69, 0x2e, 0x47, 0x45, 0x54, 0x41,
	0x61, 0x73, 0x53, 0x75, 0x62, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x53, 0x75, 0x62, 0x6d, 0x6f,
	0x64, 0x65, 0x6c, 0x49, 0x64, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65,
	0x74, 0x65, 0x72, 0x73, 0x1a, 0x17, 0x2e, 0x62, 0x61, 0x73, 0x79, 0x78, 0x5f, 0x6f, 0x70, 0x65,
	0x6e, 0x61, 0x70, 0x69, 0x2e, 0x53, 0x75, 0x62, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x22, 0x28, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x22, 0x12, 0x20, 0x2f, 0x61, 0x61, 0x73, 0x2f, 0x73, 0x75, 0x62, 0x6d,
	0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2f, 0x7b, 0x73, 0x75, 0x62, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x49,
	0x64, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x7d, 0x12, 0x8e, 0x01, 0x0a, 0x12, 0x50, 0x75, 0x74, 0x53,
	0x75, 0x62, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x54, 0x6f, 0x53, 0x68, 0x65, 0x6c, 0x6c, 0x12, 0x2b,
	0x2e, 0x62, 0x61, 0x73, 0x79, 0x78, 0x5f, 0x6f, 0x70, 0x65, 0x6e, 0x61, 0x70, 0x69, 0x2e, 0x50,
	0x75, 0x74, 0x53, 0x75, 0x62, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x54, 0x6f, 0x53, 0x68, 0x65, 0x6c,
	0x6c, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x1a, 0x17, 0x2e, 0x62, 0x61,
	0x73, 0x79, 0x78, 0x5f, 0x6f, 0x70, 0x65, 0x6e, 0x61, 0x70, 0x69, 0x2e, 0x53, 0x75, 0x62, 0x6d,
	0x6f, 0x64, 0x65, 0x6c, 0x22, 0x32, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2c, 0x3a, 0x08, 0x73, 0x75,
	0x62, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x1a, 0x20, 0x2f, 0x61, 0x61, 0x73, 0x2f, 0x73, 0x75, 0x62,
	0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2f, 0x7b, 0x73, 0x75, 0x62, 0x6d, 0x6f, 0x64, 0x65, 0x6c,
	0x49, 0x64, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x7d, 0x12, 0x9e, 0x01, 0x0a, 0x20, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x53, 0x75, 0x62, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x46, 0x72, 0x6f, 0x6d, 0x53,
	0x68, 0x65, 0x6c, 0x6c, 0x42, 0x79, 0x49, 0x64, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x12, 0x39, 0x2e,
	0x62, 0x61, 0x73, 0x79, 0x78, 0x5f, 0x6f, 0x70, 0x65, 0x6e, 0x61, 0x70, 0x69, 0x2e, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x53, 0x75, 0x62, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x46, 0x72, 0x6f, 0x6d,
	0x53, 0x68, 0x65, 0x6c, 0x6c, 0x42, 0x79, 0x49, 0x64, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x50, 0x61,
	0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x1a, 0x15, 0x2e, 0x62, 0x61, 0x73, 0x79, 0x78,
	0x5f, 0x6f, 0x70, 0x65, 0x6e, 0x61, 0x70, 0x69, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22,
	0x28, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x22, 0x2a, 0x20, 0x2f, 0x61, 0x61, 0x73, 0x2f, 0x73, 0x75,
	0x62, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2f, 0x7b, 0x73, 0x75, 0x62, 0x6d, 0x6f, 0x64, 0x65,
	0x6c, 0x49, 0x64, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x7d, 0x12, 0xa3, 0x01, 0x0a, 0x1d, 0x47, 0x65,
	0x74, 0x53, 0x75, 0x62, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x46, 0x72, 0x6f, 0x6d, 0x53, 0x68, 0x65,
	0x6c, 0x6c, 0x42, 0x79, 0x49, 0x64, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x12, 0x36, 0x2e, 0x62, 0x61,
	0x73, 0x79, 0x78, 0x5f, 0x6f, 0x70, 0x65, 0x6e, 0x61, 0x70, 0x69, 0x2e, 0x47, 0x65, 0x74, 0x53,
	0x75, 0x62, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x46, 0x72, 0x6f, 0x6d, 0x53, 0x68, 0x65, 0x6c, 0x6c,
	0x42, 0x79, 0x49, 0x64, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74,
	0x65, 0x72, 0x73, 0x1a, 0x17, 0x2e, 0x62, 0x61, 0x73, 0x79, 0x78, 0x5f, 0x6f, 0x70, 0x65, 0x6e,
	0x61, 0x70, 0x69, 0x2e, 0x53, 0x75, 0x62, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x22, 0x31, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x2b, 0x12, 0x29, 0x2f, 0x61, 0x61, 0x73, 0x2f, 0x73, 0x75, 0x62, 0x6d, 0x6f,
	0x64, 0x65, 0x6c, 0x73, 0x2f, 0x7b, 0x73, 0x75, 0x62, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x49, 0x64,
	0x53, 0x68, 0x6f, 0x72, 0x74, 0x7d, 0x2f, 0x73, 0x75, 0x62, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x12,
	0x9a, 0x01, 0x0a, 0x16, 0x53, 0x68, 0x65, 0x6c, 0x6c, 0x47, 0x65, 0x74, 0x53, 0x75, 0x62, 0x6d,
	0x6f, 0x64, 0x65, 0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x12, 0x2f, 0x2e, 0x62, 0x61, 0x73,
	0x79, 0x78, 0x5f, 0x6f, 0x70, 0x65, 0x6e, 0x61, 0x70, 0x69, 0x2e, 0x53, 0x68, 0x65, 0x6c, 0x6c,
	0x47, 0x65, 0x74, 0x53, 0x75, 0x62, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x73, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x1a, 0x15, 0x2e, 0x62, 0x61,
	0x73, 0x79, 0x78, 0x5f, 0x6f, 0x70, 0x65, 0x6e, 0x61, 0x70, 0x69, 0x2e, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x22, 0x38, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x32, 0x12, 0x30, 0x2f, 0x61, 0x61, 0x73,
	0x2f, 0x73, 0x75, 0x62, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2f, 0x7b, 0x73, 0x75, 0x62, 0x6d,
	0x6f, 0x64, 0x65, 0x6c, 0x49, 0x64, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x7d, 0x2f, 0x73, 0x75, 0x62,
	0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x12, 0xb1, 0x01, 0x0a,
	0x18, 0x53, 0x68, 0x65, 0x6c, 0x6c, 0x47, 0x65, 0x74, 0x53, 0x75, 0x62, 0x6d, 0x6f, 0x64, 0x65,
	0x6c, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x31, 0x2e, 0x62, 0x61, 0x73, 0x79,
	0x78, 0x5f, 0x6f, 0x70, 0x65, 0x6e, 0x61, 0x70, 0x69, 0x2e, 0x53, 0x68, 0x65, 0x6c, 0x6c, 0x47,
	0x65, 0x74, 0x53, 0x75, 0x62, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e,
	0x74, 0x73, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x1a, 0x1e, 0x2e, 0x62,
	0x61, 0x73, 0x79, 0x78, 0x5f, 0x6f, 0x70, 0x65, 0x6e, 0x61, 0x70, 0x69, 0x2e, 0x53, 0x75, 0x62,
	0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x22, 0x42, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x3c, 0x12, 0x3a, 0x2f, 0x61, 0x61, 0x73, 0x2f, 0x73, 0x75, 0x62, 0x6d, 0x6f,
	0x64, 0x65, 0x6c, 0x73, 0x2f, 0x7b, 0x73, 0x75, 0x62, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x49, 0x64,
	0x53, 0x68, 0x6f, 0x72, 0x74, 0x7d, 0x2f, 0x73, 0x75, 0x62, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2f,
	0x73, 0x75, 0x62, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73,
	0x12, 0xd1, 0x01, 0x0a, 0x20, 0x53, 0x68, 0x65, 0x6c, 0x6c, 0x47, 0x65, 0x74, 0x53, 0x75, 0x62,
	0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x42, 0x79, 0x49, 0x64,
	0x53, 0x68, 0x6f, 0x72, 0x74, 0x12, 0x39, 0x2e, 0x62, 0x61, 0x73, 0x79, 0x78, 0x5f, 0x6f, 0x70,
	0x65, 0x6e, 0x61, 0x70, 0x69, 0x2e, 0x53, 0x68, 0x65, 0x6c, 0x6c, 0x47, 0x65, 0x74, 0x53, 0x75,
	0x62, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x42, 0x79, 0x49,
	0x64, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73,
	0x1a, 0x1e, 0x2e, 0x62, 0x61, 0x73, 0x79, 0x78, 0x5f, 0x6f, 0x70, 0x65, 0x6e, 0x61, 0x70, 0x69,
	0x2e, 0x53, 0x75, 0x62, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74,
	0x22, 0x52, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x4c, 0x12, 0x4a, 0x2f, 0x61, 0x61, 0x73, 0x2f, 0x73,
	0x75, 0x62, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2f, 0x7b, 0x73, 0x75, 0x62, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x49, 0x64, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x7d, 0x2f, 0x73, 0x75, 0x62, 0x6d, 0x6f,
	0x64, 0x65, 0x6c, 0x2f, 0x73, 0x75, 0x62, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x45, 0x6c, 0x65, 0x6d,
	0x65, 0x6e, 0x74, 0x73, 0x2f, 0x7b, 0x73, 0x65, 0x49, 0x64, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x50,
	0x61, 0x74, 0x68, 0x7d, 0x12, 0xbf, 0x01, 0x0a, 0x17, 0x53, 0x68, 0x65, 0x6c, 0x6c, 0x50, 0x75,
	0x74, 0x53, 0x75, 0x62, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74,
	0x12, 0x30, 0x2e, 0x62, 0x61, 0x73, 0x79, 0x78, 0x5f, 0x6f, 0x70, 0x65, 0x6e, 0x61, 0x70, 0x69,
	0x2e, 0x53, 0x68, 0x65, 0x6c, 0x6c, 0x50, 0x75, 0x74, 0x53, 0x75, 0x62, 0x6d, 0x6f, 0x64, 0x65,
	0x6c, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65,
	0x72, 0x73, 0x1a, 0x1e, 0x2e, 0x62, 0x61, 0x73, 0x79, 0x78, 0x5f, 0x6f, 0x70, 0x65, 0x6e, 0x61,
	0x70, 0x69, 0x2e, 0x53, 0x75, 0x62, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x45, 0x6c, 0x65, 0x6d, 0x65,
	0x6e, 0x74, 0x22, 0x52, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x4c, 0x1a, 0x4a, 0x2f, 0x61, 0x61, 0x73,
	0x2f, 0x73, 0x75, 0x62, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2f, 0x7b, 0x73, 0x75, 0x62, 0x6d,
	0x6f, 0x64, 0x65, 0x6c, 0x49, 0x64, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x7d, 0x2f, 0x73, 0x75, 0x62,
	0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2f, 0x73, 0x75, 0x62, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x45, 0x6c,
	0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2f, 0x7b, 0x73, 0x65, 0x49, 0x64, 0x53, 0x68, 0x6f, 0x72,
	0x74, 0x50, 0x61, 0x74, 0x68, 0x7d, 0x12, 0xce, 0x01, 0x0a, 0x23, 0x53, 0x68, 0x65, 0x6c, 0x6c,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x75, 0x62, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x45, 0x6c,
	0x65, 0x6d, 0x65, 0x6e, 0x74, 0x42, 0x79, 0x49, 0x64, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x12, 0x3c,
	0x2e, 0x62, 0x61, 0x73, 0x79, 0x78, 0x5f, 0x6f, 0x70, 0x65, 0x6e, 0x61, 0x70, 0x69, 0x2e, 0x53,
	0x68, 0x65, 0x6c, 0x6c, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x75, 0x62, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x42, 0x79, 0x49, 0x64, 0x53, 0x68, 0x6f,
	0x72, 0x74, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x1a, 0x15, 0x2e, 0x62,
	0x61, 0x73, 0x79, 0x78, 0x5f, 0x6f, 0x70, 0x65, 0x6e, 0x61, 0x70, 0x69, 0x2e, 0x52, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x22, 0x52, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x4c, 0x2a, 0x4a, 0x2f, 0x61, 0x61,
	0x73, 0x2f, 0x73, 0x75, 0x62, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2f, 0x7b, 0x73, 0x75, 0x62,
	0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x49, 0x64, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x7d, 0x2f, 0x73, 0x75,
	0x62, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2f, 0x73, 0x75, 0x62, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x45,
	0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2f, 0x7b, 0x73, 0x65, 0x49, 0x64, 0x53, 0x68, 0x6f,
	0x72, 0x74, 0x50, 0x61, 0x74, 0x68, 0x7d, 0x12, 0xf9, 0x01, 0x0a, 0x25, 0x53, 0x68, 0x65, 0x6c,
	0x6c, 0x47, 0x65, 0x74, 0x53, 0x75, 0x62, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x45, 0x6c, 0x65, 0x6d,
	0x65, 0x6e, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x42, 0x79, 0x49, 0x64, 0x53, 0x68, 0x6f, 0x72,
	0x74, 0x12, 0x3e, 0x2e, 0x62, 0x61, 0x73, 0x79, 0x78, 0x5f, 0x6f, 0x70, 0x65, 0x6e, 0x61, 0x70,
	0x69, 0x2e, 0x53, 0x68, 0x65, 0x6c, 0x6c, 0x47, 0x65, 0x74, 0x53, 0x75, 0x62, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x42, 0x79,
	0x49, 0x64, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72,
	0x73, 0x1a, 0x36, 0x2e, 0x62, 0x61, 0x73, 0x79, 0x78, 0x5f, 0x6f, 0x70, 0x65, 0x6e, 0x61, 0x70,
	0x69, 0x2e, 0x53, 0x68, 0x65, 0x6c, 0x6c, 0x47, 0x65, 0x74, 0x53, 0x75, 0x62, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x42, 0x79,
	0x49, 0x64, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x4f, 0x4b, 0x22, 0x58, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x52, 0x12, 0x50, 0x2f, 0x61, 0x61, 0x73, 0x2f, 0x73, 0x75, 0x62, 0x6d, 0x6f, 0x64, 0x65, 0x6c,
	0x73, 0x2f, 0x7b, 0x73, 0x75, 0x62, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x49, 0x64, 0x53, 0x68, 0x6f,
	0x72, 0x74, 0x7d, 0x2f, 0x73, 0x75, 0x62, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2f, 0x73, 0x75, 0x62,
	0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2f, 0x7b, 0x73,
	0x65, 0x49, 0x64, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x50, 0x61, 0x74, 0x68, 0x7d, 0x2f, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x12, 0xde, 0x01, 0x0a, 0x25, 0x53, 0x68, 0x65, 0x6c, 0x6c, 0x50, 0x75, 0x74,
	0x53, 0x75, 0x62, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x42, 0x79, 0x49, 0x64, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x12, 0x3e, 0x2e,
	0x62, 0x61, 0x73, 0x79, 0x78, 0x5f, 0x6f, 0x70, 0x65, 0x6e, 0x61, 0x70, 0x69, 0x2e, 0x53, 0x68,
	0x65, 0x6c, 0x6c, 0x50, 0x75, 0x74, 0x53, 0x75, 0x62, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x45, 0x6c,
	0x65, 0x6d, 0x65, 0x6e, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x42, 0x79, 0x49, 0x64, 0x53, 0x68,
	0x6f, 0x72, 0x74, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x1a, 0x1b, 0x2e,
	0x62, 0x61, 0x73, 0x79, 0x78, 0x5f, 0x6f, 0x70, 0x65, 0x6e, 0x61, 0x70, 0x69, 0x2e, 0x45, 0x6c,
	0x65, 0x6d, 0x65, 0x6e, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x58, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x52, 0x1a, 0x50, 0x2f, 0x61, 0x61, 0x73, 0x2f, 0x73, 0x75, 0x62, 0x6d, 0x6f, 0x64, 0x65,
	0x6c, 0x73, 0x2f, 0x7b, 0x73, 0x75, 0x62, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x49, 0x64, 0x53, 0x68,
	0x6f, 0x72, 0x74, 0x7d, 0x2f, 0x73, 0x75, 0x62, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2f, 0x73, 0x75,
	0x62, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2f, 0x7b,
	0x73, 0x65, 0x49, 0x64, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x50, 0x61, 0x74, 0x68, 0x7d, 0x2f, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x12, 0xd2, 0x01, 0x0a, 0x1d, 0x53, 0x68, 0x65, 0x6c, 0x6c, 0x49, 0x6e,
	0x76, 0x6f, 0x6b, 0x65, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x79, 0x49,
	0x64, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x12, 0x36, 0x2e, 0x62, 0x61, 0x73, 0x79, 0x78, 0x5f, 0x6f,
	0x70, 0x65, 0x6e, 0x61, 0x70, 0x69, 0x2e, 0x53, 0x68, 0x65, 0x6c, 0x6c, 0x49, 0x6e, 0x76, 0x6f,
	0x6b, 0x65, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x79, 0x49, 0x64, 0x53,
	0x68, 0x6f, 0x72, 0x74, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x1a, 0x15,
	0x2e, 0x62, 0x61, 0x73, 0x79, 0x78, 0x5f, 0x6f, 0x70, 0x65, 0x6e, 0x61, 0x70, 0x69, 0x2e, 0x52,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x62, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x5c, 0x22, 0x5a, 0x2f,
	0x61, 0x61, 0x73, 0x2f, 0x73, 0x75, 0x62, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2f, 0x7b, 0x73,
	0x75, 0x62, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x49, 0x64, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x7d, 0x2f,
	0x73, 0x75, 0x62, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2f, 0x73, 0x75, 0x62, 0x6d, 0x6f, 0x64, 0x65,
	0x6c, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2f, 0x7b, 0x69, 0x64, 0x53, 0x68, 0x6f,
	0x72, 0x74, 0x50, 0x61, 0x74, 0x68, 0x54, 0x6f, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x7d, 0x2f, 0x69, 0x6e, 0x76, 0x6f, 0x6b, 0x65, 0x12, 0xfa, 0x01, 0x0a, 0x21, 0x53, 0x68,
	0x65, 0x6c, 0x6c, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x76, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x42, 0x79, 0x49, 0x64, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x12,
	0x3a, 0x2e, 0x62, 0x61, 0x73, 0x79, 0x78, 0x5f, 0x6f, 0x70, 0x65, 0x6e, 0x61, 0x70, 0x69, 0x2e,
	0x53, 0x68, 0x65, 0x6c, 0x6c, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x76, 0x6f, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x42, 0x79, 0x49, 0x64, 0x53, 0x68, 0x6f, 0x72,
	0x74, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x1a, 0x21, 0x2e, 0x62, 0x61,
	0x73, 0x79, 0x78, 0x5f, 0x6f, 0x70, 0x65, 0x6e, 0x61, 0x70, 0x69, 0x2e, 0x49, 0x6e, 0x76, 0x6f,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x76,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x70, 0x12, 0x6e, 0x2f, 0x61, 0x61, 0x73, 0x2f, 0x73, 0x75, 0x62,
	0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2f, 0x7b, 0x73, 0x75, 0x62, 0x6d, 0x6f, 0x64, 0x65, 0x6c,
	0x49, 0x64, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x7d, 0x2f, 0x73, 0x75, 0x62, 0x6d, 0x6f, 0x64, 0x65,
	0x6c, 0x2f, 0x73, 0x75, 0x62, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e,
	0x74, 0x73, 0x2f, 0x7b, 0x69, 0x64, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x50, 0x61, 0x74, 0x68, 0x54,
	0x6f, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x7d, 0x2f, 0x69, 0x6e, 0x76, 0x6f,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x2f, 0x7b, 0x72, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x49, 0x64, 0x7d, 0x42, 0xa4, 0x01, 0x0a, 0x11, 0x63, 0x6f, 0x6d, 0x2e, 0x62,
	0x61, 0x73, 0x79, 0x78, 0x5f, 0x6f, 0x70, 0x65, 0x6e, 0x61, 0x70, 0x69, 0x42, 0x11, 0x42, 0x61,
	0x73, 0x79, 0x78, 0x4f, 0x70, 0x65, 0x6e, 0x61, 0x70, 0x69, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50,
	0x01, 0x5a, 0x2c, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x68, 0x69,
	0x72, 0x6f, 0x79, 0x6f, 0x73, 0x68, 0x69, 0x69, 0x2f, 0x67, 0x65, 0x6e, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2f, 0x67, 0x6f, 0x2f, 0x67, 0x65, 0x6e, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0xa2,
	0x02, 0x03, 0x42, 0x58, 0x58, 0xaa, 0x02, 0x0c, 0x42, 0x61, 0x73, 0x79, 0x78, 0x4f, 0x70, 0x65,
	0x6e, 0x61, 0x70, 0x69, 0xca, 0x02, 0x0c, 0x42, 0x61, 0x73, 0x79, 0x78, 0x4f, 0x70, 0x65, 0x6e,
	0x61, 0x70, 0x69, 0xe2, 0x02, 0x18, 0x42, 0x61, 0x73, 0x79, 0x78, 0x4f, 0x70, 0x65, 0x6e, 0x61,
	0x70, 0x69, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02,
	0x0c, 0x42, 0x61, 0x73, 0x79, 0x78, 0x4f, 0x70, 0x65, 0x6e, 0x61, 0x70, 0x69, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_gen_proto_basyx_openapi_proto_rawDescOnce sync.Once
	file_gen_proto_basyx_openapi_proto_rawDescData = file_gen_proto_basyx_openapi_proto_rawDesc
)

func file_gen_proto_basyx_openapi_proto_rawDescGZIP() []byte {
	file_gen_proto_basyx_openapi_proto_rawDescOnce.Do(func() {
		file_gen_proto_basyx_openapi_proto_rawDescData = protoimpl.X.CompressGZIP(file_gen_proto_basyx_openapi_proto_rawDescData)
	})
	return file_gen_proto_basyx_openapi_proto_rawDescData
}

var file_gen_proto_basyx_openapi_proto_enumTypes = make([]protoimpl.EnumInfo, 6)
var file_gen_proto_basyx_openapi_proto_msgTypes = make([]protoimpl.MessageInfo, 55)
var file_gen_proto_basyx_openapi_proto_goTypes = []interface{}{
	(KeyType_Value)(0),                                       // 0: basyx_openapi.KeyType.Value
	(AssetKind_Value)(0),                                     // 1: basyx_openapi.AssetKind.Value
	(KeyElements_Value)(0),                                   // 2: basyx_openapi.KeyElements.Value
	(ModelingKind_Value)(0),                                  // 3: basyx_openapi.ModelingKind.Value
	(MessageType_Value)(0),                                   // 4: basyx_openapi.MessageType.Value
	(ExecutionState_Value)(0),                                // 5: basyx_openapi.ExecutionState.Value
	(*KeyType)(nil),                                          // 6: basyx_openapi.KeyType
	(*Identifier)(nil),                                       // 7: basyx_openapi.Identifier
	(*AdministrativeInformation)(nil),                        // 8: basyx_openapi.AdministrativeInformation
	(*LangString)(nil),                                       // 9: basyx_openapi.LangString
	(*IEndpointSecurity)(nil),                                // 10: basyx_openapi.IEndpointSecurity
	(*IEndpoint)(nil),                                        // 11: basyx_openapi.IEndpoint
	(*ModelType)(nil),                                        // 12: basyx_openapi.ModelType
	(*AssetKind)(nil),                                        // 13: basyx_openapi.AssetKind
	(*KeyElements)(nil),                                      // 14: basyx_openapi.KeyElements
	(*Key)(nil),                                              // 15: basyx_openapi.Key
	(*SubmodelReference)(nil),                                // 16: basyx_openapi.SubmodelReference
	(*Reference)(nil),                                        // 17: basyx_openapi.Reference
	(*IDataSpecificationContent)(nil),                        // 18: basyx_openapi.IDataSpecificationContent
	(*IEmbeddedDataSpecification)(nil),                       // 19: basyx_openapi.IEmbeddedDataSpecification
	(*Asset)(nil),                                            // 20: basyx_openapi.Asset
	(*SubmodelDescriptor)(nil),                               // 21: basyx_openapi.SubmodelDescriptor
	(*AssetAdministrationShellDescriptor)(nil),               // 22: basyx_openapi.AssetAdministrationShellDescriptor
	(*ModelingKind)(nil),                                     // 23: basyx_openapi.ModelingKind
	(*IConstraint)(nil),                                      // 24: basyx_openapi.IConstraint
	(*ISubmodelElement)(nil),                                 // 25: basyx_openapi.ISubmodelElement
	(*Submodel)(nil),                                         // 26: basyx_openapi.Submodel
	(*MessageType)(nil),                                      // 27: basyx_openapi.MessageType
	(*Message)(nil),                                          // 28: basyx_openapi.Message
	(*Entity)(nil),                                           // 29: basyx_openapi.Entity
	(*Result)(nil),                                           // 30: basyx_openapi.Result
	(*SubmodelElement)(nil),                                  // 31: basyx_openapi.SubmodelElement
	(*Value)(nil),                                            // 32: basyx_openapi.Value
	(*ElementValue)(nil),                                     // 33: basyx_openapi.ElementValue
	(*OperationVariable)(nil),                                // 34: basyx_openapi.OperationVariable
	(*InvocationRequest)(nil),                                // 35: basyx_openapi.InvocationRequest
	(*OperationResult)(nil),                                  // 36: basyx_openapi.OperationResult
	(*ExecutionState)(nil),                                   // 37: basyx_openapi.ExecutionState
	(*InvocationResponse)(nil),                               // 38: basyx_openapi.InvocationResponse
	(*AssetAdministrationShellReference)(nil),                // 39: basyx_openapi.AssetAdministrationShellReference
	(*View)(nil),                                             // 40: basyx_openapi.View
	(*ConceptDescriptionReference)(nil),                      // 41: basyx_openapi.ConceptDescriptionReference
	(*MetaData)(nil),                                         // 42: basyx_openapi.MetaData
	(*ConceptDictionary)(nil),                                // 43: basyx_openapi.ConceptDictionary
	(*AssetAdministrationShell)(nil),                         // 44: basyx_openapi.AssetAdministrationShell
	(*GETAasSubmodelsSubmodelIdShortParameters)(nil),         // 45: basyx_openapi.GETAasSubmodelsSubmodelIdShortParameters
	(*PutSubmodelToShellParameters)(nil),                     // 46: basyx_openapi.PutSubmodelToShellParameters
	(*DeleteSubmodelFromShellByIdShortParameters)(nil),       // 47: basyx_openapi.DeleteSubmodelFromShellByIdShortParameters
	(*GetSubmodelFromShellByIdShortParameters)(nil),          // 48: basyx_openapi.GetSubmodelFromShellByIdShortParameters
	(*ShellGetSubmodelValuesParameters)(nil),                 // 49: basyx_openapi.ShellGetSubmodelValuesParameters
	(*ShellGetSubmodelElementsParameters)(nil),               // 50: basyx_openapi.ShellGetSubmodelElementsParameters
	(*ShellGetSubmodelElementByIdShortParameters)(nil),       // 51: basyx_openapi.ShellGetSubmodelElementByIdShortParameters
	(*ShellPutSubmodelElementParameters)(nil),                // 52: basyx_openapi.ShellPutSubmodelElementParameters
	(*ShellDeleteSubmodelElementByIdShortParameters)(nil),    // 53: basyx_openapi.ShellDeleteSubmodelElementByIdShortParameters
	(*ShellGetSubmodelElementValueByIdShortParameters)(nil),  // 54: basyx_openapi.ShellGetSubmodelElementValueByIdShortParameters
	(*ShellGetSubmodelElementValueByIdShortOK)(nil),          // 55: basyx_openapi.ShellGetSubmodelElementValueByIdShortOK
	(*ShellPutSubmodelElementValueByIdShortRequestBody)(nil), // 56: basyx_openapi.ShellPutSubmodelElementValueByIdShortRequestBody
	(*ShellPutSubmodelElementValueByIdShortParameters)(nil),  // 57: basyx_openapi.ShellPutSubmodelElementValueByIdShortParameters
	(*ShellInvokeOperationByIdShortParameters)(nil),          // 58: basyx_openapi.ShellInvokeOperationByIdShortParameters
	(*ShellGetInvocationResultByIdShortParameters)(nil),      // 59: basyx_openapi.ShellGetInvocationResultByIdShortParameters
	nil,                   // 60: basyx_openapi.MetaData.AdditionalPropertiesEntry
	(*emptypb.Empty)(nil), // 61: google.protobuf.Empty
}
var file_gen_proto_basyx_openapi_proto_depIdxs = []int32{
	0,   // 0: basyx_openapi.KeyType.value:type_name -> basyx_openapi.KeyType.Value
	6,   // 1: basyx_openapi.Identifier.id_type:type_name -> basyx_openapi.KeyType
	10,  // 2: basyx_openapi.IEndpoint.security:type_name -> basyx_openapi.IEndpointSecurity
	1,   // 3: basyx_openapi.AssetKind.value:type_name -> basyx_openapi.AssetKind.Value
	2,   // 4: basyx_openapi.KeyElements.value:type_name -> basyx_openapi.KeyElements.Value
	14,  // 5: basyx_openapi.Key.type:type_name -> basyx_openapi.KeyElements
	6,   // 6: basyx_openapi.Key.id_type:type_name -> basyx_openapi.KeyType
	15,  // 7: basyx_openapi.SubmodelReference.keys:type_name -> basyx_openapi.Key
	15,  // 8: basyx_openapi.Reference.keys:type_name -> basyx_openapi.Key
	17,  // 9: basyx_openapi.IEmbeddedDataSpecification.has_data_specification:type_name -> basyx_openapi.Reference
	18,  // 10: basyx_openapi.IEmbeddedDataSpecification.data_specification_content:type_name -> basyx_openapi.IDataSpecificationContent
	13,  // 11: basyx_openapi.Asset.kind:type_name -> basyx_openapi.AssetKind
	16,  // 12: basyx_openapi.Asset.asset_identification_model:type_name -> basyx_openapi.SubmodelReference
	16,  // 13: basyx_openapi.Asset.bill_of_material:type_name -> basyx_openapi.SubmodelReference
	19,  // 14: basyx_openapi.Asset.embedded_data_specifications:type_name -> basyx_openapi.IEmbeddedDataSpecification
	12,  // 15: basyx_openapi.Asset.model_type:type_name -> basyx_openapi.ModelType
	7,   // 16: basyx_openapi.Asset.identification:type_name -> basyx_openapi.Identifier
	8,   // 17: basyx_openapi.Asset.administration:type_name -> basyx_openapi.AdministrativeInformation
	9,   // 18: basyx_openapi.Asset.description:type_name -> basyx_openapi.LangString
	7,   // 19: basyx_openapi.SubmodelDescriptor.identification:type_name -> basyx_openapi.Identifier
	8,   // 20: basyx_openapi.SubmodelDescriptor.administration:type_name -> basyx_openapi.AdministrativeInformation
	9,   // 21: basyx_openapi.SubmodelDescriptor.description:type_name -> basyx_openapi.LangString
	17,  // 22: basyx_openapi.SubmodelDescriptor.semantic_id:type_name -> basyx_openapi.Reference
	11,  // 23: basyx_openapi.SubmodelDescriptor.endpoints:type_name -> basyx_openapi.IEndpoint
	12,  // 24: basyx_openapi.SubmodelDescriptor.model_type:type_name -> basyx_openapi.ModelType
	7,   // 25: basyx_openapi.AssetAdministrationShellDescriptor.identification:type_name -> basyx_openapi.Identifier
	8,   // 26: basyx_openapi.AssetAdministrationShellDescriptor.administration:type_name -> basyx_openapi.AdministrativeInformation
	9,   // 27: basyx_openapi.AssetAdministrationShellDescriptor.description:type_name -> basyx_openapi.LangString
	11,  // 28: basyx_openapi.AssetAdministrationShellDescriptor.endpoints:type_name -> basyx_openapi.IEndpoint
	12,  // 29: basyx_openapi.AssetAdministrationShellDescriptor.model_type:type_name -> basyx_openapi.ModelType
	20,  // 30: basyx_openapi.AssetAdministrationShellDescriptor.asset:type_name -> basyx_openapi.Asset
	21,  // 31: basyx_openapi.AssetAdministrationShellDescriptor.submodels:type_name -> basyx_openapi.SubmodelDescriptor
	3,   // 32: basyx_openapi.ModelingKind.value:type_name -> basyx_openapi.ModelingKind.Value
	12,  // 33: basyx_openapi.IConstraint.model_type:type_name -> basyx_openapi.ModelType
	17,  // 34: basyx_openapi.ISubmodelElement.semantic_id:type_name -> basyx_openapi.Reference
	24,  // 35: basyx_openapi.ISubmodelElement.constraints:type_name -> basyx_openapi.IConstraint
	9,   // 36: basyx_openapi.ISubmodelElement.description:type_name -> basyx_openapi.LangString
	23,  // 37: basyx_openapi.ISubmodelElement.kind:type_name -> basyx_openapi.ModelingKind
	12,  // 38: basyx_openapi.ISubmodelElement.model_type:type_name -> basyx_openapi.ModelType
	19,  // 39: basyx_openapi.ISubmodelElement.embedded_data_specifications:type_name -> basyx_openapi.IEmbeddedDataSpecification
	23,  // 40: basyx_openapi.Submodel.kind:type_name -> basyx_openapi.ModelingKind
	17,  // 41: basyx_openapi.Submodel.semantic_id:type_name -> basyx_openapi.Reference
	25,  // 42: basyx_openapi.Submodel.submodel_elements:type_name -> basyx_openapi.ISubmodelElement
	12,  // 43: basyx_openapi.Submodel.model_type:type_name -> basyx_openapi.ModelType
	19,  // 44: basyx_openapi.Submodel.embedded_data_specifications:type_name -> basyx_openapi.IEmbeddedDataSpecification
	24,  // 45: basyx_openapi.Submodel.qualifiers:type_name -> basyx_openapi.IConstraint
	7,   // 46: basyx_openapi.Submodel.identification:type_name -> basyx_openapi.Identifier
	8,   // 47: basyx_openapi.Submodel.administration:type_name -> basyx_openapi.AdministrativeInformation
	9,   // 48: basyx_openapi.Submodel.description:type_name -> basyx_openapi.LangString
	4,   // 49: basyx_openapi.MessageType.value:type_name -> basyx_openapi.MessageType.Value
	27,  // 50: basyx_openapi.Message.message_type:type_name -> basyx_openapi.MessageType
	29,  // 51: basyx_openapi.Result.entity:type_name -> basyx_openapi.Entity
	28,  // 52: basyx_openapi.Result.messages:type_name -> basyx_openapi.Message
	17,  // 53: basyx_openapi.SubmodelElement.semantic_id:type_name -> basyx_openapi.Reference
	24,  // 54: basyx_openapi.SubmodelElement.qualifiers:type_name -> basyx_openapi.IConstraint
	23,  // 55: basyx_openapi.SubmodelElement.kind:type_name -> basyx_openapi.ModelingKind
	12,  // 56: basyx_openapi.SubmodelElement.model_type:type_name -> basyx_openapi.ModelType
	19,  // 57: basyx_openapi.SubmodelElement.embedded_data_specifications:type_name -> basyx_openapi.IEmbeddedDataSpecification
	9,   // 58: basyx_openapi.SubmodelElement.description:type_name -> basyx_openapi.LangString
	32,  // 59: basyx_openapi.ElementValue.value:type_name -> basyx_openapi.Value
	12,  // 60: basyx_openapi.OperationVariable.model_type:type_name -> basyx_openapi.ModelType
	25,  // 61: basyx_openapi.OperationVariable.value:type_name -> basyx_openapi.ISubmodelElement
	34,  // 62: basyx_openapi.InvocationRequest.input_arguments:type_name -> basyx_openapi.OperationVariable
	34,  // 63: basyx_openapi.InvocationRequest.inoutput_arguments:type_name -> basyx_openapi.OperationVariable
	29,  // 64: basyx_openapi.OperationResult.entity:type_name -> basyx_openapi.Entity
	28,  // 65: basyx_openapi.OperationResult.messages:type_name -> basyx_openapi.Message
	5,   // 66: basyx_openapi.ExecutionState.value:type_name -> basyx_openapi.ExecutionState.Value
	34,  // 67: basyx_openapi.InvocationResponse.inoutput_arguments:type_name -> basyx_openapi.OperationVariable
	34,  // 68: basyx_openapi.InvocationResponse.output_arguments:type_name -> basyx_openapi.OperationVariable
	36,  // 69: basyx_openapi.InvocationResponse.operation_result:type_name -> basyx_openapi.OperationResult
	37,  // 70: basyx_openapi.InvocationResponse.execution_state:type_name -> basyx_openapi.ExecutionState
	15,  // 71: basyx_openapi.AssetAdministrationShellReference.keys:type_name -> basyx_openapi.Key
	17,  // 72: basyx_openapi.View.contained_elements:type_name -> basyx_openapi.Reference
	17,  // 73: basyx_openapi.View.semantic_id:type_name -> basyx_openapi.Reference
	9,   // 74: basyx_openapi.View.description:type_name -> basyx_openapi.LangString
	12,  // 75: basyx_openapi.View.model_type:type_name -> basyx_openapi.ModelType
	15,  // 76: basyx_openapi.ConceptDescriptionReference.keys:type_name -> basyx_openapi.Key
	60,  // 77: basyx_openapi.MetaData.additional_properties:type_name -> basyx_openapi.MetaData.AdditionalPropertiesEntry
	9,   // 78: basyx_openapi.ConceptDictionary.description:type_name -> basyx_openapi.LangString
	42,  // 79: basyx_openapi.ConceptDictionary.meta_data:type_name -> basyx_openapi.MetaData
	41,  // 80: basyx_openapi.ConceptDictionary.concept_descriptions:type_name -> basyx_openapi.ConceptDescriptionReference
	12,  // 81: basyx_openapi.ConceptDictionary.model_type:type_name -> basyx_openapi.ModelType
	20,  // 82: basyx_openapi.AssetAdministrationShell.asset:type_name -> basyx_openapi.Asset
	26,  // 83: basyx_openapi.AssetAdministrationShell.submodels:type_name -> basyx_openapi.Submodel
	39,  // 84: basyx_openapi.AssetAdministrationShell.derived_from:type_name -> basyx_openapi.AssetAdministrationShellReference
	40,  // 85: basyx_openapi.AssetAdministrationShell.views:type_name -> basyx_openapi.View
	12,  // 86: basyx_openapi.AssetAdministrationShell.model_type:type_name -> basyx_openapi.ModelType
	19,  // 87: basyx_openapi.AssetAdministrationShell.embedded_data_specifications:type_name -> basyx_openapi.IEmbeddedDataSpecification
	43,  // 88: basyx_openapi.AssetAdministrationShell.concept_dictionaries:type_name -> basyx_openapi.ConceptDictionary
	7,   // 89: basyx_openapi.AssetAdministrationShell.identification:type_name -> basyx_openapi.Identifier
	8,   // 90: basyx_openapi.AssetAdministrationShell.administration:type_name -> basyx_openapi.AdministrativeInformation
	9,   // 91: basyx_openapi.AssetAdministrationShell.description:type_name -> basyx_openapi.LangString
	26,  // 92: basyx_openapi.PutSubmodelToShellParameters.submodel:type_name -> basyx_openapi.Submodel
	25,  // 93: basyx_openapi.ShellPutSubmodelElementParameters.i_submodel_element:type_name -> basyx_openapi.ISubmodelElement
	56,  // 94: basyx_openapi.ShellPutSubmodelElementValueByIdShortParameters.shell__put_submodel_element_value_by_id_short_request_body:type_name -> basyx_openapi.ShellPutSubmodelElementValueByIdShortRequestBody
	35,  // 95: basyx_openapi.ShellInvokeOperationByIdShortParameters.invocation_request:type_name -> basyx_openapi.InvocationRequest
	61,  // 96: basyx_openapi.Basyx_openapi.GetAssetAdministrationShell:input_type -> google.protobuf.Empty
	61,  // 97: basyx_openapi.Basyx_openapi.GetSubmodelsFromShell:input_type -> google.protobuf.Empty
	45,  // 98: basyx_openapi.Basyx_openapi.GETAasSubmodelsSubmodelIdShort:input_type -> basyx_openapi.GETAasSubmodelsSubmodelIdShortParameters
	46,  // 99: basyx_openapi.Basyx_openapi.PutSubmodelToShell:input_type -> basyx_openapi.PutSubmodelToShellParameters
	47,  // 100: basyx_openapi.Basyx_openapi.DeleteSubmodelFromShellByIdShort:input_type -> basyx_openapi.DeleteSubmodelFromShellByIdShortParameters
	48,  // 101: basyx_openapi.Basyx_openapi.GetSubmodelFromShellByIdShort:input_type -> basyx_openapi.GetSubmodelFromShellByIdShortParameters
	49,  // 102: basyx_openapi.Basyx_openapi.ShellGetSubmodelValues:input_type -> basyx_openapi.ShellGetSubmodelValuesParameters
	50,  // 103: basyx_openapi.Basyx_openapi.ShellGetSubmodelElements:input_type -> basyx_openapi.ShellGetSubmodelElementsParameters
	51,  // 104: basyx_openapi.Basyx_openapi.ShellGetSubmodelElementByIdShort:input_type -> basyx_openapi.ShellGetSubmodelElementByIdShortParameters
	52,  // 105: basyx_openapi.Basyx_openapi.ShellPutSubmodelElement:input_type -> basyx_openapi.ShellPutSubmodelElementParameters
	53,  // 106: basyx_openapi.Basyx_openapi.ShellDeleteSubmodelElementByIdShort:input_type -> basyx_openapi.ShellDeleteSubmodelElementByIdShortParameters
	54,  // 107: basyx_openapi.Basyx_openapi.ShellGetSubmodelElementValueByIdShort:input_type -> basyx_openapi.ShellGetSubmodelElementValueByIdShortParameters
	57,  // 108: basyx_openapi.Basyx_openapi.ShellPutSubmodelElementValueByIdShort:input_type -> basyx_openapi.ShellPutSubmodelElementValueByIdShortParameters
	58,  // 109: basyx_openapi.Basyx_openapi.ShellInvokeOperationByIdShort:input_type -> basyx_openapi.ShellInvokeOperationByIdShortParameters
	59,  // 110: basyx_openapi.Basyx_openapi.ShellGetInvocationResultByIdShort:input_type -> basyx_openapi.ShellGetInvocationResultByIdShortParameters
	22,  // 111: basyx_openapi.Basyx_openapi.GetAssetAdministrationShell:output_type -> basyx_openapi.AssetAdministrationShellDescriptor
	26,  // 112: basyx_openapi.Basyx_openapi.GetSubmodelsFromShell:output_type -> basyx_openapi.Submodel
	26,  // 113: basyx_openapi.Basyx_openapi.GETAasSubmodelsSubmodelIdShort:output_type -> basyx_openapi.Submodel
	26,  // 114: basyx_openapi.Basyx_openapi.PutSubmodelToShell:output_type -> basyx_openapi.Submodel
	30,  // 115: basyx_openapi.Basyx_openapi.DeleteSubmodelFromShellByIdShort:output_type -> basyx_openapi.Result
	26,  // 116: basyx_openapi.Basyx_openapi.GetSubmodelFromShellByIdShort:output_type -> basyx_openapi.Submodel
	30,  // 117: basyx_openapi.Basyx_openapi.ShellGetSubmodelValues:output_type -> basyx_openapi.Result
	31,  // 118: basyx_openapi.Basyx_openapi.ShellGetSubmodelElements:output_type -> basyx_openapi.SubmodelElement
	31,  // 119: basyx_openapi.Basyx_openapi.ShellGetSubmodelElementByIdShort:output_type -> basyx_openapi.SubmodelElement
	31,  // 120: basyx_openapi.Basyx_openapi.ShellPutSubmodelElement:output_type -> basyx_openapi.SubmodelElement
	30,  // 121: basyx_openapi.Basyx_openapi.ShellDeleteSubmodelElementByIdShort:output_type -> basyx_openapi.Result
	55,  // 122: basyx_openapi.Basyx_openapi.ShellGetSubmodelElementValueByIdShort:output_type -> basyx_openapi.ShellGetSubmodelElementValueByIdShortOK
	33,  // 123: basyx_openapi.Basyx_openapi.ShellPutSubmodelElementValueByIdShort:output_type -> basyx_openapi.ElementValue
	30,  // 124: basyx_openapi.Basyx_openapi.ShellInvokeOperationByIdShort:output_type -> basyx_openapi.Result
	38,  // 125: basyx_openapi.Basyx_openapi.ShellGetInvocationResultByIdShort:output_type -> basyx_openapi.InvocationResponse
	111, // [111:126] is the sub-list for method output_type
	96,  // [96:111] is the sub-list for method input_type
	96,  // [96:96] is the sub-list for extension type_name
	96,  // [96:96] is the sub-list for extension extendee
	0,   // [0:96] is the sub-list for field type_name
}

func init() { file_gen_proto_basyx_openapi_proto_init() }
func file_gen_proto_basyx_openapi_proto_init() {
	if File_gen_proto_basyx_openapi_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_gen_proto_basyx_openapi_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KeyType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gen_proto_basyx_openapi_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Identifier); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gen_proto_basyx_openapi_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdministrativeInformation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gen_proto_basyx_openapi_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LangString); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gen_proto_basyx_openapi_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IEndpointSecurity); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gen_proto_basyx_openapi_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IEndpoint); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gen_proto_basyx_openapi_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModelType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gen_proto_basyx_openapi_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AssetKind); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gen_proto_basyx_openapi_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KeyElements); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gen_proto_basyx_openapi_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Key); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gen_proto_basyx_openapi_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubmodelReference); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gen_proto_basyx_openapi_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Reference); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gen_proto_basyx_openapi_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IDataSpecificationContent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gen_proto_basyx_openapi_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IEmbeddedDataSpecification); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gen_proto_basyx_openapi_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Asset); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gen_proto_basyx_openapi_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubmodelDescriptor); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gen_proto_basyx_openapi_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AssetAdministrationShellDescriptor); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gen_proto_basyx_openapi_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModelingKind); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gen_proto_basyx_openapi_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IConstraint); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gen_proto_basyx_openapi_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ISubmodelElement); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gen_proto_basyx_openapi_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Submodel); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gen_proto_basyx_openapi_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gen_proto_basyx_openapi_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Message); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gen_proto_basyx_openapi_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Entity); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gen_proto_basyx_openapi_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Result); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gen_proto_basyx_openapi_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubmodelElement); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gen_proto_basyx_openapi_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Value); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gen_proto_basyx_openapi_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ElementValue); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gen_proto_basyx_openapi_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OperationVariable); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gen_proto_basyx_openapi_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InvocationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gen_proto_basyx_openapi_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OperationResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gen_proto_basyx_openapi_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExecutionState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gen_proto_basyx_openapi_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InvocationResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gen_proto_basyx_openapi_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AssetAdministrationShellReference); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gen_proto_basyx_openapi_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*View); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gen_proto_basyx_openapi_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConceptDescriptionReference); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gen_proto_basyx_openapi_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MetaData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gen_proto_basyx_openapi_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConceptDictionary); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gen_proto_basyx_openapi_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AssetAdministrationShell); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gen_proto_basyx_openapi_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GETAasSubmodelsSubmodelIdShortParameters); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gen_proto_basyx_openapi_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PutSubmodelToShellParameters); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gen_proto_basyx_openapi_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteSubmodelFromShellByIdShortParameters); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gen_proto_basyx_openapi_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSubmodelFromShellByIdShortParameters); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gen_proto_basyx_openapi_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShellGetSubmodelValuesParameters); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gen_proto_basyx_openapi_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShellGetSubmodelElementsParameters); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gen_proto_basyx_openapi_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShellGetSubmodelElementByIdShortParameters); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gen_proto_basyx_openapi_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShellPutSubmodelElementParameters); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gen_proto_basyx_openapi_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShellDeleteSubmodelElementByIdShortParameters); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gen_proto_basyx_openapi_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShellGetSubmodelElementValueByIdShortParameters); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gen_proto_basyx_openapi_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShellGetSubmodelElementValueByIdShortOK); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gen_proto_basyx_openapi_proto_msgTypes[50].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShellPutSubmodelElementValueByIdShortRequestBody); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gen_proto_basyx_openapi_proto_msgTypes[51].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShellPutSubmodelElementValueByIdShortParameters); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gen_proto_basyx_openapi_proto_msgTypes[52].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShellInvokeOperationByIdShortParameters); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gen_proto_basyx_openapi_proto_msgTypes[53].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShellGetInvocationResultByIdShortParameters); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_gen_proto_basyx_openapi_proto_rawDesc,
			NumEnums:      6,
			NumMessages:   55,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_gen_proto_basyx_openapi_proto_goTypes,
		DependencyIndexes: file_gen_proto_basyx_openapi_proto_depIdxs,
		EnumInfos:         file_gen_proto_basyx_openapi_proto_enumTypes,
		MessageInfos:      file_gen_proto_basyx_openapi_proto_msgTypes,
	}.Build()
	File_gen_proto_basyx_openapi_proto = out.File
	file_gen_proto_basyx_openapi_proto_rawDesc = nil
	file_gen_proto_basyx_openapi_proto_goTypes = nil
	file_gen_proto_basyx_openapi_proto_depIdxs = nil
}
