syntax = "proto3";

package basyx_openapi;

import "google/api/annotations.proto";
import "google/protobuf/descriptor.proto";
import "google/protobuf/empty.proto";

message KeyType {
  Value value = 1;

  enum Value {
    UNDEFINED = 0;

    CUSTOM = 1;

    IRI = 2;

    URI = 3;

    IRDI = 4;

    IDSHORT = 5;

    FRAGMENTID = 6;
  }
}

message Identifier {
  string id = 1;

  KeyType id_type = 2;
}

message AdministrativeInformation {
  string version = 1;

  string revision = 2;
}

message LangString {
  string language = 1;

  string text = 2;
}

message IEndpointSecurity {}

message IEndpoint {
  string address = 1;

  string type = 2;

  IEndpointSecurity security = 3;
}

message ModelType {
  string name = 1;
}

message AssetKind {
  Value value = 1;

  enum Value {
    TYPE = 0;

    INSTANCE = 1;
  }
}

message KeyElements {
  Value value = 1;

  enum Value {
    UNDEFINED = 0;

    GLOBALREFERENCE = 1;

    FRAGMENTREFERENCE = 2;

    ACCESSPERMISSIONRULE = 3;

    ANNOTATEDRELATIONSHIPELEMENT = 4;

    BASICEVENT = 5;

    BLOB = 6;

    CAPABILITY = 7;

    CONCEPTDICTIONARY = 8;

    DATAELEMENT = 9;

    FILE = 10;

    ENTITY = 11;

    EVENT = 12;

    MULTILANGUAGEPROPERTY = 13;

    OPERATION = 14;

    PROPERTY = 15;

    RANGE = 16;

    REFERENCEELEMENT = 17;

    RELATIONSHIPELEMENT = 18;

    SUBMODELELEMENT = 19;

    SUBMODELELEMENTCOLLECTION = 20;

    VIEW = 21;

    ASSET = 22;

    ASSETADMINISTRATIONSHELL = 23;

    CONCEPTDESCRIPTION = 24;

    SUBMODEL = 25;
  }
}

message Key {
  KeyElements type = 1;

  KeyType id_type = 2;

  string value = 3;

  bool local = 4;
}

message SubmodelReference {
  repeated Key keys = 1;
}

message Reference {
  repeated Key keys = 1;
}

message IDataSpecificationContent {}

message IEmbeddedDataSpecification {
  Reference has_data_specification = 1;

  IDataSpecificationContent data_specification_content = 2;
}

message Asset {
  string id_short = 1;

  AssetKind kind = 2;

  SubmodelReference asset_identification_model = 3;

  SubmodelReference bill_of_material = 4;

  repeated IEmbeddedDataSpecification embedded_data_specifications = 5;

  ModelType model_type = 6;

  Identifier identification = 7;

  AdministrativeInformation administration = 8;

  string category = 9;

  repeated LangString description = 10;
}

message SubmodelDescriptor {
  string id_short = 1;

  Identifier identification = 2;

  AdministrativeInformation administration = 3;

  repeated LangString description = 4;

  Reference semantic_id = 5;

  repeated IEndpoint endpoints = 6;

  string category = 7;

  ModelType model_type = 8;
}

message AssetAdministrationShellDescriptor {
  string id_short = 1;

  Identifier identification = 2;

  AdministrativeInformation administration = 3;

  repeated LangString description = 4;

  repeated IEndpoint endpoints = 5;

  string category = 6;

  ModelType model_type = 7;

  Asset asset = 8;

  repeated SubmodelDescriptor submodels = 9;
}

message ModelingKind {
  Value value = 1;

  enum Value {
    INSTANCE = 0;

    TEMPLATE = 1;
  }
}

message IConstraint {
  ModelType model_type = 1;
}

message ISubmodelElement {
  string id_short = 1;

  Reference semantic_id = 2;

  repeated IConstraint constraints = 3;

  repeated LangString description = 4;

  string category = 5;

  ModelingKind kind = 6;

  ModelType model_type = 7;

  repeated IEmbeddedDataSpecification embedded_data_specifications = 8;
}

message Submodel {
  string id_short = 1;

  ModelingKind kind = 2;

  Reference semantic_id = 3;

  repeated ISubmodelElement submodel_elements = 4;

  ModelType model_type = 5;

  repeated IEmbeddedDataSpecification embedded_data_specifications = 6;

  repeated IConstraint qualifiers = 7;

  Identifier identification = 8;

  AdministrativeInformation administration = 9;

  string category = 10;

  repeated LangString description = 11;
}

message MessageType {
  Value value = 1;

  enum Value {
    UNSPECIFIED = 0;

    DEBUG = 1;

    INFORMATION = 2;

    WARNING = 3;

    ERROR = 4;

    FATAL = 5;

    EXCEPTION = 6;
  }
}

message Message {
  MessageType message_type = 1;

  string text = 2;

  string code = 3;
}

message Entity {}

message Result {
  bool success = 1;

  bool is_exception = 2;

  Entity entity = 3;

  string entity_type = 4;

  repeated Message messages = 5;
}

message SubmodelElement {
  string id_short = 1;

  Reference semantic_id = 2;

  repeated IConstraint qualifiers = 3;

  ModelingKind kind = 4;

  ModelType model_type = 5;

  repeated IEmbeddedDataSpecification embedded_data_specifications = 6;

  string category = 7;

  repeated LangString description = 8;
}

message Value {}

message ElementValue {
  Value value = 1;
}

message OperationVariable {
  ModelType model_type = 1;

  ISubmodelElement value = 2;
}

message InvocationRequest {
  string request_id = 1;

  repeated OperationVariable input_arguments = 2;

  repeated OperationVariable inoutput_arguments = 3;

  int32 timeout = 4;
}

message OperationResult {
  bool success = 1;

  bool is_exception = 2;

  Entity entity = 3;

  string entity_type = 4;

  repeated Message messages = 5;
}

message ExecutionState {
  Value value = 1;

  enum Value {
    INITIATED = 0;

    RUNNING = 1;

    COMPLETED = 2;

    CANCELED = 3;

    FAILED = 4;

    TIMEOUT = 5;
  }
}

message InvocationResponse {
  string request_id = 1;

  repeated OperationVariable inoutput_arguments = 2;

  repeated OperationVariable output_arguments = 3;

  OperationResult operation_result = 4;

  ExecutionState execution_state = 5;
}

message AssetAdministrationShellReference {
  repeated Key keys = 1;
}

message View {
  string id_short = 1;

  repeated Reference contained_elements = 2;

  Reference semantic_id = 3;

  string category = 4;

  repeated LangString description = 5;

  ModelType model_type = 6;
}

message ConceptDescriptionReference {
  repeated Key keys = 1;
}

message MetaData {
  map<string, string> additional_properties = 1;
}

message ConceptDictionary {
  string id_short = 1;

  string category = 2;

  repeated LangString description = 3;

  MetaData meta_data = 4;

  repeated ConceptDescriptionReference concept_descriptions = 5;

  ModelType model_type = 6;
}

message AssetAdministrationShell {
  string id_short = 1;

  Asset asset = 2;

  repeated Submodel submodels = 3;

  AssetAdministrationShellReference derived_from = 4;

  repeated View views = 5;

  ModelType model_type = 6;

  repeated IEmbeddedDataSpecification embedded_data_specifications = 7;

  repeated ConceptDictionary concept_dictionaries = 8;

  Identifier identification = 9;

  AdministrativeInformation administration = 10;

  string category = 11;

  repeated LangString description = 12;
}

message GETAasSubmodelsSubmodelIdShortParameters {
  string submodel_id_short = 1;
}

message PutSubmodelToShellParameters {
  string submodel_id_short = 1;

  Submodel submodel = 2;
}

message DeleteSubmodelFromShellByIdShortParameters {
  string submodel_id_short = 1;
}

message GetSubmodelFromShellByIdShortParameters {
  string submodel_id_short = 1;
}

message ShellGetSubmodelValuesParameters {
  string submodel_id_short = 1;
}

message ShellGetSubmodelElementsParameters {
  string submodel_id_short = 1;
}

message ShellGetSubmodelElementByIdShortParameters {
  string submodel_id_short = 1;

  string se_id_short_path = 2;
}

message ShellPutSubmodelElementParameters {
  string submodel_id_short = 1;

  string se_id_short_path = 2;

  ISubmodelElement i_submodel_element = 3;
}

message ShellDeleteSubmodelElementByIdShortParameters {
  string submodel_id_short = 1;

  string se_id_short_path = 2;
}

message ShellGetSubmodelElementValueByIdShortParameters {
  string submodel_id_short = 1;

  string se_id_short_path = 2;
}

message ShellGetSubmodelElementValueByIdShortOK {}

message ShellPutSubmodelElementValueByIdShortRequestBody {}

message ShellPutSubmodelElementValueByIdShortParameters {
  string submodel_id_short = 1;

  string se_id_short_path = 2;

  ShellPutSubmodelElementValueByIdShortRequestBody shell__put_submodel_element_value_by_id_short_request_body = 3;
}

message ShellInvokeOperationByIdShortParameters {
  string submodel_id_short = 1;

  string id_short_path_to_operation = 2;

  bool async = 3;

  InvocationRequest invocation_request = 4;
}

message ShellGetInvocationResultByIdShortParameters {
  string submodel_id_short = 1;

  string id_short_path_to_operation = 2;

  string request_id = 3;
}

service Basyx_openapi {
  rpc GetAssetAdministrationShell(google.protobuf.Empty) returns (AssetAdministrationShellDescriptor) {
    option (google.api.http) = {get: "/aas"};
  }

  rpc GetSubmodelsFromShell(google.protobuf.Empty) returns (Submodel) {
    option (google.api.http) = {get: "/aas/submodels"};
  }

  rpc GETAasSubmodelsSubmodelIdShort(GETAasSubmodelsSubmodelIdShortParameters) returns (Submodel) {
    option (google.api.http) = {get: "/aas/submodels/{submodelIdShort}"};
  }

  rpc PutSubmodelToShell(PutSubmodelToShellParameters) returns (Submodel) {
    option (google.api.http) = {
      put: "/aas/submodels/{submodelIdShort}"
      body: "submodel"
    };
  }

  rpc DeleteSubmodelFromShellByIdShort(DeleteSubmodelFromShellByIdShortParameters) returns (Result) {
    option (google.api.http) = {delete: "/aas/submodels/{submodelIdShort}"};
  }

  rpc GetSubmodelFromShellByIdShort(GetSubmodelFromShellByIdShortParameters) returns (Submodel) {
    option (google.api.http) = {get: "/aas/submodels/{submodelIdShort}/submodel"};
  }

  rpc ShellGetSubmodelValues(ShellGetSubmodelValuesParameters) returns (Result) {
    option (google.api.http) = {get: "/aas/submodels/{submodelIdShort}/submodel/values"};
  }

  rpc ShellGetSubmodelElements(ShellGetSubmodelElementsParameters) returns (SubmodelElement) {
    option (google.api.http) = {get: "/aas/submodels/{submodelIdShort}/submodel/submodelElements"};
  }

  rpc ShellGetSubmodelElementByIdShort(ShellGetSubmodelElementByIdShortParameters) returns (SubmodelElement) {
    option (google.api.http) = {get: "/aas/submodels/{submodelIdShort}/submodel/submodelElements/{seIdShortPath}"};
  }

  rpc ShellPutSubmodelElement(ShellPutSubmodelElementParameters) returns (SubmodelElement) {
    option (google.api.http) = {put: "/aas/submodels/{submodelIdShort}/submodel/submodelElements/{seIdShortPath}"};
  }

  rpc ShellDeleteSubmodelElementByIdShort(ShellDeleteSubmodelElementByIdShortParameters) returns (Result) {
    option (google.api.http) = {delete: "/aas/submodels/{submodelIdShort}/submodel/submodelElements/{seIdShortPath}"};
  }

  rpc ShellGetSubmodelElementValueByIdShort(ShellGetSubmodelElementValueByIdShortParameters) returns (ShellGetSubmodelElementValueByIdShortOK) {
    option (google.api.http) = {get: "/aas/submodels/{submodelIdShort}/submodel/submodelElements/{seIdShortPath}/value"};
  }

  rpc ShellPutSubmodelElementValueByIdShort(ShellPutSubmodelElementValueByIdShortParameters) returns (ElementValue) {
    option (google.api.http) = {put: "/aas/submodels/{submodelIdShort}/submodel/submodelElements/{seIdShortPath}/value"};
  }

  rpc ShellInvokeOperationByIdShort(ShellInvokeOperationByIdShortParameters) returns (Result) {
    option (google.api.http) = {post: "/aas/submodels/{submodelIdShort}/submodel/submodelElements/{idShortPathToOperation}/invoke"};
  }

  rpc ShellGetInvocationResultByIdShort(ShellGetInvocationResultByIdShortParameters) returns (InvocationResponse) {
    option (google.api.http) = {get: "/aas/submodels/{submodelIdShort}/submodel/submodelElements/{idShortPathToOperation}/invocationList/{requestId}"};
  }
}
